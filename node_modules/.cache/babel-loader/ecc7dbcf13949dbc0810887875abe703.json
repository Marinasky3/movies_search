{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar _a;\n\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport * as React from 'react';\nimport { intlDateTimeFormat, getPresetDateTimeOptions } from '../../utils/dateTime';\nimport { useI18nContext } from '../I18n';\nvar enableLogs = ((_a = process.env.TZ_LOG) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'true';\n\nfunction computerTimeZone() {\n  var _a, _b, _c, _d;\n\n  return (_d = (_b = (_a = window === null || window === void 0 ? void 0 : window.Intl) === null || _a === void 0 ? void 0 : _a.DateTimeFormat) === null || _b === void 0 ? void 0 : (_c = _b.call(_a)).resolvedOptions) === null || _d === void 0 ? void 0 : _d.call(_c).timeZone;\n}\n\nfunction consoleMessageFormat(_a) {\n  var _b = _a.log,\n      log = _b === void 0 ? '' : _b,\n      result = _a.result,\n      timeZone = _a.timeZone,\n      type = _a.type,\n      value = _a.value;\n\n  if (enableLogs) {\n    console.log(\"core-react: \".concat(log, \" useDateTime format \").concat(type, \"; destintation time zone: \").concat(timeZone, \", argument \").concat(value, \", result \").concat(result));\n  }\n}\n\nfunction consoleMessageCompareShift(_a) {\n  var _b = _a.log,\n      log = _b === void 0 ? '' : _b,\n      result = _a.result,\n      timeZone = _a.timeZone,\n      value = _a.value;\n\n  if (enableLogs) {\n    console.log(\"core-react: \".concat(log, \"; destination time zone \").concat(timeZone, \". Your time zone \").concat(computerTimeZone(), \".\"), '\\nInput:  ', value, '\\nOutput: ', result, '\\nIn ISO: ', {\n      input: value.toISOString(),\n      output: result.toISOString()\n    });\n  }\n}\n\nfunction consoleMessageShiftNoShift(_a) {\n  var _b = _a.log,\n      log = _b === void 0 ? '' : _b,\n      timeZone = _a.timeZone,\n      value = _a.value;\n\n  if (enableLogs) {\n    console.log(\"core-react: \".concat(log, \" utcToZonedTime; destination time zone \").concat(timeZone, \". No argument, return arugment.\\n\"), value);\n  }\n}\n\nexport var dateTimeFormats = {\n  'abbr-weekday-abbr-date': 'abbr-weekday-abbr-date',\n  'abbr-weekday-abbr-date-at-time': 'abbr-weekday-abbr-date-at-time',\n  date: 'date',\n  'date-at-time': 'date-at-time',\n  'numeric-date': 'numeric-date',\n  'numeric-date-at-time': 'numeric-date-at-time',\n  time: 'time',\n  'time-on-abbr-weekday-abbr-date': 'time-on-abbr-weekday-abbr-date',\n  'time-on-weekday-date': 'time-on-weekday-date',\n  'time-on-date': 'time-on-date',\n  'time-on-numeric-date': 'time-on-numeric-date',\n  'weekday-date': 'weekday-date',\n  'weekday-date-at-time': 'weekday-date-at-time',\n  none: 'none' // browser default 1/8/2021\n\n};\nvar DateTimeContext = React.createContext({});\nexport function DateTimeProvider(_a) {\n  var children = _a.children,\n      hour12 = _a.hour12,\n      timeZone = _a.timeZone;\n  return React.createElement(DateTimeContext.Provider, {\n    value: {\n      hour12: hour12,\n      timeZone: timeZone\n    }\n  }, children);\n}\nvar emptyCache = {};\nexport function useDateTime() {\n  var I18n = useI18nContext();\n\n  var _a = React.useContext(DateTimeContext),\n      hour12 = _a.hour12,\n      timeZone = _a.timeZone;\n\n  var _b = React.useState(emptyCache),\n      cache = _b[0],\n      setCache = _b[1];\n\n  var getDateFormatter = React.useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var key = JSON.stringify(args);\n\n    if (cache[key]) {\n      return cache[key];\n    }\n\n    var newFormat = intlDateTimeFormat.apply(void 0, args);\n    setCache(function (state) {\n      var _a;\n\n      return __assign(__assign({}, state), (_a = {}, _a[key] = newFormat, _a));\n    });\n    return newFormat;\n  }, [cache, setCache]);\n  var format = React.useCallback(function (value, type, options, timeOptions, UNSAFE_log) {\n    if (type.startsWith('time-on-')) {\n      var time = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions('time')), {\n        hour12: hour12,\n        timeZone: timeZone\n      }), timeOptions)).format(value);\n      var date = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions(type.replace('time-on-', ''))), {\n        hour12: hour12,\n        timeZone: timeZone\n      }), options)).format(value);\n      var result_1 = I18n.t('timeOnDate', {\n        time: time,\n        date: date,\n        scope: 'core.dateTimeFormat'\n      });\n\n      if (UNSAFE_log) {\n        consoleMessageFormat({\n          log: UNSAFE_log,\n          result: result_1,\n          timeZone: timeZone,\n          type: type,\n          value: value\n        });\n      }\n\n      return result_1;\n    }\n\n    if (type.endsWith('-at-time')) {\n      var time = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions('time')), {\n        hour12: hour12,\n        timeZone: timeZone\n      }), timeOptions)).format(value);\n      var date = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions(type.replace('-at-time', ''))), {\n        hour12: hour12,\n        timeZone: timeZone\n      }), options)).format(value);\n      var result_2 = I18n.t('dateAtTime', {\n        time: time,\n        date: date,\n        scope: 'core.dateTimeFormat'\n      });\n\n      if (UNSAFE_log) {\n        consoleMessageFormat({\n          log: UNSAFE_log,\n          result: result_2,\n          timeZone: timeZone,\n          type: type,\n          value: value\n        });\n      }\n\n      return result_2;\n    }\n\n    var result = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions(type)), {\n      hour12: hour12,\n      timeZone: timeZone\n    }), options)).format(value);\n\n    if (UNSAFE_log) {\n      consoleMessageFormat({\n        log: UNSAFE_log,\n        timeZone: timeZone,\n        type: type,\n        result: result,\n        value: value\n      });\n    }\n\n    return result;\n  }, [getDateFormatter, I18n.locale, hour12, timeZone]);\n\n  function shiftUtcToZonedTime(value, log) {\n    if (value && timeZone) {\n      var result = utcToZonedTime(value, timeZone);\n\n      if (log) {\n        consoleMessageCompareShift({\n          log: \"\".concat(log, \" utcToZonedTime\"),\n          timeZone: timeZone,\n          result: result,\n          value: value\n        });\n      }\n\n      return result;\n    }\n\n    if (log) {\n      consoleMessageShiftNoShift({\n        log: \"\".concat(log, \" utcToZonedTime\"),\n        timeZone: timeZone,\n        value: value\n      });\n    }\n\n    return value;\n  }\n\n  function shiftZonedTimeToUtc(value, log) {\n    if (value && timeZone) {\n      var result = zonedTimeToUtc(value, timeZone);\n\n      if (log) {\n        consoleMessageCompareShift({\n          log: \"\".concat(log, \" zonedTimeToUtc\"),\n          timeZone: timeZone,\n          result: result,\n          value: value\n        });\n      }\n\n      return result;\n    }\n\n    if (log) {\n      consoleMessageShiftNoShift({\n        log: \"\".concat(log, \" zonedTimeToUtc\"),\n        timeZone: timeZone,\n        value: value\n      });\n    }\n\n    return value;\n  }\n\n  var newDate = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return timeZone ? utcToZonedTime(new (Date.bind.apply(Date, __spreadArray([void 0], args, false)))(), timeZone) : new (Date.bind.apply(Date, __spreadArray([void 0], args, false)))();\n  };\n\n  return {\n    format: format,\n    newDate: newDate,\n    shiftUtcToZonedTime: shiftUtcToZonedTime,\n    shiftZonedTimeToUtc: shiftZonedTimeToUtc\n  };\n}","map":{"version":3,"sources":["../../../../src/state/DateTime/DateTime.tsx"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar _a;\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport * as React from 'react';\nimport { intlDateTimeFormat, getPresetDateTimeOptions, } from '../../utils/dateTime';\nimport { useI18nContext } from '../I18n';\nvar enableLogs = ((_a = process.env.TZ_LOG) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'true';\nfunction computerTimeZone() {\n    var _a, _b, _c, _d;\n    return (_d = (_b = (_a = window === null || window === void 0 ? void 0 : window.Intl) === null || _a === void 0 ? void 0 : _a.DateTimeFormat) === null || _b === void 0 ? void 0 : (_c = _b.call(_a)).resolvedOptions) === null || _d === void 0 ? void 0 : _d.call(_c).timeZone;\n}\nfunction consoleMessageFormat(_a) {\n    var _b = _a.log, log = _b === void 0 ? '' : _b, result = _a.result, timeZone = _a.timeZone, type = _a.type, value = _a.value;\n    if (enableLogs) {\n        console.log(\"core-react: \".concat(log, \" useDateTime format \").concat(type, \"; destintation time zone: \").concat(timeZone, \", argument \").concat(value, \", result \").concat(result));\n    }\n}\nfunction consoleMessageCompareShift(_a) {\n    var _b = _a.log, log = _b === void 0 ? '' : _b, result = _a.result, timeZone = _a.timeZone, value = _a.value;\n    if (enableLogs) {\n        console.log(\"core-react: \".concat(log, \"; destination time zone \").concat(timeZone, \". Your time zone \").concat(computerTimeZone(), \".\"), '\\nInput:  ', value, '\\nOutput: ', result, '\\nIn ISO: ', {\n            input: value.toISOString(),\n            output: result.toISOString(),\n        });\n    }\n}\nfunction consoleMessageShiftNoShift(_a) {\n    var _b = _a.log, log = _b === void 0 ? '' : _b, timeZone = _a.timeZone, value = _a.value;\n    if (enableLogs) {\n        console.log(\"core-react: \".concat(log, \" utcToZonedTime; destination time zone \").concat(timeZone, \". No argument, return arugment.\\n\"), value);\n    }\n}\nexport var dateTimeFormats = {\n    'abbr-weekday-abbr-date': 'abbr-weekday-abbr-date',\n    'abbr-weekday-abbr-date-at-time': 'abbr-weekday-abbr-date-at-time',\n    date: 'date',\n    'date-at-time': 'date-at-time',\n    'numeric-date': 'numeric-date',\n    'numeric-date-at-time': 'numeric-date-at-time',\n    time: 'time',\n    'time-on-abbr-weekday-abbr-date': 'time-on-abbr-weekday-abbr-date',\n    'time-on-weekday-date': 'time-on-weekday-date',\n    'time-on-date': 'time-on-date',\n    'time-on-numeric-date': 'time-on-numeric-date',\n    'weekday-date': 'weekday-date',\n    'weekday-date-at-time': 'weekday-date-at-time',\n    none: 'none', // browser default 1/8/2021\n};\nvar DateTimeContext = React.createContext({});\nexport function DateTimeProvider(_a) {\n    var children = _a.children, hour12 = _a.hour12, timeZone = _a.timeZone;\n    return (React.createElement(DateTimeContext.Provider, { value: { hour12: hour12, timeZone: timeZone } }, children));\n}\nvar emptyCache = {};\nexport function useDateTime() {\n    var I18n = useI18nContext();\n    var _a = React.useContext(DateTimeContext), hour12 = _a.hour12, timeZone = _a.timeZone;\n    var _b = React.useState(emptyCache), cache = _b[0], setCache = _b[1];\n    var getDateFormatter = React.useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var key = JSON.stringify(args);\n        if (cache[key]) {\n            return cache[key];\n        }\n        var newFormat = intlDateTimeFormat.apply(void 0, args);\n        setCache(function (state) {\n            var _a;\n            return (__assign(__assign({}, state), (_a = {}, _a[key] = newFormat, _a)));\n        });\n        return newFormat;\n    }, [cache, setCache]);\n    var format = React.useCallback(function (value, type, options, timeOptions, UNSAFE_log) {\n        if (type.startsWith('time-on-')) {\n            var time = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions('time')), { hour12: hour12, timeZone: timeZone }), timeOptions)).format(value);\n            var date = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions(type.replace('time-on-', ''))), { hour12: hour12, timeZone: timeZone }), options)).format(value);\n            var result_1 = I18n.t('timeOnDate', {\n                time: time,\n                date: date,\n                scope: 'core.dateTimeFormat',\n            });\n            if (UNSAFE_log) {\n                consoleMessageFormat({\n                    log: UNSAFE_log,\n                    result: result_1,\n                    timeZone: timeZone,\n                    type: type,\n                    value: value,\n                });\n            }\n            return result_1;\n        }\n        if (type.endsWith('-at-time')) {\n            var time = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions('time')), { hour12: hour12, timeZone: timeZone }), timeOptions)).format(value);\n            var date = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions(type.replace('-at-time', ''))), { hour12: hour12, timeZone: timeZone }), options)).format(value);\n            var result_2 = I18n.t('dateAtTime', {\n                time: time,\n                date: date,\n                scope: 'core.dateTimeFormat',\n            });\n            if (UNSAFE_log) {\n                consoleMessageFormat({\n                    log: UNSAFE_log,\n                    result: result_2,\n                    timeZone: timeZone,\n                    type: type,\n                    value: value,\n                });\n            }\n            return result_2;\n        }\n        var result = getDateFormatter(I18n.locale, __assign(__assign(__assign({}, getPresetDateTimeOptions(type)), { hour12: hour12, timeZone: timeZone }), options)).format(value);\n        if (UNSAFE_log) {\n            consoleMessageFormat({\n                log: UNSAFE_log,\n                timeZone: timeZone,\n                type: type,\n                result: result,\n                value: value,\n            });\n        }\n        return result;\n    }, [getDateFormatter, I18n.locale, hour12, timeZone]);\n    function shiftUtcToZonedTime(value, log) {\n        if (value && timeZone) {\n            var result = utcToZonedTime(value, timeZone);\n            if (log) {\n                consoleMessageCompareShift({\n                    log: \"\".concat(log, \" utcToZonedTime\"),\n                    timeZone: timeZone,\n                    result: result,\n                    value: value,\n                });\n            }\n            return result;\n        }\n        if (log) {\n            consoleMessageShiftNoShift({\n                log: \"\".concat(log, \" utcToZonedTime\"),\n                timeZone: timeZone,\n                value: value,\n            });\n        }\n        return value;\n    }\n    function shiftZonedTimeToUtc(value, log) {\n        if (value && timeZone) {\n            var result = zonedTimeToUtc(value, timeZone);\n            if (log) {\n                consoleMessageCompareShift({\n                    log: \"\".concat(log, \" zonedTimeToUtc\"),\n                    timeZone: timeZone,\n                    result: result,\n                    value: value,\n                });\n            }\n            return result;\n        }\n        if (log) {\n            consoleMessageShiftNoShift({\n                log: \"\".concat(log, \" zonedTimeToUtc\"),\n                timeZone: timeZone,\n                value: value,\n            });\n        }\n        return value;\n    }\n    var newDate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return timeZone\n            ? utcToZonedTime(new (Date.bind.apply(Date, __spreadArray([void 0], args, false)))(), timeZone)\n            : new (Date.bind.apply(Date, __spreadArray([void 0], args, false)))();\n    };\n    return {\n        format: format,\n        newDate: newDate,\n        shiftUtcToZonedTime: shiftUtcToZonedTime,\n        shiftZonedTimeToUtc: shiftZonedTimeToUtc,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}