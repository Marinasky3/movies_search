{"ast":null,"code":"import { addDays as addDaysFn, addMonths as addMonthsFn, eachDayOfInterval as eachDayFn, format as formatFn, getDate as getDateFn, getDay as getDayFn, getMonth as getMonthFn, getYear as getYearFn, isAfter as isAfterFn, isBefore as isBeforeFn, isSameDay as isSameDayFn, isSameMonth as isSameMonthFn, isToday as isTodayFn, isWithinInterval as isWithinRangeFn, startOfMonth as startOfMonthFn, startOfWeek, subDays as subDaysFn, subMonths as subMonthsFn, subYears as subYearsFn } from 'date-fns';\nimport { de, enUS as en, es, fr, is, ko, pt, th } from 'date-fns/esm/locale';\nimport { range, splitEvery } from 'ramda';\nvar dateFnsLocales = {\n  en: en,\n  'en-CA': en,\n  'fr-CA': fr,\n  'fr-FR': fr,\n  es: es,\n  'es-ES': es,\n  'en-AE': en,\n  'en-AU': en,\n  'en-GB': en,\n  'en-SG': en,\n  ko: ko,\n  'th-TH': th,\n  pt: pt,\n  'is-IS': is,\n  'de-DE': de,\n  pseudo: en\n}; // values 0 - 6 represent indexes of days of the week, Sunday - Saturday respectively\n\nvar localeStartDayOfWeek = {\n  en: 0,\n  'en-CA': 0,\n  'fr-CA': 0,\n  'fr-FR': 1,\n  es: 1,\n  'es-ES': 1,\n  'en-AE': 6,\n  'en-AU': 0,\n  'en-GB': 1,\n  'en-SG': 0,\n  ko: 0,\n  'th-TH': 0,\n  pt: 0,\n  'is-IS': 1,\n  'de-DE': 1,\n  pseudo: 0\n};\nexport var maxMonth = 12;\nexport var minYear = 0;\nexport var maxYear = new Date().getFullYear() + 100; // rows in calendar\n\nvar calendarWeeks = 6;\nvar daysInWeek = 7;\nexport var daysInCalendar = calendarWeeks * daysInWeek;\nexport var addDays = addDaysFn;\nexport var addMonths = addMonthsFn;\nexport var eachDay = function (date1, date2) {\n  return eachDayFn({\n    start: date1,\n    end: date2\n  });\n};\nexport var format = formatFn; // An entire date object has to be formed, format(month, 'MMM') breaks for month >= 10 (it just outputs 'Dec')\n\nexport var formatMonth = function (month) {\n  return formatFn(normalizeNewDate(2019, month, 2), 'MMM');\n};\nexport var getDate = getDateFn;\nexport var getStartDayOfWeek = function (locale) {\n  return localeStartDayOfWeek[locale] || localeStartDayOfWeek['en'];\n};\nexport var getDates = function (date, locale) {\n  var startDayOfWeek = getStartDayOfWeek(locale); // Shift first day appearing on the calendar based on day of the week of the first day of the month and based on the start day of the week\n\n  var dayShift = 7 - startDayOfWeek;\n  var subDays = (getDayFn(startOfMonthFn(date)) + dayShift) % 7;\n  var start = subDaysFn(startOfMonthFn(date), subDays);\n  var end = addDaysFn(start, daysInCalendar - 1);\n  return eachDayFn({\n    start: start,\n    end: end\n  });\n};\nexport var getMonth = getMonthFn;\nexport var getRows = splitEvery(7);\nexport var getYear = getYearFn;\nexport var isAfter = function (date1, date2) {\n  return isAfterFn(normalizeExistingDate(date1), normalizeExistingDate(date2));\n};\nexport var isBefore = function (date1, date2) {\n  return isBeforeFn(normalizeExistingDate(date1), normalizeExistingDate(date2));\n};\nexport var isSameDay = function (date1, date2) {\n  return isSameDayFn(normalizeExistingDate(date1), normalizeExistingDate(date2));\n};\nexport var isSameMonth = isSameMonthFn;\nexport var isToday = isTodayFn;\nexport var isWithinRange = function (date, start, end) {\n  if (!start || !end) {\n    return false;\n  }\n\n  return isWithinRangeFn(normalizeExistingDate(date), {\n    start: normalizeExistingDate(start),\n    end: normalizeExistingDate(end)\n  });\n};\nexport var normalizeExistingDate = function (day) {\n  return normalizeNewDate(getYearFn(day), getMonthFn(day), getDateFn(day));\n};\nexport var normalizeNewDate = function (year, month, day, hour, minute, second, millisecond) {\n  if (hour === void 0) {\n    hour = 0;\n  }\n\n  if (minute === void 0) {\n    minute = 0;\n  }\n\n  if (second === void 0) {\n    second = 0;\n  }\n\n  if (millisecond === void 0) {\n    millisecond = 0;\n  }\n\n  var normalizedDate = new Date();\n  normalizedDate.setFullYear(year, month, day);\n  normalizedDate.setHours(hour);\n  normalizedDate.setMinutes(minute);\n  normalizedDate.setSeconds(second);\n  normalizedDate.setMilliseconds(millisecond);\n  return normalizedDate;\n};\nexport var getMonthLabel = function (month, locale) {\n  if (locale === void 0) {\n    locale = 'en';\n  }\n\n  return formatFn(normalizeNewDate(1970, month, 1), 'MMM', {\n    locale: dateFnsLocales[locale]\n  });\n};\nexport var getMonthOptions = function (locale) {\n  return range(0, 12).map(function (value) {\n    return {\n      value: value,\n      label: getMonthLabel(value, locale)\n    };\n  });\n};\nexport var getYearOptions = function (date) {\n  var start = Math.max(minYear, getYear(subYearsFn(date, 10)));\n  return range(start, start + 21).map(function (value) {\n    return {\n      value: value,\n      label: String(value).padStart(4, '0')\n    };\n  });\n};\nexport var getDayOfWeekLabel = function (day, locale) {\n  if (locale === void 0) {\n    locale = 'en';\n  }\n\n  return formatFn(addDaysFn(startOfWeek(new Date()), day), 'iiiiii', {\n    locale: dateFnsLocales[locale]\n  });\n};\nexport var updateMonth = function (date, month) {\n  return normalizeNewDate(getYear(date), month, getDate(date));\n};\nexport var updateYear = function (date, year) {\n  return normalizeNewDate(year, getMonth(date), getDate(date));\n};\nexport var subDays = subDaysFn;\nexport var subMonths = subMonthsFn;\nvar CalendarHelpers = {\n  addDays: addDays,\n  addMonths: addMonths,\n  eachDay: eachDay,\n  format: format,\n  formatMonth: formatMonth,\n  getDate: getDate,\n  getDates: getDates,\n  getMonth: getMonth,\n  getMonthLabel: getMonthLabel,\n  getMonthOptions: getMonthOptions,\n  getRows: getRows,\n  getYear: getYear,\n  getYearOptions: getYearOptions,\n  isAfter: isAfter,\n  isBefore: isBefore,\n  isSameDay: isSameDay,\n  isSameMonth: isSameMonth,\n  isToday: isToday,\n  isWithinRange: isWithinRange,\n  normalizeExistingDate: normalizeExistingDate,\n  normalizeNewDate: normalizeNewDate,\n  subDays: subDays,\n  subMonths: subMonths,\n  updateMonth: updateMonth,\n  updateYear: updateYear\n};\nexport default CalendarHelpers;","map":{"version":3,"sources":["../../../src/utils/CalendarHelpers.ts"],"names":[],"mappings":"AAAA,SACE,OAAO,IAAI,SADb,EAEE,SAAS,IAAI,WAFf,EAGE,iBAAiB,IAAI,SAHvB,EAIE,MAAM,IAAI,QAJZ,EAKE,OAAO,IAAI,SALb,EAME,MAAM,IAAI,QANZ,EAOE,QAAQ,IAAI,UAPd,EAQE,OAAO,IAAI,SARb,EASE,OAAO,IAAI,SATb,EAUE,QAAQ,IAAI,UAVd,EAWE,SAAS,IAAI,WAXf,EAYE,WAAW,IAAI,aAZjB,EAaE,OAAO,IAAI,SAbb,EAcE,gBAAgB,IAAI,eAdtB,EAeE,YAAY,IAAI,cAflB,EAgBE,WAhBF,EAiBE,OAAO,IAAI,SAjBb,EAkBE,SAAS,IAAI,WAlBf,EAmBE,QAAQ,IAAI,UAnBd,QAoBO,UApBP;AAqBA,SAAS,EAAT,EAAa,IAAI,IAAI,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,QAAuD,qBAAvD;AACA,SAAS,KAAT,EAAgB,UAAhB,QAAkC,OAAlC;AAKA,IAAM,cAAc,GAAmB;AACrC,EAAA,EAAE,EAAE,EADiC;AAErC,WAAS,EAF4B;AAGrC,WAAS,EAH4B;AAIrC,WAAS,EAJ4B;AAKrC,EAAA,EAAE,EAAE,EALiC;AAMrC,WAAS,EAN4B;AAOrC,WAAS,EAP4B;AAQrC,WAAS,EAR4B;AASrC,WAAS,EAT4B;AAUrC,WAAS,EAV4B;AAWrC,EAAA,EAAE,EAAE,EAXiC;AAYrC,WAAS,EAZ4B;AAarC,EAAA,EAAE,EAAE,EAbiC;AAcrC,WAAS,EAd4B;AAerC,WAAS,EAf4B;AAgBrC,EAAA,MAAM,EAAE;AAhB6B,CAAvC,C,CAqBA;;AACA,IAAM,oBAAoB,GAAyB;AACjD,EAAA,EAAE,EAAE,CAD6C;AAEjD,WAAS,CAFwC;AAGjD,WAAS,CAHwC;AAIjD,WAAS,CAJwC;AAKjD,EAAA,EAAE,EAAE,CAL6C;AAMjD,WAAS,CANwC;AAOjD,WAAS,CAPwC;AAQjD,WAAS,CARwC;AASjD,WAAS,CATwC;AAUjD,WAAS,CAVwC;AAWjD,EAAA,EAAE,EAAE,CAX6C;AAYjD,WAAS,CAZwC;AAajD,EAAA,EAAE,EAAE,CAb6C;AAcjD,WAAS,CAdwC;AAejD,WAAS,CAfwC;AAgBjD,EAAA,MAAM,EAAE;AAhByC,CAAnD;AAmBA,OAAO,IAAM,QAAQ,GAAG,EAAjB;AAEP,OAAO,IAAM,OAAO,GAAW,CAAxB;AAEP,OAAO,IAAM,OAAO,GAAW,IAAI,IAAJ,GAAW,WAAX,KAA2B,GAAnD,C,CAEP;;AACA,IAAM,aAAa,GAAW,CAA9B;AAEA,IAAM,UAAU,GAAW,CAA3B;AAEA,OAAO,IAAM,cAAc,GAAW,aAAa,GAAG,UAA/C;AAEP,OAAO,IAAM,OAAO,GAAsC,SAAnD;AAEP,OAAO,IAAM,SAAS,GAAsC,WAArD;AAEP,OAAO,IAAM,OAAO,GAAyC,UAAC,KAAD,EAAQ,KAAR,EAAa;AACxE,SAAA,SAAS,CAAC;AAAE,IAAA,KAAK,EAAE,KAAT;AAAgB,IAAA,GAAG,EAAE;AAArB,GAAD,CAAT;AAAuC,CADlC;AAGP,OAAO,IAAM,MAAM,GAAiD,QAA7D,C,CAEP;;AACA,OAAO,IAAM,WAAW,GAA8B,UAAC,KAAD,EAAM;AAC1D,SAAA,QAAQ,CAAC,gBAAgB,CAAC,IAAD,EAAO,KAAP,EAAc,CAAd,CAAjB,EAAmC,KAAnC,CAAR;AAAiD,CAD5C;AAGP,OAAO,IAAM,OAAO,GAA2B,SAAxC;AAEP,OAAO,IAAM,iBAAiB,GAA+B,UAAC,MAAD,EAAO;AAClE,SAAA,oBAAoB,CAAC,MAAD,CAApB,IAAgC,oBAAoB,CAAC,IAAD,CAApD;AAA0D,CADrD;AAGP,OAAO,IAAM,QAAQ,GAA2C,UAC9D,IAD8D,EAE9D,MAF8D,EAExD;AAEN,MAAM,cAAc,GAAW,iBAAiB,CAAC,MAAD,CAAhD,CAFM,CAIN;;AACA,MAAM,QAAQ,GAAG,IAAI,cAArB;AACA,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAD,CAAf,CAAR,GAAiC,QAAlC,IAA8C,CAA9D;AAEA,MAAM,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC,IAAD,CAAf,EAAuB,OAAvB,CAAvB;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,KAAD,EAAQ,cAAc,GAAG,CAAzB,CAArB;AAEA,SAAO,SAAS,CAAC;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,GAAG,EAAA;AAAZ,GAAD,CAAhB;AACD,CAdM;AAgBP,OAAO,IAAM,QAAQ,GAA2B,UAAzC;AAEP,OAAO,IAAM,OAAO,GAAgC,UAAU,CAAC,CAAD,CAAvD;AAEP,OAAO,IAAM,OAAO,GAA2B,SAAxC;AAEP,OAAO,IAAM,OAAO,GAA0C,UAAC,KAAD,EAAQ,KAAR,EAAa;AACzE,SAAA,SAAS,CAAC,qBAAqB,CAAC,KAAD,CAAtB,EAA+B,qBAAqB,CAAC,KAAD,CAApD,CAAT;AAAqE,CADhE;AAGP,OAAO,IAAM,QAAQ,GAA0C,UAAC,KAAD,EAAQ,KAAR,EAAa;AAC1E,SAAA,UAAU,CAAC,qBAAqB,CAAC,KAAD,CAAtB,EAA+B,qBAAqB,CAAC,KAAD,CAApD,CAAV;AAAsE,CADjE;AAGP,OAAO,IAAM,SAAS,GAA0C,UAC9D,KAD8D,EAE9D,KAF8D,EAEzD;AACF,SAAA,WAAW,CAAC,qBAAqB,CAAC,KAAD,CAAtB,EAA+B,qBAAqB,CAA/D,KAA+D,CAApD,CAAX;AAAuE,CAHrE;AAKP,OAAO,IAAM,WAAW,GAA0C,aAA3D;AAEP,OAAO,IAAM,OAAO,GAA4B,SAAzC;AAEP,OAAO,IAAM,aAAa,GACxB,UAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAiB;AACf,MAAI,CAAC,KAAD,IAAU,CAAC,GAAf,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,SAAO,eAAe,CAAC,qBAAqB,CAAC,IAAD,CAAtB,EAA8B;AAClD,IAAA,KAAK,EAAE,qBAAqB,CAAC,KAAD,CADsB;AAElD,IAAA,GAAG,EAAE,qBAAqB,CAAC,GAAD;AAFwB,GAA9B,CAAtB;AAID,CAVI;AAYP,OAAO,IAAM,qBAAqB,GAAwB,UAAC,GAAD,EAAI;AAC5D,SAAA,gBAAgB,CAAC,SAAS,CAAC,GAAD,CAAV,EAAiB,UAAU,CAAC,GAAD,CAA3B,EAAkC,SAAS,CAAC,GAAD,CAA3C,CAAhB;AAAiE,CAD5D;AAGP,OAAO,IAAM,gBAAgB,GAQjB,UACV,IADU,EAEV,KAFU,EAGV,GAHU,EAIV,IAJU,EAKV,MALU,EAMV,MANU,EAOV,WAPU,EAOK;AAHf,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAQ;;AACR,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAU;;AACV,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAU;;AACV,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAe;;AAEf,MAAM,cAAc,GAAG,IAAI,IAAJ,EAAvB;AACA,EAAA,cAAc,CAAC,WAAf,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,GAAxC;AACA,EAAA,cAAc,CAAC,QAAf,CAAwB,IAAxB;AACA,EAAA,cAAc,CAAC,UAAf,CAA0B,MAA1B;AACA,EAAA,cAAc,CAAC,UAAf,CAA0B,MAA1B;AACA,EAAA,cAAc,CAAC,eAAf,CAA+B,WAA/B;AAEA,SAAO,cAAP;AACD,CAzBM;AAgCP,OAAO,IAAM,aAAa,GAAG,UAAC,KAAD,EAAgB,MAAhB,EAAqC;AAArB,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,IAAA;AAAqB;;AAChE,SAAO,QAAQ,CAAC,gBAAgB,CAAC,IAAD,EAAO,KAAP,EAAc,CAAd,CAAjB,EAAmC,KAAnC,EAA0C;AACvD,IAAA,MAAM,EAAE,cAAc,CAAC,MAAD;AADiC,GAA1C,CAAf;AAGD,CAJM;AAMP,OAAO,IAAM,eAAe,GAAG,UAAC,MAAD,EAAe;AAC5C,SAAO,KAAK,CAAC,CAAD,EAAI,EAAJ,CAAL,CAAa,GAAb,CAAiB,UAAC,KAAD,EAAM;AAAK,WAAC;AAClC,MAAA,KAAK,EAAA,KAD6B;AAElC,MAAA,KAAK,EAAE,aAAa,CAAC,KAAD,EAAQ,MAAR;AAFc,KAAD;AAGjC,GAHK,CAAP;AAID,CALM;AAOP,OAAO,IAAM,cAAc,GAAG,UAAC,IAAD,EAAW;AACvC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,OAAO,CAAC,UAAU,CAAC,IAAD,EAAO,EAAP,CAAX,CAAzB,CAAd;AAEA,SAAO,KAAK,CAAC,KAAD,EAAQ,KAAK,GAAG,EAAhB,CAAL,CAAyB,GAAzB,CAA6B,UAAC,KAAD,EAAM;AAAK,WAAC;AAC9C,MAAA,KAAK,EAAA,KADyC;AAE9C,MAAA,KAAK,EAAE,MAAM,CAAC,KAAD,CAAN,CAAc,QAAd,CAAuB,CAAvB,EAA0B,GAA1B;AAFuC,KAAD;AAG7C,GAHK,CAAP;AAID,CAPM;AASP,OAAO,IAAM,iBAAiB,GAAG,UAAC,GAAD,EAAc,MAAd,EAAmC;AAArB,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,IAAA;AAAqB;;AAClE,SAAO,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,IAAJ,EAAD,CAAZ,EAA0B,GAA1B,CAAV,EAA0C,QAA1C,EAAoD;AACjE,IAAA,MAAM,EAAE,cAAc,CAAC,MAAD;AAD2C,GAApD,CAAf;AAGD,CAJM;AAMP,OAAO,IAAM,WAAW,GAAG,UAAC,IAAD,EAAa,KAAb,EAA0B;AACnD,SAAO,gBAAgB,CAAC,OAAO,CAAC,IAAD,CAAR,EAAgB,KAAhB,EAAuB,OAAO,CAAC,IAAD,CAA9B,CAAvB;AACD,CAFM;AAIP,OAAO,IAAM,UAAU,GAAG,UAAC,IAAD,EAAa,IAAb,EAAyB;AACjD,SAAO,gBAAgB,CAAC,IAAD,EAAO,QAAQ,CAAC,IAAD,CAAf,EAAuB,OAAO,CAAC,IAAD,CAA9B,CAAvB;AACD,CAFM;AAIP,OAAO,IAAM,OAAO,GAAsC,SAAnD;AAEP,OAAO,IAAM,SAAS,GAAsC,WAArD;AAEP,IAAM,eAAe,GAAG;AACtB,EAAA,OAAO,EAAA,OADe;AAEtB,EAAA,SAAS,EAAA,SAFa;AAGtB,EAAA,OAAO,EAAA,OAHe;AAItB,EAAA,MAAM,EAAA,MAJgB;AAKtB,EAAA,WAAW,EAAA,WALW;AAMtB,EAAA,OAAO,EAAA,OANe;AAOtB,EAAA,QAAQ,EAAA,QAPc;AAQtB,EAAA,QAAQ,EAAA,QARc;AAStB,EAAA,aAAa,EAAA,aATS;AAUtB,EAAA,eAAe,EAAA,eAVO;AAWtB,EAAA,OAAO,EAAA,OAXe;AAYtB,EAAA,OAAO,EAAA,OAZe;AAatB,EAAA,cAAc,EAAA,cAbQ;AActB,EAAA,OAAO,EAAA,OAde;AAetB,EAAA,QAAQ,EAAA,QAfc;AAgBtB,EAAA,SAAS,EAAA,SAhBa;AAiBtB,EAAA,WAAW,EAAA,WAjBW;AAkBtB,EAAA,OAAO,EAAA,OAlBe;AAmBtB,EAAA,aAAa,EAAA,aAnBS;AAoBtB,EAAA,qBAAqB,EAAA,qBApBC;AAqBtB,EAAA,gBAAgB,EAAA,gBArBM;AAsBtB,EAAA,OAAO,EAAA,OAtBe;AAuBtB,EAAA,SAAS,EAAA,SAvBa;AAwBtB,EAAA,WAAW,EAAA,WAxBW;AAyBtB,EAAA,UAAU,EAAA;AAzBY,CAAxB;AA4BA,eAAe,eAAf","sourcesContent":["import { addDays as addDaysFn, addMonths as addMonthsFn, eachDayOfInterval as eachDayFn, format as formatFn, getDate as getDateFn, getDay as getDayFn, getMonth as getMonthFn, getYear as getYearFn, isAfter as isAfterFn, isBefore as isBeforeFn, isSameDay as isSameDayFn, isSameMonth as isSameMonthFn, isToday as isTodayFn, isWithinInterval as isWithinRangeFn, startOfMonth as startOfMonthFn, startOfWeek, subDays as subDaysFn, subMonths as subMonthsFn, subYears as subYearsFn, } from 'date-fns';\nimport { de, enUS as en, es, fr, is, ko, pt, th } from 'date-fns/esm/locale';\nimport { range, splitEvery } from 'ramda';\nvar dateFnsLocales = {\n    en: en,\n    'en-CA': en,\n    'fr-CA': fr,\n    'fr-FR': fr,\n    es: es,\n    'es-ES': es,\n    'en-AE': en,\n    'en-AU': en,\n    'en-GB': en,\n    'en-SG': en,\n    ko: ko,\n    'th-TH': th,\n    pt: pt,\n    'is-IS': is,\n    'de-DE': de,\n    pseudo: en,\n};\n// values 0 - 6 represent indexes of days of the week, Sunday - Saturday respectively\nvar localeStartDayOfWeek = {\n    en: 0,\n    'en-CA': 0,\n    'fr-CA': 0,\n    'fr-FR': 1,\n    es: 1,\n    'es-ES': 1,\n    'en-AE': 6,\n    'en-AU': 0,\n    'en-GB': 1,\n    'en-SG': 0,\n    ko: 0,\n    'th-TH': 0,\n    pt: 0,\n    'is-IS': 1,\n    'de-DE': 1,\n    pseudo: 0,\n};\nexport var maxMonth = 12;\nexport var minYear = 0;\nexport var maxYear = new Date().getFullYear() + 100;\n// rows in calendar\nvar calendarWeeks = 6;\nvar daysInWeek = 7;\nexport var daysInCalendar = calendarWeeks * daysInWeek;\nexport var addDays = addDaysFn;\nexport var addMonths = addMonthsFn;\nexport var eachDay = function (date1, date2) {\n    return eachDayFn({ start: date1, end: date2 });\n};\nexport var format = formatFn;\n// An entire date object has to be formed, format(month, 'MMM') breaks for month >= 10 (it just outputs 'Dec')\nexport var formatMonth = function (month) {\n    return formatFn(normalizeNewDate(2019, month, 2), 'MMM');\n};\nexport var getDate = getDateFn;\nexport var getStartDayOfWeek = function (locale) {\n    return localeStartDayOfWeek[locale] || localeStartDayOfWeek['en'];\n};\nexport var getDates = function (date, locale) {\n    var startDayOfWeek = getStartDayOfWeek(locale);\n    // Shift first day appearing on the calendar based on day of the week of the first day of the month and based on the start day of the week\n    var dayShift = 7 - startDayOfWeek;\n    var subDays = (getDayFn(startOfMonthFn(date)) + dayShift) % 7;\n    var start = subDaysFn(startOfMonthFn(date), subDays);\n    var end = addDaysFn(start, daysInCalendar - 1);\n    return eachDayFn({ start: start, end: end });\n};\nexport var getMonth = getMonthFn;\nexport var getRows = splitEvery(7);\nexport var getYear = getYearFn;\nexport var isAfter = function (date1, date2) {\n    return isAfterFn(normalizeExistingDate(date1), normalizeExistingDate(date2));\n};\nexport var isBefore = function (date1, date2) {\n    return isBeforeFn(normalizeExistingDate(date1), normalizeExistingDate(date2));\n};\nexport var isSameDay = function (date1, date2) { return isSameDayFn(normalizeExistingDate(date1), normalizeExistingDate(date2)); };\nexport var isSameMonth = isSameMonthFn;\nexport var isToday = isTodayFn;\nexport var isWithinRange = function (date, start, end) {\n    if (!start || !end) {\n        return false;\n    }\n    return isWithinRangeFn(normalizeExistingDate(date), {\n        start: normalizeExistingDate(start),\n        end: normalizeExistingDate(end),\n    });\n};\nexport var normalizeExistingDate = function (day) {\n    return normalizeNewDate(getYearFn(day), getMonthFn(day), getDateFn(day));\n};\nexport var normalizeNewDate = function (year, month, day, hour, minute, second, millisecond) {\n    if (hour === void 0) { hour = 0; }\n    if (minute === void 0) { minute = 0; }\n    if (second === void 0) { second = 0; }\n    if (millisecond === void 0) { millisecond = 0; }\n    var normalizedDate = new Date();\n    normalizedDate.setFullYear(year, month, day);\n    normalizedDate.setHours(hour);\n    normalizedDate.setMinutes(minute);\n    normalizedDate.setSeconds(second);\n    normalizedDate.setMilliseconds(millisecond);\n    return normalizedDate;\n};\nexport var getMonthLabel = function (month, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    return formatFn(normalizeNewDate(1970, month, 1), 'MMM', {\n        locale: dateFnsLocales[locale],\n    });\n};\nexport var getMonthOptions = function (locale) {\n    return range(0, 12).map(function (value) { return ({\n        value: value,\n        label: getMonthLabel(value, locale),\n    }); });\n};\nexport var getYearOptions = function (date) {\n    var start = Math.max(minYear, getYear(subYearsFn(date, 10)));\n    return range(start, start + 21).map(function (value) { return ({\n        value: value,\n        label: String(value).padStart(4, '0'),\n    }); });\n};\nexport var getDayOfWeekLabel = function (day, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    return formatFn(addDaysFn(startOfWeek(new Date()), day), 'iiiiii', {\n        locale: dateFnsLocales[locale],\n    });\n};\nexport var updateMonth = function (date, month) {\n    return normalizeNewDate(getYear(date), month, getDate(date));\n};\nexport var updateYear = function (date, year) {\n    return normalizeNewDate(year, getMonth(date), getDate(date));\n};\nexport var subDays = subDaysFn;\nexport var subMonths = subMonthsFn;\nvar CalendarHelpers = {\n    addDays: addDays,\n    addMonths: addMonths,\n    eachDay: eachDay,\n    format: format,\n    formatMonth: formatMonth,\n    getDate: getDate,\n    getDates: getDates,\n    getMonth: getMonth,\n    getMonthLabel: getMonthLabel,\n    getMonthOptions: getMonthOptions,\n    getRows: getRows,\n    getYear: getYear,\n    getYearOptions: getYearOptions,\n    isAfter: isAfter,\n    isBefore: isBefore,\n    isSameDay: isSameDay,\n    isSameMonth: isSameMonth,\n    isToday: isToday,\n    isWithinRange: isWithinRange,\n    normalizeExistingDate: normalizeExistingDate,\n    normalizeNewDate: normalizeNewDate,\n    subDays: subDays,\n    subMonths: subMonths,\n    updateMonth: updateMonth,\n    updateYear: updateYear,\n};\nexport default CalendarHelpers;\n"]},"metadata":{},"sourceType":"module"}