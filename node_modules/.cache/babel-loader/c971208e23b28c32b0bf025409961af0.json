{"ast":null,"code":"var _jsxFileName = \"/Users/marinagavrilenko/Documents/GitHub/movies_search/src/pages/MovieDetailsPage/MovieDetailsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Avatar } from '@procore/core-react';\nimport { useState, useEffect } from 'react';\nimport img from '../../img/noPoster.jpeg';\nimport cinema_tools from '../../img/cinema_tools.jpeg';\nimport './MovieDetailsPage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MovieDetailsPage = () => {\n  _s();\n\n  const queryParams = new URLSearchParams(window.location.search);\n  console.log('queryParams', queryParams);\n  const movieId = queryParams.get('movieId');\n  const [movieDetails, setMovieDetails] = useState(null);\n  const movieGenre = movieDetails.genres.reduce((sum, current) => [...sum, current.name], []);\n  const releaseDate = new Date(movieDetails.release_date);\n  const releaseDateDay = releaseDate.getDay();\n  const releaseDateMonth = releaseDate.getMonth() + 1;\n  const releaseDateYear = releaseDate.getFullYear();\n\n  const getNiceNumberWithSpace = number => {\n    const getNumOfTriplets = Math.ceil(String(number).length / 3);\n    let budget = String(number);\n    let budgetArr = [];\n\n    for (let i = 0; i < getNumOfTriplets; i++) {\n      const strLength = budget.length;\n      const lastTriplet = budget.slice(-3);\n      budget = budget.slice(0, -3);\n      budgetArr.unshift(lastTriplet);\n    }\n\n    budgetArr.join(' ');\n    return budgetArr.join(' ');\n  };\n\n  const getFirstLettersOfWords = str => {\n    // var str     = \"Java Script Object Notation\";\n    let matches = str.match(/\\b(\\w)/g); // ['J','S','O','N']\n\n    return matches.join('');\n  };\n\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=9c4ab0b19a0403736cc569bf558c3ec8&language=en-US`).then(response => {\n      // handle success\n      console.log(response.data);\n      setMovieDetails(response.data);\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movieDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: `url(https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path})  0 0/cover no-repeat`\n      },\n      className: \"movieDetailsPage_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"movieDetailsPage_link\",\n        to: \"/\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDetailsPage_card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDetailsPage_cardHeaderWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: movieDetails.poster_path ? `url(https://image.tmdb.org/t/p/w500${movieDetails.poster_path})  0 0/cover no-repeat` : `url(${img})  center no-repeat`\n            },\n            className: \"movieDetailsPage_posterWrapper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieDetailsPage_infoWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_movieTitle\",\n              children: [movieDetails.title, /*#__PURE__*/_jsxDEV(\"div\", {\n                children: movieDetails.tagline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Rating: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [movieDetails.vote_average, \" (\", movieDetails.vote_count, \" votes)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Budget: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [getNiceNumberWithSpace(movieDetails.budget), \"$\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Revenue: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [getNiceNumberWithSpace(movieDetails.revenue), \"$\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 77\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Genre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: movieGenre === null || movieGenre === void 0 ? void 0 : movieGenre.join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Production countries:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: movieDetails.production_countries.map(countryObj => {\n                  return countryObj.name + '; ';\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Runtime: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [movieDetails.runtime, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 77\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_infoList\",\n              children: [\"Release date:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [`${releaseDateDay}`.length === 1 ? '0' + releaseDateDay : releaseDateDay, \".\", `${releaseDateMonth}`.length === 1 ? '0' + releaseDateMonth : releaseDateMonth, \".\", releaseDateYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movieDetailsPage_secondaryTitle\",\n              children: \"Production companies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDetailsPage_productionCompaniesWrapper\",\n              children: movieDetails.production_companies.map(company => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movieDetailsPage_companyInfoWrapper\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"movieDetailsPage_companyNameWrapper\",\n                      children: [\" \", company.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                      size: \"lg\",\n                      children: company.logo_path ? /*#__PURE__*/_jsxDEV(Avatar.Portrait, {\n                        imageUrl: `https://image.tmdb.org/t/p/w500${company.logo_path}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 53\n                      }, this) : /*#__PURE__*/_jsxDEV(Avatar.Label, {\n                        children: getFirstLettersOfWords(company.name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDetailsPage_movieOverViewHeader\",\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDetailsPage_movieOverViewWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieDetailsPage_movieOverView\",\n            children: movieDetails.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: movieDetails.backdrop_path ? `url(https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}) center no-repeat` : `url(${cinema_tools})  0 0/contain no-repeat `\n            },\n            className: \"movieDetailsPage_movieOverViewImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(MovieDetailsPage, \"+NUoObBPEKoY9NLFlKdTwdXc/3o=\");\n\n_c = MovieDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"sources":["/Users/marinagavrilenko/Documents/GitHub/movies_search/src/pages/MovieDetailsPage/MovieDetailsPage.tsx"],"names":["Link","axios","Avatar","useState","useEffect","img","cinema_tools","MovieDetailsPage","queryParams","URLSearchParams","window","location","search","console","log","movieId","get","movieDetails","setMovieDetails","movieGenre","genres","reduce","sum","current","name","releaseDate","Date","release_date","releaseDateDay","getDay","releaseDateMonth","getMonth","releaseDateYear","getFullYear","getNiceNumberWithSpace","number","getNumOfTriplets","Math","ceil","String","length","budget","budgetArr","i","strLength","lastTriplet","slice","unshift","join","getFirstLettersOfWords","str","matches","match","then","response","data","catch","error","background","backdrop_path","poster_path","title","tagline","vote_average","vote_count","revenue","production_countries","map","countryObj","runtime","production_companies","company","logo_path","overview"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport axios from 'axios'\nimport { Avatar } from '@procore/core-react'\nimport {useState, useEffect} from 'react'\nimport img from '../../img/noPoster.jpeg'\nimport cinema_tools from '../../img/cinema_tools.jpeg'\nimport './MovieDetailsPage.scss'\n\ninterface IMovieDetails{\n    genres: Array<{name: string }> //Array<{ id: number, name: string }> [key: string]: (string | number | [] | {}) \n    release_date: string\n    poster_path: string\n    backdrop_path: string\n    title: string\n    tagline: string\n    vote_average: number\n    vote_count: number\n    budget: number\n    revenue: number\n    production_countries: Array<{name: string }>\n    runtime: number\n    production_companies: Array<{name: string, logo_path: string | null}>\n    overview: string\n\n}\n\nexport const MovieDetailsPage = () => {\n \n    const queryParams: URLSearchParams = new URLSearchParams(window.location.search);\n    console.log( 'queryParams', queryParams)\n    const movieId: string | null = queryParams.get('movieId');\n\n    const [ movieDetails, setMovieDetails ] = useState <IMovieDetails | null> (null)\n \n    const movieGenre: string[] = movieDetails!.genres.reduce((sum: string[], current: {name: string} )=> [ ...sum, current.name], [] )\n    const releaseDate: Date = new Date(movieDetails!.release_date)\n    const releaseDateDay: number = releaseDate.getDay()\n    const releaseDateMonth: number  = (releaseDate.getMonth()) + 1\n    const releaseDateYear: number  = releaseDate.getFullYear()\n\n\n    const getNiceNumberWithSpace = (number: number): string => {\n\n        const getNumOfTriplets: number = Math.ceil(String(number).length / 3)\n        let budget: string = String(number)\n        let budgetArr : string[] = []\n        for(let i = 0; i < getNumOfTriplets; i++){\n            const strLength: number = budget.length;\n            const lastTriplet: string = budget.slice(-3)\n    \n            budget = budget.slice(0, -3)\n            budgetArr.unshift(lastTriplet)\n        }\n        budgetArr.join(' ')\n        return budgetArr.join(' ')\n    }\n    const getFirstLettersOfWords = (str: string): string | null => {\n        // var str     = \"Java Script Object Notation\";\n        let matches: string[] | null = str.match(/\\b(\\w)/g);              // ['J','S','O','N']\n        return matches!.join(''); \n    }\n\n\n    useEffect(()=>{\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=9c4ab0b19a0403736cc569bf558c3ec8&language=en-US`)\n        .then( (response: {data: []}): void => {\n            // handle success\n            console.log(response.data);\n            setMovieDetails(response.data)\n        })\n        .catch( (error: Error): void=> {\n            // handle error\n            console.log(error);\n        }) \n    }, [])\n\n    return(\n        <>\n        { movieDetails ?\n\n        <div style={{background: `url(https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path})  0 0/cover no-repeat` }} className=\"movieDetailsPage_wrapper\">\n            <Link className='movieDetailsPage_link' to=\"/\" >Back</Link>\n            <div className=\"movieDetailsPage_card\">\n                <div className=\"movieDetailsPage_cardHeaderWrapper\">\n                    <div \n                        style={{background: movieDetails.poster_path ? `url(https://image.tmdb.org/t/p/w500${movieDetails.poster_path})  0 0/cover no-repeat` : `url(${img})  center no-repeat`  }} \n                        className=\"movieDetailsPage_posterWrapper\">\n                    </div>\n                    <div className=\"movieDetailsPage_infoWrapper\">\n                        <div className=\"movieDetailsPage_movieTitle\">\n                            {movieDetails.title}\n                            <div>{movieDetails.tagline}</div>\n                        </div>\n                        <div className=\"movieDetailsPage_infoList\">Rating: <span>{movieDetails.vote_average} ({movieDetails.vote_count} votes)</span></div>\n                        <div className=\"movieDetailsPage_infoList\">Budget: <span>{getNiceNumberWithSpace(movieDetails.budget)}$</span></div>\n                        <div className=\"movieDetailsPage_infoList\">Revenue: <span>{getNiceNumberWithSpace(movieDetails.revenue)}$</span></div>\n                        <div className=\"movieDetailsPage_infoList\">Genre: <span>{ movieGenre?.join(', ') }</span></div>\n                        <div className=\"movieDetailsPage_infoList\">Production countries: \n                            <span>\n                                {\n                                    movieDetails.production_countries.map((countryObj)=>{\n                                        return(countryObj.name + '; ')\n                                    })\n                                }\n                            </span>\n                        </div>\n                        <div className=\"movieDetailsPage_infoList\">Runtime: <span>{movieDetails.runtime} min</span></div>\n                        <div className=\"movieDetailsPage_infoList\">Release date: \n                             <span>\n                                 {`${releaseDateDay}`.length ===1 ? '0'+releaseDateDay : releaseDateDay}. \n                                {`${releaseDateMonth}`.length ===1 ? '0'+releaseDateMonth : releaseDateMonth}.{releaseDateYear}\n                            </span>\n                        </div>\n                        <span className=\"movieDetailsPage_secondaryTitle\">Production companies</span>\n                        <div className=\"movieDetailsPage_productionCompaniesWrapper\">\n                            {\n                                movieDetails.production_companies.map((company: {name, logo_path: string | null})=>{\n                                    return(\n                                        <>\n                                        <div className=\"movieDetailsPage_companyInfoWrapper\">\n                                            <div className=\"movieDetailsPage_companyNameWrapper\"> {company.name}</div>\n                                            <Avatar size=\"lg\">\n                                                { company.logo_path ?\n                                                    <Avatar.Portrait imageUrl={`https://image.tmdb.org/t/p/w500${company.logo_path}`} />\n                                                    :\n                                                    <Avatar.Label>{getFirstLettersOfWords(company.name)}</Avatar.Label>\n                                                }\n                                            </Avatar>\n                                        </div>\n                                        </>\n                                      \n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"movieDetailsPage_movieOverViewHeader\">Overview</div>\n                <div className=\"movieDetailsPage_movieOverViewWrapper\">\n                        <div className=\"movieDetailsPage_movieOverView\">\n                            {movieDetails.overview}\n                        </div>\n                        <div\n                            style={{background: movieDetails.backdrop_path ? `url(https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}) center no-repeat` : `url(${cinema_tools})  0 0/contain no-repeat ` }}\n                             className=\"movieDetailsPage_movieOverViewImg\"></div>\n                </div>\n\n            \n            </div>\n\n        </div>\n        : null\n        }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}