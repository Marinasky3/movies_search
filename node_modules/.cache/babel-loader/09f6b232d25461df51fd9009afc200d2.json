{"ast":null,"code":"import React from 'react';\nimport Analytics from '../utils/genericAnalyticsClient';\n\nvar defaultTrackEvent = function (e, params) {\n  console.log('analytics::trackEvent', e, params);\n};\n\nexport var AnalyticsContext = React.createContext({});\nexport function AnalyticsProvider(_a) {\n  var analytics = _a.analytics,\n      children = _a.children;\n  return React.createElement(AnalyticsContext.Provider, {\n    value: {\n      trackEvent: (analytics === null || analytics === void 0 ? void 0 : analytics.trackEvent) || defaultTrackEvent\n    }\n  }, children);\n}\n\nvar isAnalyticsHydrated = function (analytics) {\n  return Object.keys(analytics).length > 0;\n};\n\nexport var useAnalyticsContext = function () {\n  var context = React.useContext(AnalyticsContext);\n\n  if (!isAnalyticsHydrated(context)) {\n    throw new Error('Must wrap app in Analytics.Provider');\n  }\n\n  return context;\n};\nexport default {\n  Client: Analytics,\n  Consumer: AnalyticsContext.Consumer,\n  Provider: AnalyticsProvider,\n  Context: AnalyticsContext\n};","map":{"version":3,"sources":["../../../src/decorators/Analytics.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,SAAP,MAAsB,iCAAtB;;AAOA,IAAM,iBAAiB,GAA4B,UAAC,CAAD,EAAI,MAAJ,EAAU;AAC3D,EAAA,OAAO,CAAC,GAAR,CAAY,uBAAZ,EAAqC,CAArC,EAAwC,MAAxC;AACD,CAFD;;AAIA,OAAO,IAAM,gBAAgB,GAAG,KAAK,CAAC,aAAN,CAAkC,EAAlC,CAAzB;AAEP,OAAM,SAAU,iBAAV,CAA4B,EAA5B,EAGmB;MAFvB,SAAS,GAAA,EAAA,CAAA,S;MACT,QAAQ,GAAA,EAAA,CAAA,Q;AAER,SACE,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAlB,EAA0B;AACxB,IAAA,KAAK,EAAE;AAAE,MAAA,UAAU,EAAE,CAAA,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,UAAX,KAAyB;AAAvC;AADiB,GAA1B,EAGG,QAHH,CADF;AAOD;;AAED,IAAM,mBAAmB,GAAG,UAC1B,SAD0B,EACH;AAEvB,SAAO,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,MAAvB,GAAgC,CAAvC;AACD,CAJD;;AAMA,OAAO,IAAM,mBAAmB,GAAG,YAAA;AACjC,MAAM,OAAO,GAAG,KAAK,CAAC,UAAN,CAAiB,gBAAjB,CAAhB;;AACA,MAAI,CAAC,mBAAmB,CAAC,OAAD,CAAxB,EAAmC;AACjC,UAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACD,SAAO,OAAP;AACD,CANM;AAQP,eAAe;AACb,EAAA,MAAM,EAAE,SADK;AAEb,EAAA,QAAQ,EAAE,gBAAgB,CAAC,QAFd;AAGb,EAAA,QAAQ,EAAE,iBAHG;AAIb,EAAA,OAAO,EAAE;AAJI,CAAf","sourcesContent":["import React from 'react';\nimport Analytics from '../utils/genericAnalyticsClient';\nvar defaultTrackEvent = function (e, params) {\n    console.log('analytics::trackEvent', e, params);\n};\nexport var AnalyticsContext = React.createContext({});\nexport function AnalyticsProvider(_a) {\n    var analytics = _a.analytics, children = _a.children;\n    return (React.createElement(AnalyticsContext.Provider, { value: { trackEvent: (analytics === null || analytics === void 0 ? void 0 : analytics.trackEvent) || defaultTrackEvent } }, children));\n}\nvar isAnalyticsHydrated = function (analytics) {\n    return Object.keys(analytics).length > 0;\n};\nexport var useAnalyticsContext = function () {\n    var context = React.useContext(AnalyticsContext);\n    if (!isAnalyticsHydrated(context)) {\n        throw new Error('Must wrap app in Analytics.Provider');\n    }\n    return context;\n};\nexport default {\n    Client: Analytics,\n    Consumer: AnalyticsContext.Consumer,\n    Provider: AnalyticsProvider,\n    Context: AnalyticsContext,\n};\n"]},"metadata":{},"sourceType":"module"}