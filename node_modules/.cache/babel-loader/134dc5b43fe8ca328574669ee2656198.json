{"ast":null,"code":"// I18n.js\n// =======\n//\n// This small library provides the Rails I18n API on the Javascript.\n// You don't actually have to use Rails (or even Ruby) to use I18n.js.\n// Just make sure you export all translations in an object like this:\n//\n//     I18n.translations.en = {\n//       hello: \"Hello World\"\n//     };\n//\n// See tests for specific formatting like numbers and dates.\n//\n// Using UMD pattern from\n// https://github.com/umdjs/umd#regular-module\n// `returnExports.js` version\nfunction createI18njs(options) {\n  var options = options || {}; // Use previously defined object if exists in current scope\n\n  var I18n = {\n    locale: options.locale,\n    translations: options.translations || {}\n  }; // Just cache the Array#slice function.\n\n  var slice = Array.prototype.slice; // Apply number padding.\n\n  var padding = function (number) {\n    return ('0' + number.toString()).substr(-2);\n  }; // Improved toFixed number rounding function with support for unprecise floating points\n  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).\n\n\n  var toFixed = function (number, precision) {\n    return decimalAdjust('round', number, -precision).toFixed(precision);\n  }; // Is a given variable an object?\n  // Borrowed from Underscore.js\n\n\n  var isObject = function (obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object';\n  };\n\n  var isFunction = function (func) {\n    var type = typeof func;\n    return type === 'function';\n  }; // Check if value is different than undefined and null;\n\n\n  var isSet = function (value) {\n    return typeof value !== 'undefined' && value !== null;\n  }; // Is a given value an array?\n  // Borrowed from Underscore.js\n\n\n  var isArray = function (val) {\n    if (Array.isArray) {\n      return Array.isArray(val);\n    }\n\n    return Object.prototype.toString.call(val) === '[object Array]';\n  };\n\n  var isString = function (val) {\n    return typeof val === 'string' || Object.prototype.toString.call(val) === '[object String]';\n  };\n\n  var isNumber = function (val) {\n    return typeof val === 'number' || Object.prototype.toString.call(val) === '[object Number]';\n  };\n\n  var isBoolean = function (val) {\n    return val === true || val === false;\n  };\n\n  var isNull = function (val) {\n    return val === null;\n  };\n\n  var decimalAdjust = function (type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp; // If the value is not a number or the exp is not an integer...\n\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    } // Shift\n\n\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp))); // Shift back\n\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n  };\n\n  var lazyEvaluate = function (message, scope) {\n    if (isFunction(message)) {\n      return message(scope);\n    } else {\n      return message;\n    }\n  };\n\n  var merge = function (dest, obj) {\n    var key, value;\n\n    for (key in obj) if (obj.hasOwnProperty(key)) {\n      value = obj[key];\n\n      if (isString(value) || isNumber(value) || isBoolean(value) || isArray(value) || isNull(value)) {\n        dest[key] = value;\n      } else {\n        if (dest[key] == null) dest[key] = {};\n        merge(dest[key], value);\n      }\n    }\n\n    return dest;\n  }; // Set default days/months translations.\n\n\n  var DATE = {\n    day_names: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    abbr_day_names: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    month_names: [null, 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    abbr_month_names: [null, 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridian: ['AM', 'PM']\n  }; // Set default number format.\n\n  var NUMBER_FORMAT = {\n    precision: 3,\n    separator: '.',\n    delimiter: ',',\n    strip_insignificant_zeros: false\n  }; // Set default currency format.\n\n  var CURRENCY_FORMAT = {\n    unit: '$',\n    precision: 2,\n    format: '%u%n',\n    sign_first: true,\n    delimiter: ',',\n    separator: '.'\n  }; // Set default percentage format.\n\n  var PERCENTAGE_FORMAT = {\n    unit: '%',\n    precision: 3,\n    format: '%n%u',\n    separator: '.',\n    delimiter: ''\n  }; // Set default size units.\n\n  var SIZE_UNITS = [null, 'kb', 'mb', 'gb', 'tb']; // Other default options\n\n  var DEFAULT_OPTIONS = {\n    // Set default locale. This locale will be used when fallback is enabled and\n    // the translation doesn't exist in a particular locale.\n    defaultLocale: 'en',\n    // Set the current locale to `en`.\n    locale: 'en',\n    // Set the translation key separator.\n    defaultSeparator: '.',\n    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.\n    placeholder: /(?:\\{\\{|%\\{)(.*?)(?:\\}\\}?)/gm,\n    // Set if engine should fallback to the default locale when a translation\n    // is missing.\n    fallbacks: true,\n    // Set the default translation object.\n    translations: {},\n    // Set missing translation behavior. 'message' will display a message\n    // that the translation is missing, 'guess' will try to guess the string\n    missingBehaviour: 'message',\n    // if you use missingBehaviour with 'message', but want to know that the\n    // string is actually missing for testing purposes, you can prefix the\n    // guessed string by setting the value here. By default, no prefix!\n    missingTranslationPrefix: ''\n  }; // Set default locale. This locale will be used when fallback is enabled and\n  // the translation doesn't exist in a particular locale.\n\n  I18n.reset = function () {\n    var key;\n\n    for (key in DEFAULT_OPTIONS) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  }; // Much like `reset`, but only assign options if not already assigned\n\n\n  I18n.initializeOptions = function () {\n    var key;\n\n    for (key in DEFAULT_OPTIONS) if (!isSet(this[key])) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n\n  I18n.initializeOptions(); // Return a list of all locales that must be tried before returning the\n  // missing translation message. By default, this will consider the inline option,\n  // current locale and fallback locale.\n  //\n  //     I18n.locales.get(\"de-DE\");\n  //     // [\"de-DE\", \"de\", \"en\"]\n  //\n  // You can define custom rules for any locale. Just make sure you return a array\n  // containing all locales.\n  //\n  //     // Default the Wookie locale to English.\n  //     I18n.locales[\"wk\"] = function(locale) {\n  //       return [\"en\"];\n  //     };\n  //\n\n  I18n.locales = {}; // Retrieve locales based on inline locale, current locale or default to\n  // I18n's detection.\n\n  I18n.locales.get = function (locale) {\n    var result = this[locale] || this[I18n.locale] || this['default'];\n\n    if (isFunction(result)) {\n      result = result(locale);\n    }\n\n    if (isArray(result) === false) {\n      result = [result];\n    }\n\n    return result;\n  }; // The default locale list.\n\n\n  I18n.locales['default'] = function (locale) {\n    var locales = [],\n        list = []; // Handle the inline locale option that can be provided to\n    // the `I18n.t` options.\n\n    if (locale) {\n      locales.push(locale);\n    } // Add the current locale to the list.\n\n\n    if (!locale && I18n.locale) {\n      locales.push(I18n.locale);\n    } // Add the default locale if fallback strategy is enabled.\n\n\n    if (I18n.fallbacks && I18n.defaultLocale) {\n      locales.push(I18n.defaultLocale);\n    } // Locale code format 1:\n    // According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)\n    // language codes for Traditional Chinese should be `zh-Hant`\n    //\n    // But due to backward compatibility\n    // We use older version of IETF language tag\n    // @see http://www.w3.org/TR/html401/struct/dirlang.html\n    // @see http://en.wikipedia.org/wiki/IETF_language_tag\n    //\n    // Format: `language-code = primary-code ( \"-\" subcode )*`\n    //\n    // primary-code uses ISO639-1\n    // @see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    // @see http://www.iso.org/iso/home/standards/language_codes.htm\n    //\n    // subcode uses ISO 3166-1 alpha-2\n    // @see http://en.wikipedia.org/wiki/ISO_3166\n    // @see http://www.iso.org/iso/country_codes.htm\n    //\n    // @note\n    //   subcode can be in upper case or lower case\n    //   defining it in upper case is a convention only\n    // Locale code format 2:\n    // Format: `code = primary-code ( \"-\" region-code )*`\n    // primary-code uses ISO 639-1\n    // script-code uses ISO 15924\n    // region-code uses ISO 3166-1 alpha-2\n    // Example: zh-Hant-TW, en-HK, zh-Hant-CN\n    //\n    // It is similar to RFC4646 (or actually the same),\n    // but seems to be limited to language, script, region\n    // Compute each locale with its country code.\n    // So this will return an array containing\n    // `de-DE` and `de`\n    // or\n    // `zh-hans-tw`, `zh-hans`, `zh`\n    // locales.\n\n\n    locales.forEach(function (locale) {\n      var localeParts = locale.split('-');\n      var firstFallback = null;\n      var secondFallback = null;\n\n      if (localeParts.length === 3) {\n        firstFallback = [localeParts[0], localeParts[1]].join('-');\n        secondFallback = localeParts[0];\n      } else if (localeParts.length === 2) {\n        firstFallback = localeParts[0];\n      }\n\n      if (list.indexOf(locale) === -1) {\n        list.push(locale);\n      }\n\n      if (!I18n.fallbacks) {\n        return;\n      }\n\n      ;\n      [firstFallback, secondFallback].forEach(function (nullableFallbackLocale) {\n        // We don't want null values\n        if (typeof nullableFallbackLocale === 'undefined') {\n          return;\n        }\n\n        if (nullableFallbackLocale === null) {\n          return;\n        } // We don't want duplicate values\n        //\n        // Comparing with `locale` first is faster than\n        // checking whether value's presence in the list\n\n\n        if (nullableFallbackLocale === locale) {\n          return;\n        }\n\n        if (list.indexOf(nullableFallbackLocale) !== -1) {\n          return;\n        }\n\n        list.push(nullableFallbackLocale);\n      });\n    }); // No locales set? English it is.\n\n    if (!locales.length) {\n      locales.push('en');\n    }\n\n    return list;\n  }; // Hold pluralization rules.\n\n\n  I18n.pluralization = {}; // Return the pluralizer for a specific locale.\n  // If no specify locale is found, then I18n's default will be used.\n\n  I18n.pluralization.get = function (locale) {\n    return this[locale] || this[I18n.locale] || this['default'];\n  }; // The default pluralizer rule.\n  // It detects the `zero`, `one`, and `other` scopes.\n\n\n  I18n.pluralization['default'] = function (count) {\n    switch (count) {\n      case 0:\n        return ['zero', 'other'];\n\n      case 1:\n        return ['one'];\n\n      default:\n        return ['other'];\n    }\n  }; // Return current locale. If no locale has been set, then\n  // the current locale will be the default locale.\n\n\n  I18n.currentLocale = function () {\n    return this.locale || this.defaultLocale;\n  }; // Check if value is different than undefined and null;\n\n\n  I18n.isSet = isSet; // Find and process the translation using the provided scope and options.\n  // This is used internally by some functions and should not be used as an\n  // public API.\n\n  I18n.lookup = function (scope, options) {\n    options = options || {};\n    var locales = this.locales.get(options.locale).slice(),\n        locale,\n        scopes,\n        fullScope,\n        translations;\n    fullScope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = fullScope.split(this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n\n        if (translations === undefined || translations === null) {\n          break;\n        }\n      }\n\n      if (translations !== undefined && translations !== null) {\n        return translations;\n      }\n    }\n\n    if (isSet(options.defaultValue)) {\n      return lazyEvaluate(options.defaultValue, scope);\n    }\n  }; // lookup pluralization rule key into translations\n\n\n  I18n.pluralizationLookupWithoutFallback = function (count, locale, translations) {\n    var pluralizer = this.pluralization.get(locale),\n        pluralizerKeys = pluralizer(count),\n        pluralizerKey,\n        message;\n\n    if (isObject(translations)) {\n      while (pluralizerKeys.length) {\n        pluralizerKey = pluralizerKeys.shift();\n\n        if (isSet(translations[pluralizerKey])) {\n          message = translations[pluralizerKey];\n          break;\n        }\n      }\n    }\n\n    return message;\n  }; // Lookup dedicated to pluralization\n\n\n  I18n.pluralizationLookup = function (count, scope, options) {\n    options = options || {};\n    var locales = this.locales.get(options.locale).slice(),\n        locale,\n        scopes,\n        translations,\n        message;\n    scope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = scope.split(this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n\n        if (!isObject(translations)) {\n          break;\n        }\n\n        if (scopes.length === 0) {\n          message = this.pluralizationLookupWithoutFallback(count, locale, translations);\n        }\n      }\n\n      if (typeof message !== 'undefined' && message !== null) {\n        break;\n      }\n    }\n\n    if (typeof message === 'undefined' || message === null) {\n      if (isSet(options.defaultValue)) {\n        if (isObject(options.defaultValue)) {\n          message = this.pluralizationLookupWithoutFallback(count, options.locale, options.defaultValue);\n        } else {\n          message = options.defaultValue;\n        }\n\n        translations = options.defaultValue;\n      }\n    }\n\n    return {\n      message: message,\n      translations: translations\n    };\n  }; // Rails changed the way the meridian is stored.\n  // It started with `date.meridian` returning an array,\n  // then it switched to `time.am` and `time.pm`.\n  // This function abstracts this difference and returns\n  // the correct meridian or the default value when none is provided.\n\n\n  I18n.meridian = function () {\n    var time = this.lookup('time');\n    var date = this.lookup('date');\n\n    if (time && time.am && time.pm) {\n      return [time.am, time.pm];\n    } else if (date && date.meridian) {\n      return date.meridian;\n    } else {\n      return DATE.meridian;\n    }\n  }; // Merge serveral hash options, checking if value is set before\n  // overwriting any value. The precedence is from left to right.\n  //\n  //     I18n.prepareOptions({name: \"John Doe\"}, {name: \"Mary Doe\", role: \"user\"});\n  //     #=> {name: \"John Doe\", role: \"user\"}\n  //\n\n\n  I18n.prepareOptions = function () {\n    var args = slice.call(arguments),\n        options = {},\n        subject;\n\n    while (args.length) {\n      subject = args.shift();\n\n      if (typeof subject != 'object') {\n        continue;\n      }\n\n      for (var attr in subject) {\n        if (!subject.hasOwnProperty(attr)) {\n          continue;\n        }\n\n        if (isSet(options[attr])) {\n          continue;\n        }\n\n        options[attr] = subject[attr];\n      }\n    }\n\n    return options;\n  }; // Generate a list of translation options for default fallbacks.\n  // `defaultValue` is also deleted from options as it is returned as part of\n  // the translationOptions array.\n\n\n  I18n.createTranslationOptions = function (scope, options) {\n    var translationOptions = [{\n      scope: scope\n    }]; // Defaults should be an array of hashes containing either\n    // fallback scopes or messages\n\n    if (isSet(options.defaults)) {\n      translationOptions = translationOptions.concat(options.defaults);\n    } // Maintain support for defaultValue. Since it is always a message\n    // insert it in to the translation options as such.\n\n\n    if (isSet(options.defaultValue)) {\n      translationOptions.push({\n        message: options.defaultValue\n      });\n    }\n\n    return translationOptions;\n  }; // Translate the given scope with the provided options.\n\n\n  I18n.translate = function (scope, options) {\n    options = options || {};\n    var translationOptions = this.createTranslationOptions(scope, options);\n    var translation;\n    var usedScope = scope;\n    var optionsWithoutDefault = this.prepareOptions(options);\n    delete optionsWithoutDefault.defaultValue; // Iterate through the translation options until a translation\n    // or message is found.\n\n    var translationFound = translationOptions.some(function (translationOption) {\n      if (isSet(translationOption.scope)) {\n        usedScope = translationOption.scope;\n        translation = this.lookup(usedScope, optionsWithoutDefault);\n      } else if (isSet(translationOption.message)) {\n        translation = lazyEvaluate(translationOption.message, scope);\n      }\n\n      if (translation !== undefined && translation !== null) {\n        return true;\n      }\n    }, this);\n\n    if (!translationFound) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof translation === 'string') {\n      translation = this.interpolate(translation, options);\n    } else if (isArray(translation)) {\n      translation = translation.map(function (t) {\n        return typeof t === 'string' ? this.interpolate(t, options) : t;\n      }, this);\n    } else if (isObject(translation) && isSet(options.count)) {\n      translation = this.pluralize(options.count, usedScope, options);\n    }\n\n    return translation;\n  }; // This function interpolates the all variables in the given message.\n\n\n  I18n.interpolate = function (message, options) {\n    if (message == null) {\n      return message;\n    }\n\n    options = options || {};\n    var matches = message.match(this.placeholder),\n        placeholder,\n        value,\n        name,\n        regex;\n\n    if (!matches) {\n      return message;\n    }\n\n    while (matches.length) {\n      placeholder = matches.shift();\n      name = placeholder.replace(this.placeholder, '$1');\n\n      if (isSet(options[name])) {\n        value = options[name].toString().replace(/\\$/gm, '_#$#_');\n      } else if (name in options) {\n        value = this.nullPlaceholder(placeholder, message, options);\n      } else {\n        value = this.missingPlaceholder(placeholder, message, options);\n      }\n\n      regex = new RegExp(placeholder.replace(/{/gm, '\\\\{').replace(/}/gm, '\\\\}'));\n      message = message.replace(regex, value);\n    }\n\n    return message.replace(/_#\\$#_/g, '$');\n  }; // Pluralize the given scope using the `count` value.\n  // The pluralized translation may have other placeholders,\n  // which will be retrieved from `options`.\n\n\n  I18n.pluralize = function (count, scope, options) {\n    options = this.prepareOptions({\n      count: String(count)\n    }, options);\n    var pluralizer, result;\n    result = this.pluralizationLookup(count, scope, options);\n\n    if (typeof result.translations === 'undefined' || result.translations == null) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof result.message !== 'undefined' && result.message != null) {\n      return this.interpolate(result.message, options);\n    } else {\n      pluralizer = this.pluralization.get(options.locale);\n      return this.missingTranslation(scope + '.' + pluralizer(count)[0], options);\n    }\n  }; // Return a missing translation message for the given parameters.\n\n\n  I18n.missingTranslation = function (scope, options) {\n    //guess intended string\n    if (this.missingBehaviour === 'guess') {\n      //get only the last portion of the scope\n      var s = scope.split('.').slice(-1)[0]; //replace underscore with space && camelcase with space and lowercase letter\n\n      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') + s.replace('_', ' ').replace(/([a-z])([A-Z])/g, function (match, p1, p2) {\n        return p1 + ' ' + p2.toLowerCase();\n      });\n    }\n\n    var localeForTranslation = options != null && options.locale != null ? options.locale : this.currentLocale();\n    var fullScope = this.getFullScope(scope, options);\n    var fullScopeWithLocale = [localeForTranslation, fullScope].join(this.defaultSeparator);\n    return '[missing \"' + fullScopeWithLocale + '\" translation]';\n  }; // Return a missing placeholder message for given parameters\n\n\n  I18n.missingPlaceholder = function (placeholder, message, options) {\n    return '[missing ' + placeholder + ' value]';\n  };\n\n  I18n.nullPlaceholder = function () {\n    return I18n.missingPlaceholder.apply(I18n, arguments);\n  }; // Format number using localization rules.\n  // The options will be retrieved from the `number.format` scope.\n  // If this isn't present, then the following options will be used:\n  //\n  // - `precision`: `3`\n  // - `separator`: `\".\"`\n  // - `delimiter`: `\",\"`\n  // - `strip_insignificant_zeros`: `false`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n\n\n  I18n.toNumber = function (number, options) {\n    options = this.prepareOptions(options, this.lookup('number.format'), NUMBER_FORMAT);\n    var negative = number < 0,\n        string = toFixed(Math.abs(number), options.precision).toString(),\n        parts = string.split('.'),\n        precision,\n        buffer = [],\n        formattedNumber,\n        format = options.format || '%n',\n        sign = negative ? '-' : '';\n    number = parts[0];\n    precision = parts[1];\n\n    while (number.length > 0) {\n      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));\n      number = number.substr(0, number.length - 3);\n    }\n\n    formattedNumber = buffer.join(options.delimiter);\n\n    if (options.strip_insignificant_zeros && precision) {\n      precision = precision.replace(/0+$/, '');\n    }\n\n    if (options.precision > 0 && precision) {\n      formattedNumber += options.separator + precision;\n    }\n\n    if (options.sign_first) {\n      format = '%s' + format;\n    } else {\n      format = format.replace('%n', '%s%n');\n    }\n\n    formattedNumber = format.replace('%u', options.unit).replace('%n', formattedNumber).replace('%s', sign);\n    return formattedNumber;\n  }; // Format currency with localization rules.\n  // The options will be retrieved from the `number.currency.format` and\n  // `number.format` scopes, in that order.\n  //\n  // Any missing option will be retrieved from the `I18n.toNumber` defaults and\n  // the following options:\n  //\n  // - `unit`: `\"$\"`\n  // - `precision`: `2`\n  // - `format`: `\"%u%n\"`\n  // - `delimiter`: `\",\"`\n  // - `separator`: `\".\"`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n\n\n  I18n.toCurrency = function (number, options) {\n    options = this.prepareOptions(options, this.lookup('number.currency.format'), this.lookup('number.format'), CURRENCY_FORMAT);\n    return this.toNumber(number, options);\n  }; // Localize several values.\n  // You can provide the following scopes: `currency`, `number`, or `percentage`.\n  // If you provide a scope that matches the `/^(date|time)/` regular expression\n  // then the `value` will be converted by using the `I18n.toTime` function.\n  //\n  // It will default to the value's `toString` function.\n  //\n\n\n  I18n.localize = function (scope, value, options) {\n    options || (options = {});\n\n    switch (scope) {\n      case 'currency':\n        return this.toCurrency(value);\n\n      case 'number':\n        scope = this.lookup('number.format');\n        return this.toNumber(value, scope);\n\n      case 'percentage':\n        return this.toPercentage(value);\n\n      default:\n        var localizedValue;\n\n        if (scope.match(/^(date|time)/)) {\n          localizedValue = this.toTime(scope, value);\n        } else {\n          localizedValue = value.toString();\n        }\n\n        return this.interpolate(localizedValue, options);\n    }\n  }; // Parse a given `date` string into a JavaScript Date object.\n  // This function is time zone aware.\n  //\n  // The following string formats are recognized:\n  //\n  //    yyyy-mm-dd\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ssZ\n  //    yyyy-mm-dd[ T]hh:mm::ss+0000\n  //    yyyy-mm-dd[ T]hh:mm::ss+00:00\n  //    yyyy-mm-dd[ T]hh:mm::ss.123Z\n  //\n\n\n  I18n.parseDate = function (date) {\n    var matches, convertedDate, fraction; // A date input of `null` or `undefined` will be returned as-is\n\n    if (date == null) {\n      return date;\n    } // we have a date, so just return it.\n\n\n    if (typeof date === 'object') {\n      return date;\n    }\n\n    matches = date.toString().match(/(\\d{4})-(\\d{2})-(\\d{2})(?:[ T](\\d{2}):(\\d{2}):(\\d{2})([\\.,]\\d{1,3})?)?(Z|\\+00:?00)?/);\n\n    if (matches) {\n      for (var i = 1; i <= 6; i++) {\n        matches[i] = parseInt(matches[i], 10) || 0;\n      } // month starts on 0\n\n\n      matches[2] -= 1;\n      fraction = matches[7] ? 1000 * ('0' + matches[7]) : null;\n\n      if (matches[8]) {\n        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));\n      } else {\n        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);\n      }\n    } else if (typeof date == 'number') {\n      // UNIX timestamp\n      convertedDate = new Date();\n      convertedDate.setTime(date);\n    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\\d+) (\\d+:\\d+:\\d+) ([+-]\\d+) (\\d+)/)) {\n      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by\n      // webkit/firefox, but not by IE, so we must parse it manually.\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse([RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5].join(' ')));\n    } else if (date.match(/\\d+ \\d+:\\d+:\\d+ [+-]\\d+ \\d+/)) {\n      // a valid javascript format with timezone info\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    } else {\n      // an arbitrary javascript string\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    }\n\n    return convertedDate;\n  }; // Formats time according to the directives in the given format string.\n  // The directives begins with a percent (%) character. Any text not listed as a\n  // directive will be passed through to the output string.\n  //\n  // The accepted formats are:\n  //\n  //     %a     - The abbreviated weekday name (Sun)\n  //     %A     - The full weekday name (Sunday)\n  //     %b     - The abbreviated month name (Jan)\n  //     %B     - The full month name (January)\n  //     %c     - The preferred local date and time representation\n  //     %d     - Day of the month (01..31)\n  //     %-d    - Day of the month (1..31)\n  //     %H     - Hour of the day, 24-hour clock (00..23)\n  //     %-H/%k - Hour of the day, 24-hour clock (0..23)\n  //     %I     - Hour of the day, 12-hour clock (01..12)\n  //     %-I/%l - Hour of the day, 12-hour clock (1..12)\n  //     %m     - Month of the year (01..12)\n  //     %-m    - Month of the year (1..12)\n  //     %M     - Minute of the hour (00..59)\n  //     %-M    - Minute of the hour (0..59)\n  //     %p     - Meridian indicator (AM  or  PM)\n  //     %P     - Meridian indicator (am  or  pm)\n  //     %S     - Second of the minute (00..60)\n  //     %-S    - Second of the minute (0..60)\n  //     %w     - Day of the week (Sunday is 0, 0..6)\n  //     %y     - Year without a century (00..99)\n  //     %-y    - Year without a century (0..99)\n  //     %Y     - Year with century\n  //     %z/%Z  - Timezone offset (+0545)\n  //\n\n\n  I18n.strftime = function (date, format) {\n    var options = this.lookup('date'),\n        meridianOptions = I18n.meridian();\n\n    if (!options) {\n      options = {};\n    }\n\n    options = this.prepareOptions(options, DATE);\n\n    if (isNaN(date.getTime())) {\n      throw new Error('I18n.strftime() requires a valid date object, but received an invalid date.');\n    }\n\n    var weekDay = date.getDay(),\n        day = date.getDate(),\n        year = date.getFullYear(),\n        month = date.getMonth() + 1,\n        hour = date.getHours(),\n        hour12 = hour,\n        meridian = hour > 11 ? 1 : 0,\n        secs = date.getSeconds(),\n        mins = date.getMinutes(),\n        offset = date.getTimezoneOffset(),\n        absOffsetHours = Math.floor(Math.abs(offset / 60)),\n        absOffsetMinutes = Math.abs(offset) - absOffsetHours * 60,\n        timezoneoffset = (offset > 0 ? '-' : '+') + (absOffsetHours.toString().length < 2 ? '0' + absOffsetHours : absOffsetHours) + (absOffsetMinutes.toString().length < 2 ? '0' + absOffsetMinutes : absOffsetMinutes);\n\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    } else if (hour12 === 0) {\n      hour12 = 12;\n    }\n\n    format = format.replace('%a', options.abbr_day_names[weekDay]);\n    format = format.replace('%A', options.day_names[weekDay]);\n    format = format.replace('%b', options.abbr_month_names[month]);\n    format = format.replace('%B', options.month_names[month]);\n    format = format.replace('%d', padding(day));\n    format = format.replace('%e', day);\n    format = format.replace('%-d', day);\n    format = format.replace('%H', padding(hour));\n    format = format.replace('%-H', hour);\n    format = format.replace('%k', hour);\n    format = format.replace('%I', padding(hour12));\n    format = format.replace('%-I', hour12);\n    format = format.replace('%l', hour12);\n    format = format.replace('%m', padding(month));\n    format = format.replace('%-m', month);\n    format = format.replace('%M', padding(mins));\n    format = format.replace('%-M', mins);\n    format = format.replace('%p', meridianOptions[meridian]);\n    format = format.replace('%P', meridianOptions[meridian].toLowerCase());\n    format = format.replace('%S', padding(secs));\n    format = format.replace('%-S', secs);\n    format = format.replace('%w', weekDay);\n    format = format.replace('%y', padding(year));\n    format = format.replace('%-y', padding(year).replace(/^0+/, ''));\n    format = format.replace('%Y', year);\n    format = format.replace('%z', timezoneoffset);\n    format = format.replace('%Z', timezoneoffset);\n    return format;\n  }; // Convert the given dateString into a formatted date.\n\n\n  I18n.toTime = function (scope, dateString) {\n    var date = this.parseDate(dateString),\n        format = this.lookup(scope); // A date input of `null` or `undefined` will be returned as-is\n\n    if (date == null) {\n      return date;\n    }\n\n    var date_string = date.toString();\n\n    if (date_string.match(/invalid/i)) {\n      return date_string;\n    }\n\n    if (!format) {\n      return date_string;\n    }\n\n    return this.strftime(date, format);\n  }; // Convert a number into a formatted percentage value.\n\n\n  I18n.toPercentage = function (number, options) {\n    options = this.prepareOptions(options, this.lookup('number.percentage.format'), this.lookup('number.format'), PERCENTAGE_FORMAT);\n    return this.toNumber(number, options);\n  }; // Convert a number into a readable size representation.\n\n\n  I18n.toHumanSize = function (number, options) {\n    var kb = 1024,\n        size = number,\n        iterations = 0,\n        unit,\n        precision;\n\n    while (size >= kb && iterations < 4) {\n      size = size / kb;\n      iterations += 1;\n    }\n\n    if (iterations === 0) {\n      unit = this.t('number.human.storage_units.units.byte', {\n        count: size\n      });\n      precision = 0;\n    } else {\n      unit = this.t('number.human.storage_units.units.' + SIZE_UNITS[iterations]);\n      precision = size - Math.floor(size) === 0 ? 0 : 1;\n    }\n\n    options = this.prepareOptions(options, {\n      unit: unit,\n      precision: precision,\n      format: '%n%u',\n      delimiter: ''\n    });\n    return this.toNumber(size, options);\n  };\n\n  I18n.getFullScope = function (scope, options) {\n    options = options || {}; // Deal with the scope as an array.\n\n    if (isArray(scope)) {\n      scope = scope.join(this.defaultSeparator);\n    } // Deal with the scope option provided through the second argument.\n    //\n    //    I18n.t('hello', {scope: 'greetings'});\n    //\n\n\n    if (options.scope) {\n      scope = [options.scope, scope].join(this.defaultSeparator);\n    }\n\n    return scope;\n  };\n  /**\n   * Merge obj1 with obj2 (shallow merge), without modifying inputs\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @returns {Object} Merged values of obj1 and obj2\n   *\n   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used\n   * Idea is from:\n   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8\n   */\n\n\n  I18n.extend = function (obj1, obj2) {\n    if (typeof obj1 === 'undefined' && typeof obj2 === 'undefined') {\n      return {};\n    }\n\n    return merge(obj1, obj2);\n  }; // Set aliases, so we can save some typing.\n\n\n  I18n.t = I18n.translate;\n  I18n.l = I18n.localize;\n  I18n.p = I18n.pluralize;\n  return I18n;\n}\n\nexports.createI18njs = createI18njs;","map":{"version":3,"sources":["/Users/marinagavrilenko/Documents/GitHub/movies_search/node_modules/@procore/core-i18n-js/index.js"],"names":["createI18njs","options","I18n","locale","translations","slice","Array","prototype","padding","number","toString","substr","toFixed","precision","decimalAdjust","isObject","obj","type","isFunction","func","isSet","value","isArray","val","Object","call","isString","isNumber","isBoolean","isNull","exp","Math","isNaN","NaN","split","lazyEvaluate","message","scope","merge","dest","key","hasOwnProperty","DATE","day_names","abbr_day_names","month_names","abbr_month_names","meridian","NUMBER_FORMAT","separator","delimiter","strip_insignificant_zeros","CURRENCY_FORMAT","unit","format","sign_first","PERCENTAGE_FORMAT","SIZE_UNITS","DEFAULT_OPTIONS","defaultLocale","defaultSeparator","placeholder","fallbacks","missingBehaviour","missingTranslationPrefix","reset","initializeOptions","locales","get","result","list","push","forEach","localeParts","firstFallback","secondFallback","length","join","indexOf","nullableFallbackLocale","pluralization","count","currentLocale","lookup","scopes","fullScope","getFullScope","shift","undefined","defaultValue","pluralizationLookupWithoutFallback","pluralizer","pluralizerKeys","pluralizerKey","pluralizationLookup","time","date","am","pm","prepareOptions","args","arguments","subject","attr","createTranslationOptions","translationOptions","defaults","concat","translate","translation","usedScope","optionsWithoutDefault","translationFound","some","translationOption","missingTranslation","interpolate","map","t","pluralize","matches","match","name","regex","replace","nullPlaceholder","missingPlaceholder","RegExp","String","s","p1","p2","toLowerCase","localeForTranslation","fullScopeWithLocale","apply","toNumber","negative","string","abs","parts","buffer","formattedNumber","sign","unshift","max","toCurrency","localize","toPercentage","localizedValue","toTime","parseDate","convertedDate","fraction","i","parseInt","Date","UTC","setTime","parse","$1","$2","$3","$6","$4","$5","strftime","meridianOptions","getTime","Error","weekDay","getDay","day","getDate","year","getFullYear","month","getMonth","hour","getHours","hour12","secs","getSeconds","mins","getMinutes","offset","getTimezoneOffset","absOffsetHours","floor","absOffsetMinutes","timezoneoffset","dateString","date_string","toHumanSize","kb","size","iterations","extend","obj1","obj2","l","p","exports"],"mappings":"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","sourcesContent":["// I18n.js\n// =======\n//\n// This small library provides the Rails I18n API on the Javascript.\n// You don't actually have to use Rails (or even Ruby) to use I18n.js.\n// Just make sure you export all translations in an object like this:\n//\n//     I18n.translations.en = {\n//       hello: \"Hello World\"\n//     };\n//\n// See tests for specific formatting like numbers and dates.\n//\n\n// Using UMD pattern from\n// https://github.com/umdjs/umd#regular-module\n// `returnExports.js` version\nfunction createI18njs(options) {\n  var options = options || {}\n\n  // Use previously defined object if exists in current scope\n  var I18n = {\n    locale: options.locale,\n    translations: options.translations || {},\n  }\n\n  // Just cache the Array#slice function.\n  var slice = Array.prototype.slice\n\n  // Apply number padding.\n  var padding = function (number) {\n    return ('0' + number.toString()).substr(-2)\n  }\n\n  // Improved toFixed number rounding function with support for unprecise floating points\n  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).\n  var toFixed = function (number, precision) {\n    return decimalAdjust('round', number, -precision).toFixed(precision)\n  }\n\n  // Is a given variable an object?\n  // Borrowed from Underscore.js\n  var isObject = function (obj) {\n    var type = typeof obj\n    return type === 'function' || type === 'object'\n  }\n\n  var isFunction = function (func) {\n    var type = typeof func\n    return type === 'function'\n  }\n\n  // Check if value is different than undefined and null;\n  var isSet = function (value) {\n    return typeof value !== 'undefined' && value !== null\n  }\n\n  // Is a given value an array?\n  // Borrowed from Underscore.js\n  var isArray = function (val) {\n    if (Array.isArray) {\n      return Array.isArray(val)\n    }\n    return Object.prototype.toString.call(val) === '[object Array]'\n  }\n\n  var isString = function (val) {\n    return (\n      typeof val === 'string' ||\n      Object.prototype.toString.call(val) === '[object String]'\n    )\n  }\n\n  var isNumber = function (val) {\n    return (\n      typeof val === 'number' ||\n      Object.prototype.toString.call(val) === '[object Number]'\n    )\n  }\n\n  var isBoolean = function (val) {\n    return val === true || val === false\n  }\n\n  var isNull = function (val) {\n    return val === null\n  }\n\n  var decimalAdjust = function (type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value)\n    }\n    value = +value\n    exp = +exp\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN\n    }\n    // Shift\n    value = value.toString().split('e')\n    value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)))\n    // Shift back\n    value = value.toString().split('e')\n    return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp))\n  }\n\n  var lazyEvaluate = function (message, scope) {\n    if (isFunction(message)) {\n      return message(scope)\n    } else {\n      return message\n    }\n  }\n\n  var merge = function (dest, obj) {\n    var key, value\n    for (key in obj)\n      if (obj.hasOwnProperty(key)) {\n        value = obj[key]\n        if (\n          isString(value) ||\n          isNumber(value) ||\n          isBoolean(value) ||\n          isArray(value) ||\n          isNull(value)\n        ) {\n          dest[key] = value\n        } else {\n          if (dest[key] == null) dest[key] = {}\n          merge(dest[key], value)\n        }\n      }\n    return dest\n  }\n\n  // Set default days/months translations.\n  var DATE = {\n    day_names: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n    abbr_day_names: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    month_names: [\n      null,\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n    abbr_month_names: [\n      null,\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    meridian: ['AM', 'PM'],\n  }\n\n  // Set default number format.\n  var NUMBER_FORMAT = {\n    precision: 3,\n    separator: '.',\n    delimiter: ',',\n    strip_insignificant_zeros: false,\n  }\n\n  // Set default currency format.\n  var CURRENCY_FORMAT = {\n    unit: '$',\n    precision: 2,\n    format: '%u%n',\n    sign_first: true,\n    delimiter: ',',\n    separator: '.',\n  }\n\n  // Set default percentage format.\n  var PERCENTAGE_FORMAT = {\n    unit: '%',\n    precision: 3,\n    format: '%n%u',\n    separator: '.',\n    delimiter: '',\n  }\n\n  // Set default size units.\n  var SIZE_UNITS = [null, 'kb', 'mb', 'gb', 'tb']\n\n  // Other default options\n  var DEFAULT_OPTIONS = {\n    // Set default locale. This locale will be used when fallback is enabled and\n    // the translation doesn't exist in a particular locale.\n    defaultLocale: 'en',\n    // Set the current locale to `en`.\n    locale: 'en',\n    // Set the translation key separator.\n    defaultSeparator: '.',\n    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.\n    placeholder: /(?:\\{\\{|%\\{)(.*?)(?:\\}\\}?)/gm,\n    // Set if engine should fallback to the default locale when a translation\n    // is missing.\n    fallbacks: true,\n    // Set the default translation object.\n    translations: {},\n    // Set missing translation behavior. 'message' will display a message\n    // that the translation is missing, 'guess' will try to guess the string\n    missingBehaviour: 'message',\n    // if you use missingBehaviour with 'message', but want to know that the\n    // string is actually missing for testing purposes, you can prefix the\n    // guessed string by setting the value here. By default, no prefix!\n    missingTranslationPrefix: '',\n  }\n\n  // Set default locale. This locale will be used when fallback is enabled and\n  // the translation doesn't exist in a particular locale.\n  I18n.reset = function () {\n    var key\n    for (key in DEFAULT_OPTIONS) {\n      this[key] = DEFAULT_OPTIONS[key]\n    }\n  }\n\n  // Much like `reset`, but only assign options if not already assigned\n  I18n.initializeOptions = function () {\n    var key\n    for (key in DEFAULT_OPTIONS)\n      if (!isSet(this[key])) {\n        this[key] = DEFAULT_OPTIONS[key]\n      }\n  }\n  I18n.initializeOptions()\n\n  // Return a list of all locales that must be tried before returning the\n  // missing translation message. By default, this will consider the inline option,\n  // current locale and fallback locale.\n  //\n  //     I18n.locales.get(\"de-DE\");\n  //     // [\"de-DE\", \"de\", \"en\"]\n  //\n  // You can define custom rules for any locale. Just make sure you return a array\n  // containing all locales.\n  //\n  //     // Default the Wookie locale to English.\n  //     I18n.locales[\"wk\"] = function(locale) {\n  //       return [\"en\"];\n  //     };\n  //\n  I18n.locales = {}\n\n  // Retrieve locales based on inline locale, current locale or default to\n  // I18n's detection.\n  I18n.locales.get = function (locale) {\n    var result = this[locale] || this[I18n.locale] || this['default']\n\n    if (isFunction(result)) {\n      result = result(locale)\n    }\n\n    if (isArray(result) === false) {\n      result = [result]\n    }\n\n    return result\n  }\n\n  // The default locale list.\n  I18n.locales['default'] = function (locale) {\n    var locales = [],\n      list = []\n    // Handle the inline locale option that can be provided to\n    // the `I18n.t` options.\n    if (locale) {\n      locales.push(locale)\n    }\n\n    // Add the current locale to the list.\n    if (!locale && I18n.locale) {\n      locales.push(I18n.locale)\n    }\n\n    // Add the default locale if fallback strategy is enabled.\n    if (I18n.fallbacks && I18n.defaultLocale) {\n      locales.push(I18n.defaultLocale)\n    }\n\n    // Locale code format 1:\n    // According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)\n    // language codes for Traditional Chinese should be `zh-Hant`\n    //\n    // But due to backward compatibility\n    // We use older version of IETF language tag\n    // @see http://www.w3.org/TR/html401/struct/dirlang.html\n    // @see http://en.wikipedia.org/wiki/IETF_language_tag\n    //\n    // Format: `language-code = primary-code ( \"-\" subcode )*`\n    //\n    // primary-code uses ISO639-1\n    // @see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    // @see http://www.iso.org/iso/home/standards/language_codes.htm\n    //\n    // subcode uses ISO 3166-1 alpha-2\n    // @see http://en.wikipedia.org/wiki/ISO_3166\n    // @see http://www.iso.org/iso/country_codes.htm\n    //\n    // @note\n    //   subcode can be in upper case or lower case\n    //   defining it in upper case is a convention only\n\n    // Locale code format 2:\n    // Format: `code = primary-code ( \"-\" region-code )*`\n    // primary-code uses ISO 639-1\n    // script-code uses ISO 15924\n    // region-code uses ISO 3166-1 alpha-2\n    // Example: zh-Hant-TW, en-HK, zh-Hant-CN\n    //\n    // It is similar to RFC4646 (or actually the same),\n    // but seems to be limited to language, script, region\n\n    // Compute each locale with its country code.\n    // So this will return an array containing\n    // `de-DE` and `de`\n    // or\n    // `zh-hans-tw`, `zh-hans`, `zh`\n    // locales.\n    locales.forEach(function (locale) {\n      var localeParts = locale.split('-')\n      var firstFallback = null\n      var secondFallback = null\n      if (localeParts.length === 3) {\n        firstFallback = [localeParts[0], localeParts[1]].join('-')\n        secondFallback = localeParts[0]\n      } else if (localeParts.length === 2) {\n        firstFallback = localeParts[0]\n      }\n\n      if (list.indexOf(locale) === -1) {\n        list.push(locale)\n      }\n\n      if (!I18n.fallbacks) {\n        return\n      }\n\n      ;[firstFallback, secondFallback].forEach(function (\n        nullableFallbackLocale\n      ) {\n        // We don't want null values\n        if (typeof nullableFallbackLocale === 'undefined') {\n          return\n        }\n        if (nullableFallbackLocale === null) {\n          return\n        }\n        // We don't want duplicate values\n        //\n        // Comparing with `locale` first is faster than\n        // checking whether value's presence in the list\n        if (nullableFallbackLocale === locale) {\n          return\n        }\n        if (list.indexOf(nullableFallbackLocale) !== -1) {\n          return\n        }\n\n        list.push(nullableFallbackLocale)\n      })\n    })\n\n    // No locales set? English it is.\n    if (!locales.length) {\n      locales.push('en')\n    }\n\n    return list\n  }\n\n  // Hold pluralization rules.\n  I18n.pluralization = {}\n\n  // Return the pluralizer for a specific locale.\n  // If no specify locale is found, then I18n's default will be used.\n  I18n.pluralization.get = function (locale) {\n    return this[locale] || this[I18n.locale] || this['default']\n  }\n\n  // The default pluralizer rule.\n  // It detects the `zero`, `one`, and `other` scopes.\n  I18n.pluralization['default'] = function (count) {\n    switch (count) {\n      case 0:\n        return ['zero', 'other']\n      case 1:\n        return ['one']\n      default:\n        return ['other']\n    }\n  }\n\n  // Return current locale. If no locale has been set, then\n  // the current locale will be the default locale.\n  I18n.currentLocale = function () {\n    return this.locale || this.defaultLocale\n  }\n\n  // Check if value is different than undefined and null;\n  I18n.isSet = isSet\n\n  // Find and process the translation using the provided scope and options.\n  // This is used internally by some functions and should not be used as an\n  // public API.\n  I18n.lookup = function (scope, options) {\n    options = options || {}\n\n    var locales = this.locales.get(options.locale).slice(),\n      locale,\n      scopes,\n      fullScope,\n      translations\n\n    fullScope = this.getFullScope(scope, options)\n\n    while (locales.length) {\n      locale = locales.shift()\n      scopes = fullScope.split(this.defaultSeparator)\n      translations = this.translations[locale]\n\n      if (!translations) {\n        continue\n      }\n      while (scopes.length) {\n        translations = translations[scopes.shift()]\n\n        if (translations === undefined || translations === null) {\n          break\n        }\n      }\n\n      if (translations !== undefined && translations !== null) {\n        return translations\n      }\n    }\n\n    if (isSet(options.defaultValue)) {\n      return lazyEvaluate(options.defaultValue, scope)\n    }\n  }\n\n  // lookup pluralization rule key into translations\n  I18n.pluralizationLookupWithoutFallback = function (\n    count,\n    locale,\n    translations\n  ) {\n    var pluralizer = this.pluralization.get(locale),\n      pluralizerKeys = pluralizer(count),\n      pluralizerKey,\n      message\n\n    if (isObject(translations)) {\n      while (pluralizerKeys.length) {\n        pluralizerKey = pluralizerKeys.shift()\n        if (isSet(translations[pluralizerKey])) {\n          message = translations[pluralizerKey]\n          break\n        }\n      }\n    }\n\n    return message\n  }\n\n  // Lookup dedicated to pluralization\n  I18n.pluralizationLookup = function (count, scope, options) {\n    options = options || {}\n    var locales = this.locales.get(options.locale).slice(),\n      locale,\n      scopes,\n      translations,\n      message\n    scope = this.getFullScope(scope, options)\n\n    while (locales.length) {\n      locale = locales.shift()\n      scopes = scope.split(this.defaultSeparator)\n      translations = this.translations[locale]\n\n      if (!translations) {\n        continue\n      }\n\n      while (scopes.length) {\n        translations = translations[scopes.shift()]\n        if (!isObject(translations)) {\n          break\n        }\n        if (scopes.length === 0) {\n          message = this.pluralizationLookupWithoutFallback(\n            count,\n            locale,\n            translations\n          )\n        }\n      }\n      if (typeof message !== 'undefined' && message !== null) {\n        break\n      }\n    }\n\n    if (typeof message === 'undefined' || message === null) {\n      if (isSet(options.defaultValue)) {\n        if (isObject(options.defaultValue)) {\n          message = this.pluralizationLookupWithoutFallback(\n            count,\n            options.locale,\n            options.defaultValue\n          )\n        } else {\n          message = options.defaultValue\n        }\n        translations = options.defaultValue\n      }\n    }\n\n    return { message: message, translations: translations }\n  }\n\n  // Rails changed the way the meridian is stored.\n  // It started with `date.meridian` returning an array,\n  // then it switched to `time.am` and `time.pm`.\n  // This function abstracts this difference and returns\n  // the correct meridian or the default value when none is provided.\n  I18n.meridian = function () {\n    var time = this.lookup('time')\n    var date = this.lookup('date')\n\n    if (time && time.am && time.pm) {\n      return [time.am, time.pm]\n    } else if (date && date.meridian) {\n      return date.meridian\n    } else {\n      return DATE.meridian\n    }\n  }\n\n  // Merge serveral hash options, checking if value is set before\n  // overwriting any value. The precedence is from left to right.\n  //\n  //     I18n.prepareOptions({name: \"John Doe\"}, {name: \"Mary Doe\", role: \"user\"});\n  //     #=> {name: \"John Doe\", role: \"user\"}\n  //\n  I18n.prepareOptions = function () {\n    var args = slice.call(arguments),\n      options = {},\n      subject\n\n    while (args.length) {\n      subject = args.shift()\n\n      if (typeof subject != 'object') {\n        continue\n      }\n\n      for (var attr in subject) {\n        if (!subject.hasOwnProperty(attr)) {\n          continue\n        }\n\n        if (isSet(options[attr])) {\n          continue\n        }\n\n        options[attr] = subject[attr]\n      }\n    }\n\n    return options\n  }\n\n  // Generate a list of translation options for default fallbacks.\n  // `defaultValue` is also deleted from options as it is returned as part of\n  // the translationOptions array.\n  I18n.createTranslationOptions = function (scope, options) {\n    var translationOptions = [{ scope: scope }]\n\n    // Defaults should be an array of hashes containing either\n    // fallback scopes or messages\n    if (isSet(options.defaults)) {\n      translationOptions = translationOptions.concat(options.defaults)\n    }\n\n    // Maintain support for defaultValue. Since it is always a message\n    // insert it in to the translation options as such.\n    if (isSet(options.defaultValue)) {\n      translationOptions.push({ message: options.defaultValue })\n    }\n\n    return translationOptions\n  }\n\n  // Translate the given scope with the provided options.\n  I18n.translate = function (scope, options) {\n    options = options || {}\n\n    var translationOptions = this.createTranslationOptions(scope, options)\n\n    var translation\n    var usedScope = scope\n\n    var optionsWithoutDefault = this.prepareOptions(options)\n    delete optionsWithoutDefault.defaultValue\n\n    // Iterate through the translation options until a translation\n    // or message is found.\n    var translationFound = translationOptions.some(function (\n      translationOption\n    ) {\n      if (isSet(translationOption.scope)) {\n        usedScope = translationOption.scope\n        translation = this.lookup(usedScope, optionsWithoutDefault)\n      } else if (isSet(translationOption.message)) {\n        translation = lazyEvaluate(translationOption.message, scope)\n      }\n\n      if (translation !== undefined && translation !== null) {\n        return true\n      }\n    },\n    this)\n\n    if (!translationFound) {\n      return this.missingTranslation(scope, options)\n    }\n\n    if (typeof translation === 'string') {\n      translation = this.interpolate(translation, options)\n    } else if (isArray(translation)) {\n      translation = translation.map(function (t) {\n        return typeof t === 'string' ? this.interpolate(t, options) : t\n      }, this)\n    } else if (isObject(translation) && isSet(options.count)) {\n      translation = this.pluralize(options.count, usedScope, options)\n    }\n\n    return translation\n  }\n\n  // This function interpolates the all variables in the given message.\n  I18n.interpolate = function (message, options) {\n    if (message == null) {\n      return message\n    }\n\n    options = options || {}\n    var matches = message.match(this.placeholder),\n      placeholder,\n      value,\n      name,\n      regex\n\n    if (!matches) {\n      return message\n    }\n\n    while (matches.length) {\n      placeholder = matches.shift()\n      name = placeholder.replace(this.placeholder, '$1')\n\n      if (isSet(options[name])) {\n        value = options[name].toString().replace(/\\$/gm, '_#$#_')\n      } else if (name in options) {\n        value = this.nullPlaceholder(placeholder, message, options)\n      } else {\n        value = this.missingPlaceholder(placeholder, message, options)\n      }\n\n      regex = new RegExp(\n        placeholder.replace(/{/gm, '\\\\{').replace(/}/gm, '\\\\}')\n      )\n      message = message.replace(regex, value)\n    }\n\n    return message.replace(/_#\\$#_/g, '$')\n  }\n\n  // Pluralize the given scope using the `count` value.\n  // The pluralized translation may have other placeholders,\n  // which will be retrieved from `options`.\n  I18n.pluralize = function (count, scope, options) {\n    options = this.prepareOptions({ count: String(count) }, options)\n    var pluralizer, result\n\n    result = this.pluralizationLookup(count, scope, options)\n    if (\n      typeof result.translations === 'undefined' ||\n      result.translations == null\n    ) {\n      return this.missingTranslation(scope, options)\n    }\n\n    if (typeof result.message !== 'undefined' && result.message != null) {\n      return this.interpolate(result.message, options)\n    } else {\n      pluralizer = this.pluralization.get(options.locale)\n      return this.missingTranslation(\n        scope + '.' + pluralizer(count)[0],\n        options\n      )\n    }\n  }\n\n  // Return a missing translation message for the given parameters.\n  I18n.missingTranslation = function (scope, options) {\n    //guess intended string\n    if (this.missingBehaviour === 'guess') {\n      //get only the last portion of the scope\n      var s = scope.split('.').slice(-1)[0]\n      //replace underscore with space && camelcase with space and lowercase letter\n      return (\n        (this.missingTranslationPrefix.length > 0\n          ? this.missingTranslationPrefix\n          : '') +\n        s\n          .replace('_', ' ')\n          .replace(/([a-z])([A-Z])/g, function (match, p1, p2) {\n            return p1 + ' ' + p2.toLowerCase()\n          })\n      )\n    }\n\n    var localeForTranslation =\n      options != null && options.locale != null\n        ? options.locale\n        : this.currentLocale()\n    var fullScope = this.getFullScope(scope, options)\n    var fullScopeWithLocale = [localeForTranslation, fullScope].join(\n      this.defaultSeparator\n    )\n\n    return '[missing \"' + fullScopeWithLocale + '\" translation]'\n  }\n\n  // Return a missing placeholder message for given parameters\n  I18n.missingPlaceholder = function (placeholder, message, options) {\n    return '[missing ' + placeholder + ' value]'\n  }\n\n  I18n.nullPlaceholder = function () {\n    return I18n.missingPlaceholder.apply(I18n, arguments)\n  }\n\n  // Format number using localization rules.\n  // The options will be retrieved from the `number.format` scope.\n  // If this isn't present, then the following options will be used:\n  //\n  // - `precision`: `3`\n  // - `separator`: `\".\"`\n  // - `delimiter`: `\",\"`\n  // - `strip_insignificant_zeros`: `false`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toNumber = function (number, options) {\n    options = this.prepareOptions(\n      options,\n      this.lookup('number.format'),\n      NUMBER_FORMAT\n    )\n\n    var negative = number < 0,\n      string = toFixed(Math.abs(number), options.precision).toString(),\n      parts = string.split('.'),\n      precision,\n      buffer = [],\n      formattedNumber,\n      format = options.format || '%n',\n      sign = negative ? '-' : ''\n    number = parts[0]\n    precision = parts[1]\n\n    while (number.length > 0) {\n      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3))\n      number = number.substr(0, number.length - 3)\n    }\n\n    formattedNumber = buffer.join(options.delimiter)\n\n    if (options.strip_insignificant_zeros && precision) {\n      precision = precision.replace(/0+$/, '')\n    }\n\n    if (options.precision > 0 && precision) {\n      formattedNumber += options.separator + precision\n    }\n\n    if (options.sign_first) {\n      format = '%s' + format\n    } else {\n      format = format.replace('%n', '%s%n')\n    }\n\n    formattedNumber = format\n      .replace('%u', options.unit)\n      .replace('%n', formattedNumber)\n      .replace('%s', sign)\n\n    return formattedNumber\n  }\n\n  // Format currency with localization rules.\n  // The options will be retrieved from the `number.currency.format` and\n  // `number.format` scopes, in that order.\n  //\n  // Any missing option will be retrieved from the `I18n.toNumber` defaults and\n  // the following options:\n  //\n  // - `unit`: `\"$\"`\n  // - `precision`: `2`\n  // - `format`: `\"%u%n\"`\n  // - `delimiter`: `\",\"`\n  // - `separator`: `\".\"`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toCurrency = function (number, options) {\n    options = this.prepareOptions(\n      options,\n      this.lookup('number.currency.format'),\n      this.lookup('number.format'),\n      CURRENCY_FORMAT\n    )\n\n    return this.toNumber(number, options)\n  }\n\n  // Localize several values.\n  // You can provide the following scopes: `currency`, `number`, or `percentage`.\n  // If you provide a scope that matches the `/^(date|time)/` regular expression\n  // then the `value` will be converted by using the `I18n.toTime` function.\n  //\n  // It will default to the value's `toString` function.\n  //\n  I18n.localize = function (scope, value, options) {\n    options || (options = {})\n\n    switch (scope) {\n      case 'currency':\n        return this.toCurrency(value)\n      case 'number':\n        scope = this.lookup('number.format')\n        return this.toNumber(value, scope)\n      case 'percentage':\n        return this.toPercentage(value)\n      default:\n        var localizedValue\n\n        if (scope.match(/^(date|time)/)) {\n          localizedValue = this.toTime(scope, value)\n        } else {\n          localizedValue = value.toString()\n        }\n\n        return this.interpolate(localizedValue, options)\n    }\n  }\n\n  // Parse a given `date` string into a JavaScript Date object.\n  // This function is time zone aware.\n  //\n  // The following string formats are recognized:\n  //\n  //    yyyy-mm-dd\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ssZ\n  //    yyyy-mm-dd[ T]hh:mm::ss+0000\n  //    yyyy-mm-dd[ T]hh:mm::ss+00:00\n  //    yyyy-mm-dd[ T]hh:mm::ss.123Z\n  //\n  I18n.parseDate = function (date) {\n    var matches, convertedDate, fraction\n    // A date input of `null` or `undefined` will be returned as-is\n    if (date == null) {\n      return date\n    }\n    // we have a date, so just return it.\n    if (typeof date === 'object') {\n      return date\n    }\n\n    matches = date\n      .toString()\n      .match(\n        /(\\d{4})-(\\d{2})-(\\d{2})(?:[ T](\\d{2}):(\\d{2}):(\\d{2})([\\.,]\\d{1,3})?)?(Z|\\+00:?00)?/\n      )\n\n    if (matches) {\n      for (var i = 1; i <= 6; i++) {\n        matches[i] = parseInt(matches[i], 10) || 0\n      }\n\n      // month starts on 0\n      matches[2] -= 1\n\n      fraction = matches[7] ? 1000 * ('0' + matches[7]) : null\n\n      if (matches[8]) {\n        convertedDate = new Date(\n          Date.UTC(\n            matches[1],\n            matches[2],\n            matches[3],\n            matches[4],\n            matches[5],\n            matches[6],\n            fraction\n          )\n        )\n      } else {\n        convertedDate = new Date(\n          matches[1],\n          matches[2],\n          matches[3],\n          matches[4],\n          matches[5],\n          matches[6],\n          fraction\n        )\n      }\n    } else if (typeof date == 'number') {\n      // UNIX timestamp\n      convertedDate = new Date()\n      convertedDate.setTime(date)\n    } else if (\n      date.match(\n        /([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\\d+) (\\d+:\\d+:\\d+) ([+-]\\d+) (\\d+)/\n      )\n    ) {\n      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by\n      // webkit/firefox, but not by IE, so we must parse it manually.\n      convertedDate = new Date()\n      convertedDate.setTime(\n        Date.parse(\n          [\n            RegExp.$1,\n            RegExp.$2,\n            RegExp.$3,\n            RegExp.$6,\n            RegExp.$4,\n            RegExp.$5,\n          ].join(' ')\n        )\n      )\n    } else if (date.match(/\\d+ \\d+:\\d+:\\d+ [+-]\\d+ \\d+/)) {\n      // a valid javascript format with timezone info\n      convertedDate = new Date()\n      convertedDate.setTime(Date.parse(date))\n    } else {\n      // an arbitrary javascript string\n      convertedDate = new Date()\n      convertedDate.setTime(Date.parse(date))\n    }\n\n    return convertedDate\n  }\n\n  // Formats time according to the directives in the given format string.\n  // The directives begins with a percent (%) character. Any text not listed as a\n  // directive will be passed through to the output string.\n  //\n  // The accepted formats are:\n  //\n  //     %a     - The abbreviated weekday name (Sun)\n  //     %A     - The full weekday name (Sunday)\n  //     %b     - The abbreviated month name (Jan)\n  //     %B     - The full month name (January)\n  //     %c     - The preferred local date and time representation\n  //     %d     - Day of the month (01..31)\n  //     %-d    - Day of the month (1..31)\n  //     %H     - Hour of the day, 24-hour clock (00..23)\n  //     %-H/%k - Hour of the day, 24-hour clock (0..23)\n  //     %I     - Hour of the day, 12-hour clock (01..12)\n  //     %-I/%l - Hour of the day, 12-hour clock (1..12)\n  //     %m     - Month of the year (01..12)\n  //     %-m    - Month of the year (1..12)\n  //     %M     - Minute of the hour (00..59)\n  //     %-M    - Minute of the hour (0..59)\n  //     %p     - Meridian indicator (AM  or  PM)\n  //     %P     - Meridian indicator (am  or  pm)\n  //     %S     - Second of the minute (00..60)\n  //     %-S    - Second of the minute (0..60)\n  //     %w     - Day of the week (Sunday is 0, 0..6)\n  //     %y     - Year without a century (00..99)\n  //     %-y    - Year without a century (0..99)\n  //     %Y     - Year with century\n  //     %z/%Z  - Timezone offset (+0545)\n  //\n  I18n.strftime = function (date, format) {\n    var options = this.lookup('date'),\n      meridianOptions = I18n.meridian()\n    if (!options) {\n      options = {}\n    }\n\n    options = this.prepareOptions(options, DATE)\n\n    if (isNaN(date.getTime())) {\n      throw new Error(\n        'I18n.strftime() requires a valid date object, but received an invalid date.'\n      )\n    }\n\n    var weekDay = date.getDay(),\n      day = date.getDate(),\n      year = date.getFullYear(),\n      month = date.getMonth() + 1,\n      hour = date.getHours(),\n      hour12 = hour,\n      meridian = hour > 11 ? 1 : 0,\n      secs = date.getSeconds(),\n      mins = date.getMinutes(),\n      offset = date.getTimezoneOffset(),\n      absOffsetHours = Math.floor(Math.abs(offset / 60)),\n      absOffsetMinutes = Math.abs(offset) - absOffsetHours * 60,\n      timezoneoffset =\n        (offset > 0 ? '-' : '+') +\n        (absOffsetHours.toString().length < 2\n          ? '0' + absOffsetHours\n          : absOffsetHours) +\n        (absOffsetMinutes.toString().length < 2\n          ? '0' + absOffsetMinutes\n          : absOffsetMinutes)\n    if (hour12 > 12) {\n      hour12 = hour12 - 12\n    } else if (hour12 === 0) {\n      hour12 = 12\n    }\n\n    format = format.replace('%a', options.abbr_day_names[weekDay])\n    format = format.replace('%A', options.day_names[weekDay])\n    format = format.replace('%b', options.abbr_month_names[month])\n    format = format.replace('%B', options.month_names[month])\n    format = format.replace('%d', padding(day))\n    format = format.replace('%e', day)\n    format = format.replace('%-d', day)\n    format = format.replace('%H', padding(hour))\n    format = format.replace('%-H', hour)\n    format = format.replace('%k', hour)\n    format = format.replace('%I', padding(hour12))\n    format = format.replace('%-I', hour12)\n    format = format.replace('%l', hour12)\n    format = format.replace('%m', padding(month))\n    format = format.replace('%-m', month)\n    format = format.replace('%M', padding(mins))\n    format = format.replace('%-M', mins)\n    format = format.replace('%p', meridianOptions[meridian])\n    format = format.replace('%P', meridianOptions[meridian].toLowerCase())\n    format = format.replace('%S', padding(secs))\n    format = format.replace('%-S', secs)\n    format = format.replace('%w', weekDay)\n    format = format.replace('%y', padding(year))\n    format = format.replace('%-y', padding(year).replace(/^0+/, ''))\n    format = format.replace('%Y', year)\n    format = format.replace('%z', timezoneoffset)\n    format = format.replace('%Z', timezoneoffset)\n\n    return format\n  }\n\n  // Convert the given dateString into a formatted date.\n  I18n.toTime = function (scope, dateString) {\n    var date = this.parseDate(dateString),\n      format = this.lookup(scope)\n    // A date input of `null` or `undefined` will be returned as-is\n    if (date == null) {\n      return date\n    }\n\n    var date_string = date.toString()\n    if (date_string.match(/invalid/i)) {\n      return date_string\n    }\n\n    if (!format) {\n      return date_string\n    }\n\n    return this.strftime(date, format)\n  }\n\n  // Convert a number into a formatted percentage value.\n  I18n.toPercentage = function (number, options) {\n    options = this.prepareOptions(\n      options,\n      this.lookup('number.percentage.format'),\n      this.lookup('number.format'),\n      PERCENTAGE_FORMAT\n    )\n\n    return this.toNumber(number, options)\n  }\n\n  // Convert a number into a readable size representation.\n  I18n.toHumanSize = function (number, options) {\n    var kb = 1024,\n      size = number,\n      iterations = 0,\n      unit,\n      precision\n\n    while (size >= kb && iterations < 4) {\n      size = size / kb\n      iterations += 1\n    }\n\n    if (iterations === 0) {\n      unit = this.t('number.human.storage_units.units.byte', { count: size })\n      precision = 0\n    } else {\n      unit = this.t(\n        'number.human.storage_units.units.' + SIZE_UNITS[iterations]\n      )\n      precision = size - Math.floor(size) === 0 ? 0 : 1\n    }\n\n    options = this.prepareOptions(options, {\n      unit: unit,\n      precision: precision,\n      format: '%n%u',\n      delimiter: '',\n    })\n\n    return this.toNumber(size, options)\n  }\n\n  I18n.getFullScope = function (scope, options) {\n    options = options || {}\n\n    // Deal with the scope as an array.\n    if (isArray(scope)) {\n      scope = scope.join(this.defaultSeparator)\n    }\n\n    // Deal with the scope option provided through the second argument.\n    //\n    //    I18n.t('hello', {scope: 'greetings'});\n    //\n    if (options.scope) {\n      scope = [options.scope, scope].join(this.defaultSeparator)\n    }\n\n    return scope\n  }\n  /**\n   * Merge obj1 with obj2 (shallow merge), without modifying inputs\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @returns {Object} Merged values of obj1 and obj2\n   *\n   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used\n   * Idea is from:\n   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8\n   */\n  I18n.extend = function (obj1, obj2) {\n    if (typeof obj1 === 'undefined' && typeof obj2 === 'undefined') {\n      return {}\n    }\n    return merge(obj1, obj2)\n  }\n\n  // Set aliases, so we can save some typing.\n  I18n.t = I18n.translate\n\n  I18n.l = I18n.localize\n\n  I18n.p = I18n.pluralize\n\n  return I18n\n}\n\nexports.createI18njs = createI18njs\n"]},"metadata":{},"sourceType":"script"}