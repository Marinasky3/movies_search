{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar _a;\n\nimport React from 'react';\nimport { useDropzone as useDropzoneBase } from 'react-dropzone';\nimport { useI18nContext } from '../../state/I18n';\nimport { partition } from '../../utils/partition';\nimport { MultipleErrors } from './Dropzone';\nimport { StyledErrorBannerDetails } from './Dropzone.styles';\nimport { dropErrors, fileRejectionReason } from './Dropzone.types';\nvar oneDropAtATimeRejectionReason = 'one-drop-at-a-time';\nvar dropErrorsByReason = (_a = {}, _a[fileRejectionReason.maxFiles] = dropErrors.fileAmount, _a[fileRejectionReason.maxFileSize] = dropErrors.maxFileSize, _a[fileRejectionReason.minFileSize] = dropErrors.minFileSize, _a[fileRejectionReason.fileType] = dropErrors.fileType, _a);\n\nvar getSizeInMB = function (maxSize) {\n  return maxSize / 10e5;\n};\n/**\n * WARNING:\n * Use ACCEPT prop carefully, because mime type determination is not reliable across platforms.\n * Details: https://github.com/react-dropzone/react-dropzone/tree/master/examples/accept#browser-limitations\n */\n\n\nexport var useDropzone = function (_a) {\n  if (_a === void 0) {\n    _a = {};\n  }\n\n  var _b = _a.value,\n      value = _b === void 0 ? [] : _b,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      _d = _a.multiple,\n      multiple = _d === void 0 ? false : _d,\n      _e = _a.noClick,\n      noClick = _e === void 0 ? true : _e,\n      _f = _a.noKeyboard,\n      noKeyboard = _f === void 0 ? true : _f,\n      onDragEnter = _a.onDragEnter,\n      onDragOver = _a.onDragOver,\n      onDragLeave = _a.onDragLeave,\n      onDropRejected = _a.onDropRejected,\n      maxSize = _a.maxFileSize,\n      minSize = _a.minFileSize,\n      _g = _a.maxFileNumber,\n      maxFileNumber = _g === void 0 ? Infinity : _g,\n      _onDrop = _a.onDrop,\n      onDropAccepted = _a.onDropAccepted,\n      props = __rest(_a, [\"value\", \"disabled\", \"multiple\", \"noClick\", \"noKeyboard\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDropRejected\", \"maxFileSize\", \"minFileSize\", \"maxFileNumber\", \"onDrop\", \"onDropAccepted\"]);\n\n  var I18n = useI18nContext();\n\n  var _h = React.useState([]),\n      acceptedFiles = _h[0],\n      setAcceptedFiles = _h[1];\n\n  var _j = React.useState([]),\n      fileRejections = _j[0],\n      setFileRejections = _j[1];\n\n  var maxFilesRemaining = maxFileNumber - value.length;\n  var defaultDropError = {\n    type: dropErrors.reset,\n    title: '',\n    message: ''\n  };\n\n  var dropErrorReducer = function (state, action) {\n    var rejectedFiles = React.createElement(StyledErrorBannerDetails, null, fileRejections.map(function (_a) {\n      var name = _a.file.name;\n      return React.createElement(\"li\", {\n        key: name\n      }, name);\n    }));\n    var title = I18n.t('core.dropzone.errorTitle');\n\n    switch (action) {\n      case dropErrors.oneFileAtATime:\n        return {\n          type: dropErrors.oneFileAtATime,\n          title: '',\n          message: I18n.t('core.dropzone.oneFileAtATimeError')\n        };\n\n      case dropErrors.fileAmount:\n        return {\n          type: dropErrors.fileAmount,\n          title: title,\n          message: I18n.t('core.dropzone.standaloneMaxFileNumberError', {\n            maxFiles: maxFileNumber\n          }),\n          body: rejectedFiles\n        };\n\n      case dropErrors.fileType:\n        return {\n          type: dropErrors.fileType,\n          title: title,\n          message: I18n.t('core.dropzone.standaloneUnsupportedFileTypeError'),\n          body: rejectedFiles\n        };\n\n      case dropErrors.maxFileSize:\n        return {\n          type: dropErrors.maxFileSize,\n          title: title,\n          message: I18n.t('core.dropzone.standaloneMaxFileSizeError', {\n            sizeInMegabytes: getSizeInMB(maxSize)\n          }),\n          body: rejectedFiles\n        };\n\n      case dropErrors.minFileSize:\n        return {\n          type: dropErrors.minFileSize,\n          title: title,\n          message: I18n.t('core.dropzone.standaloneMinFileSizeError', {\n            sizeInMegabytes: getSizeInMB(minSize)\n          }),\n          body: rejectedFiles\n        };\n\n      case dropErrors.multipleErrors:\n        return {\n          type: dropErrors.multipleErrors,\n          title: title,\n          message: I18n.t('core.dropzone.multipleErrorsMessage'),\n          body: React.createElement(MultipleErrors, {\n            fileRejections: fileRejections,\n            maxFiles: maxFileNumber,\n            maxSize: maxSize,\n            minSize: minSize\n          })\n        };\n\n      case dropErrors.reset:\n        return __assign({}, defaultDropError);\n\n      default:\n        return state;\n    }\n  };\n\n  var withOneDropAtATimeError = function (file) {\n    return {\n      file: file,\n      errors: [{\n        message: I18n.t('core.dropzone.oneDropAtATimeError'),\n        code: oneDropAtATimeRejectionReason\n      }]\n    };\n  };\n\n  var _k = React.useReducer(dropErrorReducer, __assign({}, defaultDropError)),\n      dropError = _k[0],\n      dispatchDropError = _k[1];\n\n  var onDrop = React.useCallback(function (acceptedFiles, rejectedFiles, event) {\n    dispatchDropError(dropErrors.reset);\n\n    var droppedFiles = __spreadArray(__spreadArray([], acceptedFiles, true), rejectedFiles.map(function (rej) {\n      return rej.file;\n    }), true);\n\n    if (!multiple && droppedFiles.length > 1) {\n      dispatchDropError(dropErrors.oneFileAtATime);\n      onDropRejected === null || onDropRejected === void 0 ? void 0 : onDropRejected(droppedFiles.map(withOneDropAtATimeError), event);\n      return;\n    }\n\n    var allFilesWithRejections = __spreadArray(__spreadArray([], acceptedFiles.map(function (file) {\n      return {\n        file: file,\n        errors: []\n      };\n    }), true), rejectedFiles, true).map(function (_a, i) {\n      var file = _a.file,\n          errors = _a.errors;\n      return {\n        file: file,\n        errors: i < maxFilesRemaining ? errors : __spreadArray(__spreadArray([], errors, true), [{\n          message: '',\n          code: fileRejectionReason.maxFiles\n        }], false)\n      };\n    });\n\n    var _a = partition(function (_a) {\n      var errors = _a.errors;\n      return errors.length === 0;\n    }, allFilesWithRejections),\n        actualAcceptedFiles_ = _a[0],\n        actualRejectedFiles = _a[1];\n\n    var actualAcceptedFiles = actualAcceptedFiles_.map(function (_a) {\n      var file = _a.file;\n      return file;\n    });\n    _onDrop === null || _onDrop === void 0 ? void 0 : _onDrop(actualAcceptedFiles, actualRejectedFiles, event);\n    setAcceptedFiles(actualAcceptedFiles);\n    setFileRejections(actualRejectedFiles);\n\n    if (actualAcceptedFiles.length) {\n      onDropAccepted === null || onDropAccepted === void 0 ? void 0 : onDropAccepted(actualAcceptedFiles, event);\n    }\n\n    if (actualRejectedFiles.length) {\n      onDropRejected === null || onDropRejected === void 0 ? void 0 : onDropRejected(actualRejectedFiles, event);\n    }\n\n    var errorCodes = actualRejectedFiles.flatMap(function (rejection) {\n      return rejection.errors;\n    }).map(function (error) {\n      return error.code;\n    });\n    var hasMultipleErrors = new Set(__spreadArray([], errorCodes, true)).size > 1;\n\n    if (hasMultipleErrors) {\n      dispatchDropError(dropErrors.multipleErrors);\n    } else {\n      dispatchDropError(dropErrorsByReason[errorCodes[0]]);\n    }\n  }, [_onDrop, maxFilesRemaining, onDropRejected, onDropAccepted, multiple]);\n\n  var _l = useDropzoneBase(__assign(__assign({}, props), {\n    disabled: disabled,\n    minSize: minSize,\n    maxSize: maxSize,\n    multiple: multiple,\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDragOver: onDragOver,\n    onDrop: onDrop,\n    noClick: noClick,\n    noKeyboard: noKeyboard\n  })),\n      getRootProps = _l.getRootProps,\n      getInputProps = _l.getInputProps,\n      isDragActive = _l.isDragActive,\n      isFileDialogActive = _l.isFileDialogActive,\n      isDragReject = _l.isDragReject,\n      isFocused = _l.isFocused,\n      isDragAccept = _l.isDragAccept,\n      draggedFiles = _l.draggedFiles,\n      open = _l.open,\n      rootRef = _l.rootRef,\n      inputRef = _l.inputRef;\n\n  var dragError = React.useMemo(function () {\n    var getFileTypeError = function () {\n      return isDragReject ? I18n.t('core.dropzone.incorrectFileTypeMessage', {\n        count: draggedFiles.length\n      }) : '';\n    };\n\n    var getFileAmountError = function () {\n      var fileLimit = multiple ? maxFilesRemaining : 1;\n      var amountError = multiple ? I18n.t('core.dropzone.invalidAmountAttachments', {\n        count: maxFileNumber\n      }) : I18n.t('core.dropzone.incorrectFileNumber');\n      return draggedFiles.length > fileLimit ? amountError : '';\n    };\n\n    return getFileAmountError() || getFileTypeError();\n  }, [I18n, draggedFiles.length, maxFilesRemaining, isDragReject, maxFileNumber, multiple]);\n  return {\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    isDragActive: isDragActive,\n    isFileDialogActive: isFileDialogActive,\n    isDragReject: isDragReject,\n    isFocused: isFocused,\n    isDragAccept: isDragAccept,\n    draggedFiles: draggedFiles,\n    acceptedFiles: acceptedFiles,\n    fileRejections: fileRejections,\n    open: open,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    multiple: multiple,\n    dragError: dragError,\n    dropError: dropError,\n    dispatchDropError: dispatchDropError,\n    disabled: disabled\n  };\n};","map":{"version":3,"sources":["../../../../src/components/Dropzone/Dropzone.hooks.tsx"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar _a;\nimport React from 'react';\nimport { useDropzone as useDropzoneBase } from 'react-dropzone';\nimport { useI18nContext } from '../../state/I18n';\nimport { partition } from '../../utils/partition';\nimport { MultipleErrors } from './Dropzone';\nimport { StyledErrorBannerDetails } from './Dropzone.styles';\nimport { dropErrors, fileRejectionReason, } from './Dropzone.types';\nvar oneDropAtATimeRejectionReason = 'one-drop-at-a-time';\nvar dropErrorsByReason = (_a = {},\n    _a[fileRejectionReason.maxFiles] = dropErrors.fileAmount,\n    _a[fileRejectionReason.maxFileSize] = dropErrors.maxFileSize,\n    _a[fileRejectionReason.minFileSize] = dropErrors.minFileSize,\n    _a[fileRejectionReason.fileType] = dropErrors.fileType,\n    _a);\nvar getSizeInMB = function (maxSize) { return maxSize / 10e5; };\n/**\n * WARNING:\n * Use ACCEPT prop carefully, because mime type determination is not reliable across platforms.\n * Details: https://github.com/react-dropzone/react-dropzone/tree/master/examples/accept#browser-limitations\n */\nexport var useDropzone = function (_a) {\n    if (_a === void 0) { _a = {}; }\n    var _b = _a.value, value = _b === void 0 ? [] : _b, _c = _a.disabled, disabled = _c === void 0 ? false : _c, _d = _a.multiple, multiple = _d === void 0 ? false : _d, _e = _a.noClick, noClick = _e === void 0 ? true : _e, _f = _a.noKeyboard, noKeyboard = _f === void 0 ? true : _f, onDragEnter = _a.onDragEnter, onDragOver = _a.onDragOver, onDragLeave = _a.onDragLeave, onDropRejected = _a.onDropRejected, maxSize = _a.maxFileSize, minSize = _a.minFileSize, _g = _a.maxFileNumber, maxFileNumber = _g === void 0 ? Infinity : _g, _onDrop = _a.onDrop, onDropAccepted = _a.onDropAccepted, props = __rest(_a, [\"value\", \"disabled\", \"multiple\", \"noClick\", \"noKeyboard\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDropRejected\", \"maxFileSize\", \"minFileSize\", \"maxFileNumber\", \"onDrop\", \"onDropAccepted\"]);\n    var I18n = useI18nContext();\n    var _h = React.useState([]), acceptedFiles = _h[0], setAcceptedFiles = _h[1];\n    var _j = React.useState([]), fileRejections = _j[0], setFileRejections = _j[1];\n    var maxFilesRemaining = maxFileNumber - value.length;\n    var defaultDropError = {\n        type: dropErrors.reset,\n        title: '',\n        message: '',\n    };\n    var dropErrorReducer = function (state, action) {\n        var rejectedFiles = (React.createElement(StyledErrorBannerDetails, null, fileRejections.map(function (_a) {\n            var name = _a.file.name;\n            return (React.createElement(\"li\", { key: name }, name));\n        })));\n        var title = I18n.t('core.dropzone.errorTitle');\n        switch (action) {\n            case dropErrors.oneFileAtATime:\n                return {\n                    type: dropErrors.oneFileAtATime,\n                    title: '',\n                    message: I18n.t('core.dropzone.oneFileAtATimeError'),\n                };\n            case dropErrors.fileAmount:\n                return {\n                    type: dropErrors.fileAmount,\n                    title: title,\n                    message: I18n.t('core.dropzone.standaloneMaxFileNumberError', {\n                        maxFiles: maxFileNumber,\n                    }),\n                    body: rejectedFiles,\n                };\n            case dropErrors.fileType:\n                return {\n                    type: dropErrors.fileType,\n                    title: title,\n                    message: I18n.t('core.dropzone.standaloneUnsupportedFileTypeError'),\n                    body: rejectedFiles,\n                };\n            case dropErrors.maxFileSize:\n                return {\n                    type: dropErrors.maxFileSize,\n                    title: title,\n                    message: I18n.t('core.dropzone.standaloneMaxFileSizeError', {\n                        sizeInMegabytes: getSizeInMB(maxSize),\n                    }),\n                    body: rejectedFiles,\n                };\n            case dropErrors.minFileSize:\n                return {\n                    type: dropErrors.minFileSize,\n                    title: title,\n                    message: I18n.t('core.dropzone.standaloneMinFileSizeError', {\n                        sizeInMegabytes: getSizeInMB(minSize),\n                    }),\n                    body: rejectedFiles,\n                };\n            case dropErrors.multipleErrors:\n                return {\n                    type: dropErrors.multipleErrors,\n                    title: title,\n                    message: I18n.t('core.dropzone.multipleErrorsMessage'),\n                    body: (React.createElement(MultipleErrors, { fileRejections: fileRejections, maxFiles: maxFileNumber, maxSize: maxSize, minSize: minSize })),\n                };\n            case dropErrors.reset:\n                return __assign({}, defaultDropError);\n            default:\n                return state;\n        }\n    };\n    var withOneDropAtATimeError = function (file) { return ({\n        file: file,\n        errors: [\n            {\n                message: I18n.t('core.dropzone.oneDropAtATimeError'),\n                code: oneDropAtATimeRejectionReason,\n            },\n        ],\n    }); };\n    var _k = React.useReducer(dropErrorReducer, __assign({}, defaultDropError)), dropError = _k[0], dispatchDropError = _k[1];\n    var onDrop = React.useCallback(function (acceptedFiles, rejectedFiles, event) {\n        dispatchDropError(dropErrors.reset);\n        var droppedFiles = __spreadArray(__spreadArray([], acceptedFiles, true), rejectedFiles.map(function (rej) { return rej.file; }), true);\n        if (!multiple && droppedFiles.length > 1) {\n            dispatchDropError(dropErrors.oneFileAtATime);\n            onDropRejected === null || onDropRejected === void 0 ? void 0 : onDropRejected(droppedFiles.map(withOneDropAtATimeError), event);\n            return;\n        }\n        var allFilesWithRejections = __spreadArray(__spreadArray([], acceptedFiles.map(function (file) { return ({ file: file, errors: [] }); }), true), rejectedFiles, true).map(function (_a, i) {\n            var file = _a.file, errors = _a.errors;\n            return ({\n                file: file,\n                errors: i < maxFilesRemaining\n                    ? errors\n                    : __spreadArray(__spreadArray([], errors, true), [{ message: '', code: fileRejectionReason.maxFiles }], false),\n            });\n        });\n        var _a = partition(function (_a) {\n            var errors = _a.errors;\n            return errors.length === 0;\n        }, allFilesWithRejections), actualAcceptedFiles_ = _a[0], actualRejectedFiles = _a[1];\n        var actualAcceptedFiles = actualAcceptedFiles_.map(function (_a) {\n            var file = _a.file;\n            return file;\n        });\n        _onDrop === null || _onDrop === void 0 ? void 0 : _onDrop(actualAcceptedFiles, actualRejectedFiles, event);\n        setAcceptedFiles(actualAcceptedFiles);\n        setFileRejections(actualRejectedFiles);\n        if (actualAcceptedFiles.length) {\n            onDropAccepted === null || onDropAccepted === void 0 ? void 0 : onDropAccepted(actualAcceptedFiles, event);\n        }\n        if (actualRejectedFiles.length) {\n            onDropRejected === null || onDropRejected === void 0 ? void 0 : onDropRejected(actualRejectedFiles, event);\n        }\n        var errorCodes = actualRejectedFiles\n            .flatMap(function (rejection) { return rejection.errors; })\n            .map(function (error) { return error.code; });\n        var hasMultipleErrors = new Set(__spreadArray([], errorCodes, true)).size > 1;\n        if (hasMultipleErrors) {\n            dispatchDropError(dropErrors.multipleErrors);\n        }\n        else {\n            dispatchDropError(dropErrorsByReason[errorCodes[0]]);\n        }\n    }, [_onDrop, maxFilesRemaining, onDropRejected, onDropAccepted, multiple]);\n    var _l = useDropzoneBase(__assign(__assign({}, props), { disabled: disabled, minSize: minSize, maxSize: maxSize, multiple: multiple, onDragEnter: onDragEnter, onDragLeave: onDragLeave, onDragOver: onDragOver, onDrop: onDrop, noClick: noClick, noKeyboard: noKeyboard })), getRootProps = _l.getRootProps, getInputProps = _l.getInputProps, isDragActive = _l.isDragActive, isFileDialogActive = _l.isFileDialogActive, isDragReject = _l.isDragReject, isFocused = _l.isFocused, isDragAccept = _l.isDragAccept, draggedFiles = _l.draggedFiles, open = _l.open, rootRef = _l.rootRef, inputRef = _l.inputRef;\n    var dragError = React.useMemo(function () {\n        var getFileTypeError = function () {\n            return isDragReject\n                ? I18n.t('core.dropzone.incorrectFileTypeMessage', {\n                    count: draggedFiles.length,\n                })\n                : '';\n        };\n        var getFileAmountError = function () {\n            var fileLimit = multiple ? maxFilesRemaining : 1;\n            var amountError = multiple\n                ? I18n.t('core.dropzone.invalidAmountAttachments', {\n                    count: maxFileNumber,\n                })\n                : I18n.t('core.dropzone.incorrectFileNumber');\n            return draggedFiles.length > fileLimit ? amountError : '';\n        };\n        return getFileAmountError() || getFileTypeError();\n    }, [\n        I18n,\n        draggedFiles.length,\n        maxFilesRemaining,\n        isDragReject,\n        maxFileNumber,\n        multiple,\n    ]);\n    return {\n        getRootProps: getRootProps,\n        getInputProps: getInputProps,\n        isDragActive: isDragActive,\n        isFileDialogActive: isFileDialogActive,\n        isDragReject: isDragReject,\n        isFocused: isFocused,\n        isDragAccept: isDragAccept,\n        draggedFiles: draggedFiles,\n        acceptedFiles: acceptedFiles,\n        fileRejections: fileRejections,\n        open: open,\n        rootRef: rootRef,\n        inputRef: inputRef,\n        multiple: multiple,\n        dragError: dragError,\n        dropError: dropError,\n        dispatchDropError: dispatchDropError,\n        disabled: disabled,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}