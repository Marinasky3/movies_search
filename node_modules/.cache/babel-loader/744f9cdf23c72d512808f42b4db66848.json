{"ast":null,"code":"import React from 'react'; // TODO remove this and do a breaking change on Search to `useImperativeHandle`\n// to support controlled/uncontrolled behavior\n\nexport function useSearch(_a) {\n  var _b = _a.onChange,\n      externalOnChange = _b === void 0 ? function () {} : _b,\n      _c = _a.onClear,\n      onClear = _c === void 0 ? function () {} : _c,\n      _d = _a.onSubmit,\n      onSubmit = _d === void 0 ? function () {} : _d,\n      _e = _a.typeahead,\n      typeahead = _e === void 0 ? false : _e,\n      _f = _a.initialValue,\n      initialValue = _f === void 0 ? '' : _f;\n\n  var _g = React.useState(initialValue),\n      value = _g[0],\n      setValue = _g[1];\n\n  React.useEffect(function () {\n    setValue(initialValue);\n  }, [initialValue]);\n  var isEmpty = value === '';\n  var showSearch = !typeahead || typeahead && isEmpty;\n\n  function clear() {\n    setValue('');\n    onChange({\n      target: {\n        value: ''\n      }\n    });\n    onClear();\n  }\n\n  function submit() {\n    onSubmit(value);\n  }\n\n  function onChange(e) {\n    setValue(e.target.value);\n    externalOnChange(e);\n  }\n\n  function onKeyDown(_a) {\n    var key = _a.key;\n\n    if (key === 'Enter') {\n      submit();\n    } else if (key === 'Escape' || key === 'Esc') {\n      clear();\n    }\n  }\n\n  return {\n    clear: clear,\n    domHandlers: {\n      onChange: onChange,\n      onKeyDown: onKeyDown\n    },\n    isEmpty: isEmpty,\n    showSearch: showSearch,\n    submit: submit,\n    value: value\n  };\n}","map":{"version":3,"sources":["../../../../src/components/Search/Search.hooks.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB,C,CAIA;AACA;;AACA,OAAM,SAAU,SAAV,CAAoB,EAApB,EAMa;MALjB,EAAA,GAAA,EAAA,CAAA,Q;MAAU,gBAAgB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,YAAA,CAAQ,CAAX,GAAW,E;MACrC,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,YAAA,CAAQ,CAAX,GAAW,E;MAClB,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,YAAA,CAAQ,CAAX,GAAW,E;MACnB,EAAA,GAAA,EAAA,CAAA,S;MAAA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACjB,EAAA,GAAA,EAAA,CAAA,Y;MAAA,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,E;;AAEX,MAAA,EAAA,GAAoB,KAAK,CAAC,QAAN,CAAe,YAAf,CAApB;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AAEN,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,IAAA,QAAQ,CAAC,YAAD,CAAR;AACD,GAFD,EAEG,CAAC,YAAD,CAFH;AAIA,MAAM,OAAO,GAAG,KAAK,KAAK,EAA1B;AAEA,MAAM,UAAU,GAAG,CAAC,SAAD,IAAe,SAAS,IAAI,OAA/C;;AAEA,WAAS,KAAT,GAAc;AACZ,IAAA,QAAQ,CAAC,EAAD,CAAR;AACA,IAAA,QAAQ,CAAC;AAAE,MAAA,MAAM,EAAE;AAAE,QAAA,KAAK,EAAE;AAAT;AAAV,KAAD,CAAR;AACA,IAAA,OAAO;AACR;;AAED,WAAS,MAAT,GAAe;AACb,IAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AAED,WAAS,QAAT,CAAkB,CAAlB,EAAgC;AAC9B,IAAA,QAAQ,CAAC,CAAC,CAAC,MAAF,CAAS,KAAV,CAAR;AAEA,IAAA,gBAAgB,CAAC,CAAD,CAAhB;AACD;;AAED,WAAS,SAAT,CAAmB,EAAnB,EAAiE;QAA5C,GAAG,GAAA,EAAA,CAAA,G;;AACtB,QAAI,GAAG,KAAK,OAAZ,EAAqB;AACnB,MAAA,MAAM;AACP,KAFD,MAEO,IAAI,GAAG,KAAK,QAAR,IAAoB,GAAG,KAAK,KAAhC,EAAuC;AAC5C,MAAA,KAAK;AACN;AACF;;AAED,SAAO;AACL,IAAA,KAAK,EAAA,KADA;AAEL,IAAA,WAAW,EAAE;AACX,MAAA,QAAQ,EAAA,QADG;AAEX,MAAA,SAAS,EAAA;AAFE,KAFR;AAML,IAAA,OAAO,EAAA,OANF;AAOL,IAAA,UAAU,EAAA,UAPL;AAQL,IAAA,MAAM,EAAA,MARD;AASL,IAAA,KAAK,EAAA;AATA,GAAP;AAWD","sourcesContent":["import React from 'react';\n// TODO remove this and do a breaking change on Search to `useImperativeHandle`\n// to support controlled/uncontrolled behavior\nexport function useSearch(_a) {\n    var _b = _a.onChange, externalOnChange = _b === void 0 ? function () { } : _b, _c = _a.onClear, onClear = _c === void 0 ? function () { } : _c, _d = _a.onSubmit, onSubmit = _d === void 0 ? function () { } : _d, _e = _a.typeahead, typeahead = _e === void 0 ? false : _e, _f = _a.initialValue, initialValue = _f === void 0 ? '' : _f;\n    var _g = React.useState(initialValue), value = _g[0], setValue = _g[1];\n    React.useEffect(function () {\n        setValue(initialValue);\n    }, [initialValue]);\n    var isEmpty = value === '';\n    var showSearch = !typeahead || (typeahead && isEmpty);\n    function clear() {\n        setValue('');\n        onChange({ target: { value: '' } });\n        onClear();\n    }\n    function submit() {\n        onSubmit(value);\n    }\n    function onChange(e) {\n        setValue(e.target.value);\n        externalOnChange(e);\n    }\n    function onKeyDown(_a) {\n        var key = _a.key;\n        if (key === 'Enter') {\n            submit();\n        }\n        else if (key === 'Escape' || key === 'Esc') {\n            clear();\n        }\n    }\n    return {\n        clear: clear,\n        domHandlers: {\n            onChange: onChange,\n            onKeyDown: onKeyDown,\n        },\n        isEmpty: isEmpty,\n        showSearch: showSearch,\n        submit: submit,\n        value: value,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}