{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useEventListener } from '../effects/EventListener';\n\nfunction noop() {}\n\nvar availableTriggers = ['click', 'hover', 'none', 'contextmenu', 'focus', 'always'];\nexport function triggerListeners(_a) {\n  var value = _a.value,\n      off = _a.off,\n      on = _a.on,\n      trigger = _a.trigger,\n      scope = _a.scope;\n  var targetTriggers = Array.isArray(trigger) ? trigger : [trigger];\n\n  var handlerOrNoop = function (fn, trigger) {\n    var isTargetTrigger = targetTriggers.includes(trigger);\n    return {\n      handler: isTargetTrigger ? fn : noop,\n      noopHandler: !isTargetTrigger\n    };\n  };\n\n  availableTriggers.forEach(function (trigger) {\n    switch (trigger) {\n      case 'click':\n        var handler = handlerOrNoop(value ? off : on, trigger);\n        useEventListener(__assign({\n          dependencies: [handler],\n          event: 'click',\n          scope: scope\n        }, handler));\n        break;\n\n      case 'contextmenu':\n        var ctxMenuHandler = handlerOrNoop(value ? off : on, trigger);\n        useEventListener(__assign({\n          dependencies: [ctxMenuHandler],\n          event: 'contextmenu',\n          scope: scope\n        }, ctxMenuHandler));\n        break;\n\n      case 'hover':\n        var mouseLeaveHandler = handlerOrNoop(off, trigger);\n        useEventListener(__assign({\n          event: 'mouseleave',\n          scope: scope\n        }, mouseLeaveHandler));\n        var mouseEnterHandler = handlerOrNoop(on, trigger);\n        useEventListener(__assign({\n          event: 'mouseenter',\n          scope: scope\n        }, mouseEnterHandler));\n        break;\n\n      case 'focus':\n        var blurHandler = handlerOrNoop(off, trigger);\n        useEventListener(__assign({\n          event: 'blur',\n          scope: scope\n        }, blurHandler));\n        var focusHandler = handlerOrNoop(on, trigger);\n        useEventListener(__assign({\n          event: 'focus',\n          scope: scope\n        }, focusHandler));\n        break;\n    }\n  });\n}","map":{"version":3,"sources":["../../../src/utils/triggerListeners.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAgB,gBAAhB,QAAwC,0BAAxC;;AAWA,SAAS,IAAT,GAAa,CAAK;;AAElB,IAAM,iBAAiB,GAAG,CACxB,OADwB,EAExB,OAFwB,EAGxB,MAHwB,EAIxB,aAJwB,EAKxB,OALwB,EAMxB,QANwB,CAA1B;AASA,OAAM,SAAU,gBAAV,CAA2B,EAA3B,EAAqE;MAAxC,KAAK,GAAA,EAAA,CAAA,K;MAAE,GAAG,GAAA,EAAA,CAAA,G;MAAE,EAAE,GAAA,EAAA,CAAA,E;MAAE,OAAO,GAAA,EAAA,CAAA,O;MAAE,KAAK,GAAA,EAAA,CAAA,K;AAC/D,MAAM,cAAc,GAAG,KAAK,CAAC,OAAN,CAAc,OAAd,IAAyB,OAAzB,GAAmC,CAAC,OAAD,CAA1D;;AAEA,MAAM,aAAa,GAAG,UAAC,EAAD,EAA0B,OAA1B,EAAiD;AACrE,QAAM,eAAe,GAAG,cAAc,CAAC,QAAf,CAAwB,OAAxB,CAAxB;AACA,WAAO;AACL,MAAA,OAAO,EAAE,eAAe,GAAG,EAAH,GAAQ,IAD3B;AAEL,MAAA,WAAW,EAAE,CAAC;AAFT,KAAP;AAID,GAND;;AAQA,EAAA,iBAAiB,CAAC,OAAlB,CAA0B,UAAC,OAAD,EAAQ;AAChC,YAAQ,OAAR;AACE,WAAK,OAAL;AACE,YAAM,OAAO,GAAG,aAAa,CAAC,KAAK,GAAG,GAAH,GAAS,EAAf,EAAmB,OAAnB,CAA7B;AACA,QAAA,gBAAgB,CAAA,QAAA,CAAA;AACd,UAAA,YAAY,EAAE,CAAC,OAAD,CADA;AAEd,UAAA,KAAK,EAAE,OAFO;AAGd,UAAA,KAAK,EAAA;AAHS,SAAA,EAIX,OAJW,CAAA,CAAhB;AAMA;;AAEF,WAAK,aAAL;AACE,YAAM,cAAc,GAAG,aAAa,CAAC,KAAK,GAAG,GAAH,GAAS,EAAf,EAAmB,OAAnB,CAApC;AACA,QAAA,gBAAgB,CAAA,QAAA,CAAA;AACd,UAAA,YAAY,EAAE,CAAC,cAAD,CADA;AAEd,UAAA,KAAK,EAAE,aAFO;AAGd,UAAA,KAAK,EAAA;AAHS,SAAA,EAIX,cAJW,CAAA,CAAhB;AAMA;;AAEF,WAAK,OAAL;AACE,YAAM,iBAAiB,GAAG,aAAa,CAAC,GAAD,EAAM,OAAN,CAAvC;AACA,QAAA,gBAAgB,CAAA,QAAA,CAAA;AACd,UAAA,KAAK,EAAE,YADO;AAEd,UAAA,KAAK,EAAA;AAFS,SAAA,EAGX,iBAHW,CAAA,CAAhB;AAKA,YAAM,iBAAiB,GAAG,aAAa,CAAC,EAAD,EAAK,OAAL,CAAvC;AACA,QAAA,gBAAgB,CAAA,QAAA,CAAA;AACd,UAAA,KAAK,EAAE,YADO;AAEd,UAAA,KAAK,EAAA;AAFS,SAAA,EAGX,iBAHW,CAAA,CAAhB;AAKA;;AAEF,WAAK,OAAL;AACE,YAAM,WAAW,GAAG,aAAa,CAAC,GAAD,EAAM,OAAN,CAAjC;AACA,QAAA,gBAAgB,CAAA,QAAA,CAAA;AACd,UAAA,KAAK,EAAE,MADO;AAEd,UAAA,KAAK,EAAA;AAFS,SAAA,EAGX,WAHW,CAAA,CAAhB;AAMA,YAAM,YAAY,GAAG,aAAa,CAAC,EAAD,EAAK,OAAL,CAAlC;AACA,QAAA,gBAAgB,CAAA,QAAA,CAAA;AACd,UAAA,KAAK,EAAE,OADO;AAEd,UAAA,KAAK,EAAA;AAFS,SAAA,EAGX,YAHW,CAAA,CAAhB;AAKA;AAlDJ;AAoDD,GArDD;AAsDD","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useEventListener } from '../effects/EventListener';\nfunction noop() { }\nvar availableTriggers = [\n    'click',\n    'hover',\n    'none',\n    'contextmenu',\n    'focus',\n    'always',\n];\nexport function triggerListeners(_a) {\n    var value = _a.value, off = _a.off, on = _a.on, trigger = _a.trigger, scope = _a.scope;\n    var targetTriggers = Array.isArray(trigger) ? trigger : [trigger];\n    var handlerOrNoop = function (fn, trigger) {\n        var isTargetTrigger = targetTriggers.includes(trigger);\n        return {\n            handler: isTargetTrigger ? fn : noop,\n            noopHandler: !isTargetTrigger,\n        };\n    };\n    availableTriggers.forEach(function (trigger) {\n        switch (trigger) {\n            case 'click':\n                var handler = handlerOrNoop(value ? off : on, trigger);\n                useEventListener(__assign({ dependencies: [handler], event: 'click', scope: scope }, handler));\n                break;\n            case 'contextmenu':\n                var ctxMenuHandler = handlerOrNoop(value ? off : on, trigger);\n                useEventListener(__assign({ dependencies: [ctxMenuHandler], event: 'contextmenu', scope: scope }, ctxMenuHandler));\n                break;\n            case 'hover':\n                var mouseLeaveHandler = handlerOrNoop(off, trigger);\n                useEventListener(__assign({ event: 'mouseleave', scope: scope }, mouseLeaveHandler));\n                var mouseEnterHandler = handlerOrNoop(on, trigger);\n                useEventListener(__assign({ event: 'mouseenter', scope: scope }, mouseEnterHandler));\n                break;\n            case 'focus':\n                var blurHandler = handlerOrNoop(off, trigger);\n                useEventListener(__assign({ event: 'blur', scope: scope }, blurHandler));\n                var focusHandler = handlerOrNoop(on, trigger);\n                useEventListener(__assign({ event: 'focus', scope: scope }, focusHandler));\n                break;\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}