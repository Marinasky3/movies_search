{"ast":null,"code":"var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nimport styled, { css } from 'styled-components';\nimport { colors } from '../../styles/colors';\nimport { getTypographyIntent } from '../Typography/Typography.styles';\nexport var StyledH1 = styled.h1(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"])), colors.gray15, getTypographyIntent('h1'));\nexport var StyledH2 = styled.h2(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"])), colors.gray15, getTypographyIntent('h2'));\nexport var StyledH3 = styled.h3(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\" // TODO: do we want to pull the font size/margin\n// out to a const from Typography instead?\n])), colors.gray15, getTypographyIntent('h3')); // TODO: do we want to pull the font size/margin\n// out to a const from Typography instead?\n\nvar bodyFontSize = 14;\n\nvar topMarginRules = function () {\n  return css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n    & + &,\\n    p + &,\\n    ul + & {\\n      margin-top: \", \"px;\\n    }\\n  \"], [\"\\n    & + &,\\n    p + &,\\n    ul + & {\\n      margin-top: \", \"px;\\n    }\\n  \"])), bodyFontSize);\n};\n\nexport var StyledP = styled.p(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  \", \"\\n\"])), colors.gray15, getTypographyIntent('body'), topMarginRules);\nexport var StyledUL = styled.ul(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  color: \", \";\\n  margin: 0;\\n  padding: 0;\\n  \", \"\\n  \", \"\\n\\n  padding-left: \", \"px;\\n\\n  & > li {\\n    list-style-type: disc;\\n  }\\n\"], [\"\\n  color: \", \";\\n  margin: 0;\\n  padding: 0;\\n  \", \"\\n  \", \"\\n\\n  padding-left: \", \"px;\\n\\n  & > li {\\n    list-style-type: disc;\\n  }\\n\"])), colors.gray15, getTypographyIntent('body'), topMarginRules, bodyFontSize);\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;","map":{"version":3,"sources":["../../../../src/components/Semantic/Semantic.styles.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAP,IAAiB,GAAjB,QAA4B,mBAA5B;AACA,SAAS,MAAT,QAAuB,qBAAvB;AACA,SAAS,mBAAT,QAAoC,iCAApC;AAEA,OAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAP,CAAS,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,aAAA,EAAA,OAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,aAAA,EACT,OADS,EAEJ,kBAFI,CAAA,CAAA,CAAT,EACb,MAAM,CAAC,MADM,EAEpB,mBAAmB,CAAC,IAAD,CAFC,CAAjB;AAKP,OAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAP,CAAS,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,aAAA,EAAA,OAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,aAAA,EACT,OADS,EAEJ,kBAFI,CAAA,CAAA,CAAT,EACb,MAAM,CAAC,MADM,EAEpB,mBAAmB,CAAC,IAAD,CAFC,CAAjB;AAKP,OAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAP,CAAS,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,aAAA,EAAA,OAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,aAAA,EACT,OADS,EAEJ,kBAFI,CAMjC;AACA;AAPiC,CAAA,CAAA,CAAT,EACb,MAAM,CAAC,MADM,EAEpB,mBAAmB,CAAC,IAAD,CAFC,CAAjB,C,CAMP;AACA;;AACA,IAAM,YAAY,GAAG,EAArB;;AAEA,IAAM,cAAc,GAAG,YAAA;AACrB,SAAO,GAAG,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,4DAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,4DAAA,EAIoB,gBAJpB,CAAA,CAAA,CAAA,EAIQ,YAJR,CAAV;AAOD,CARD;;AAUA,OAAO,IAAM,OAAO,GAAG,MAAM,CAAC,CAAP,CAAQ,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,aAAA,EAAA,OAAA,EAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,aAAA,EACP,OADO,EAEA,MAFA,EAGb,IAHa,CAAA,CAAA,CAAR,EACZ,MAAM,CAAC,MADK,EAEnB,mBAAmB,CAAC,MAAD,CAFA,EAGnB,cAHmB,CAAhB;AAKP,OAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAP,CAAS,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,aAAA,EAAA,oCAAA,EAAA,MAAA,EAAA,sBAAA,EAAA,sDAAA,CAAA,EAAA,CAAA,aAAA,EACT,oCADS,EAIF,MAJE,EAKf,sBALe,EAOH,sDAPG,CAAA,CAAA,CAAT,EACb,MAAM,CAAC,MADM,EAIpB,mBAAmB,CAAC,MAAD,CAJC,EAKpB,cALoB,EAON,YAPM,CAAjB","sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport styled, { css } from 'styled-components';\nimport { colors } from '../../styles/colors';\nimport { getTypographyIntent } from '../Typography/Typography.styles';\nexport var StyledH1 = styled.h1(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"])), colors.gray15, getTypographyIntent('h1'));\nexport var StyledH2 = styled.h2(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"])), colors.gray15, getTypographyIntent('h2'));\nexport var StyledH3 = styled.h3(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  margin: 0;\\n\"\n    // TODO: do we want to pull the font size/margin\n    // out to a const from Typography instead?\n])), colors.gray15, getTypographyIntent('h3'));\n// TODO: do we want to pull the font size/margin\n// out to a const from Typography instead?\nvar bodyFontSize = 14;\nvar topMarginRules = function () {\n    return css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n    & + &,\\n    p + &,\\n    ul + & {\\n      margin-top: \", \"px;\\n    }\\n  \"], [\"\\n    & + &,\\n    p + &,\\n    ul + & {\\n      margin-top: \", \"px;\\n    }\\n  \"])), bodyFontSize);\n};\nexport var StyledP = styled.p(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  color: \", \";\\n  \", \"\\n  \", \"\\n\"])), colors.gray15, getTypographyIntent('body'), topMarginRules);\nexport var StyledUL = styled.ul(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  color: \", \";\\n  margin: 0;\\n  padding: 0;\\n  \", \"\\n  \", \"\\n\\n  padding-left: \", \"px;\\n\\n  & > li {\\n    list-style-type: disc;\\n  }\\n\"], [\"\\n  color: \", \";\\n  margin: 0;\\n  padding: 0;\\n  \", \"\\n  \", \"\\n\\n  padding-left: \", \"px;\\n\\n  & > li {\\n    list-style-type: disc;\\n  }\\n\"])), colors.gray15, getTypographyIntent('body'), topMarginRules, bodyFontSize);\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;\n"]},"metadata":{},"sourceType":"module"}