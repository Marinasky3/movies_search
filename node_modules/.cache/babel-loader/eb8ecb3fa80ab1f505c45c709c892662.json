{"ast":null,"code":"var _a;\n\nimport { getFileExtension } from '../../utils/filename';\nexport function getIsFilePreviewableAsImage(src) {\n  return src instanceof File && src.type.startsWith('image/') && // not allow previewing vendor image mime types, such as \"image/vnd.adobe.photoshop\"\n  !src.type.startsWith('image/vnd.') && // not allow previewing .tiff images, as a not browser-compatible format\n  src.type !== 'image/tiff';\n}\nvar extensions = (_a = {\n  image: ['png', 'jpg', 'jpeg', 'gif', 'psd', 'tiff', 'tif', 'bmp'],\n  drawing: ['cad', 'dwg'],\n  email: ['msg', 'eml'],\n  gantt: ['mpp', 'p6', 'xer'],\n  zip: ['zip', 'rar', '7zip'],\n  xml: ['rtf', 'txt'],\n  word: ['doc', 'docx'],\n  ini: ['ini', 'xml', 'exe'],\n  mov: ['mov', 'avi'],\n  pdf: ['pdf'],\n  powerpoint: ['ppt', 'pptx'],\n  excel: ['csv', 'xls', 'xlsx']\n}, _a['3d'] = ['stl', 'obj', 'ma', 'fbx', 'dae', '3ds', 'iges', 'step', 'wrl'], _a.unknown = [], _a);\nvar extensionsByVariant = Object.entries(extensions);\nvar variantByExtension = extensionsByVariant.reduce(function (acc, _a) {\n  var type = _a[0],\n      exts = _a[1];\n  exts.forEach(function (ext) {\n    acc[ext] = type;\n  });\n  return acc;\n}, {});\nexport function getVariantForFilename(filename) {\n  var defaultUnknownName = 'unknown';\n\n  try {\n    var ext = getFileExtension(filename);\n    return ext ? variantByExtension[ext] || defaultUnknownName : defaultUnknownName;\n  } catch (_a) {\n    return defaultUnknownName;\n  }\n}","map":{"version":3,"sources":["../../../../src/components/Thumbnail/Thumbnail.utils.ts"],"names":[],"mappings":";;AAAA,SAAS,gBAAT,QAAiC,sBAAjC;AAGA,OAAM,SAAU,2BAAV,CAAsC,GAAtC,EAAoE;AACxE,SACE,GAAG,YAAY,IAAf,IACA,GAAG,CAAC,IAAJ,CAAS,UAAT,CAAoB,QAApB,CADA,IAEA;AACA,GAAC,GAAG,CAAC,IAAJ,CAAS,UAAT,CAAoB,YAApB,CAHD,IAIA;AACA,EAAA,GAAG,CAAC,IAAJ,KAAa,YANf;AAQD;AAED,IAAM,UAAU,IAAA,EAAA,GAAA;AACd,EAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,MAArC,EAA6C,KAA7C,EAAoD,KAApD,CADO;AAEd,EAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,CAFK;AAGd,EAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,CAHO;AAId,EAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAJO;AAKd,EAAA,GAAG,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CALS;AAMd,EAAA,GAAG,EAAE,CAAC,KAAD,EAAQ,KAAR,CANS;AAOd,EAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAPQ;AAQd,EAAA,GAAG,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CARS;AASd,EAAA,GAAG,EAAE,CAAC,KAAD,EAAQ,KAAR,CATS;AAUd,EAAA,GAAG,EAAE,CAAC,KAAD,CAVS;AAWd,EAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,MAAR,CAXE;AAYd,EAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf;AAZO,CAAA,EAad,EAAA,CAAC,IAAD,CAAA,GAAQ,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C,MAA1C,EAAkD,MAAlD,EAA0D,KAA1D,CAbM,EAcd,EAAA,CAAA,OAAA,GAAS,EAdK,EAef,EAfe,CAAhB;AAiBA,IAAM,mBAAmB,GAAG,MAAM,CAAC,OAAP,CAAe,UAAf,CAA5B;AAKA,IAAM,kBAAkB,GAAG,mBAAmB,CAAC,MAApB,CAA2B,UAAC,GAAD,EAAM,EAAN,EAAkB;MAAX,IAAI,GAAA,EAAA,CAAA,CAAA,C;MAAE,IAAI,GAAA,EAAA,CAAA,CAAA,C;AACrE,EAAA,IAAI,CAAC,OAAL,CAAa,UAAC,GAAD,EAAI;AACf,IAAA,GAAG,CAAC,GAAD,CAAH,GAAW,IAAX;AACD,GAFD;AAGA,SAAO,GAAP;AACD,CAL0B,EAKxB,EALwB,CAA3B;AAOA,OAAM,SAAU,qBAAV,CAAgC,QAAhC,EAAgD;AACpD,MAAM,kBAAkB,GAAG,SAA3B;;AAEA,MAAI;AACF,QAAM,GAAG,GAAG,gBAAgB,CAAC,QAAD,CAA5B;AACA,WAAO,GAAG,GACN,kBAAkB,CAAC,GAAD,CAAlB,IAA2B,kBADrB,GAEN,kBAFJ;AAGD,GALD,CAKE,OAAA,EAAA,EAAM;AACN,WAAO,kBAAP;AACD;AACF","sourcesContent":["var _a;\nimport { getFileExtension } from '../../utils/filename';\nexport function getIsFilePreviewableAsImage(src) {\n    return (src instanceof File &&\n        src.type.startsWith('image/') &&\n        // not allow previewing vendor image mime types, such as \"image/vnd.adobe.photoshop\"\n        !src.type.startsWith('image/vnd.') &&\n        // not allow previewing .tiff images, as a not browser-compatible format\n        src.type !== 'image/tiff');\n}\nvar extensions = (_a = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'psd', 'tiff', 'tif', 'bmp'],\n        drawing: ['cad', 'dwg'],\n        email: ['msg', 'eml'],\n        gantt: ['mpp', 'p6', 'xer'],\n        zip: ['zip', 'rar', '7zip'],\n        xml: ['rtf', 'txt'],\n        word: ['doc', 'docx'],\n        ini: ['ini', 'xml', 'exe'],\n        mov: ['mov', 'avi'],\n        pdf: ['pdf'],\n        powerpoint: ['ppt', 'pptx'],\n        excel: ['csv', 'xls', 'xlsx']\n    },\n    _a['3d'] = ['stl', 'obj', 'ma', 'fbx', 'dae', '3ds', 'iges', 'step', 'wrl'],\n    _a.unknown = [],\n    _a);\nvar extensionsByVariant = Object.entries(extensions);\nvar variantByExtension = extensionsByVariant.reduce(function (acc, _a) {\n    var type = _a[0], exts = _a[1];\n    exts.forEach(function (ext) {\n        acc[ext] = type;\n    });\n    return acc;\n}, {});\nexport function getVariantForFilename(filename) {\n    var defaultUnknownName = 'unknown';\n    try {\n        var ext = getFileExtension(filename);\n        return ext\n            ? variantByExtension[ext] || defaultUnknownName\n            : defaultUnknownName;\n    }\n    catch (_a) {\n        return defaultUnknownName;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}