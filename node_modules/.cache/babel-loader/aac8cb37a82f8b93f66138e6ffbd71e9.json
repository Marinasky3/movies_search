{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { parseFilename } from '../../utils/filename';\nimport { Loader } from '../Loader';\nimport { transitionDuration } from '../Loader/Loader.styles';\nimport { Token } from '../Token';\nimport { Tooltip } from '../Tooltip';\nimport { pulseAnimationDuration, StyledExtension, StyledFilename, StyledFilenameShortcut, StyledFileToken } from './FileToken.styles';\nexport var FileToken = React.forwardRef(function FileToken(_a, ref) {\n  var fileName = _a.fileName,\n      _b = _a.progressValue,\n      progressValue = _b === void 0 ? 0 : _b,\n      _c = _a.errorMessage,\n      errorMessage = _c === void 0 ? '' : _c,\n      onLabelClick = _a.onLabelClick,\n      onClose = _a.onClose,\n      qa = _a.qa,\n      props = __rest(_a, [\"fileName\", \"progressValue\", \"errorMessage\", \"onLabelClick\", \"onClose\", \"qa\"]);\n\n  var isError = Boolean(errorMessage);\n  var isProgressValueComplete = !isError && progressValue >= 100;\n\n  var _d = React.useState(isProgressValueComplete),\n      isProgressComplete = _d[0],\n      setProgressComplete = _d[1];\n\n  var _e = React.useState(false),\n      isFinalized = _e[0],\n      setFinalized = _e[1];\n\n  var didMountRef = React.useRef(false);\n\n  var _f = parseFilename(fileName),\n      filename = _f.filename,\n      extension = _f.extension,\n      isFilename = _f.isFilename;\n\n  var name = isFilename ? \"\".concat(filename, \".\") : fileName;\n  React.useEffect(function () {\n    var timerId = isProgressValueComplete ? window.setTimeout(function () {\n      setProgressComplete(true);\n    }, transitionDuration) : null;\n\n    if (!isProgressValueComplete) {\n      setProgressComplete(false);\n    }\n\n    return function () {\n      timerId && clearTimeout(timerId);\n    };\n  }, [isProgressValueComplete]);\n  React.useEffect(function () {\n    var isFinalized = didMountRef.current && isProgressComplete;\n    var timerId = isFinalized ? window.setTimeout(function () {\n      setFinalized(false);\n    }, pulseAnimationDuration) : null;\n    setFinalized(didMountRef.current && isProgressComplete);\n\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n    }\n\n    return function () {\n      timerId && clearTimeout(timerId);\n    };\n  }, [isProgressComplete]);\n  var token = React.createElement(Token, null, React.createElement(Token.Label, {\n    onClick: onLabelClick\n  }, React.createElement(StyledFilenameShortcut, null, React.createElement(StyledFilename, null, name), React.createElement(StyledExtension, null, extension))), React.createElement(Token.Icon, {\n    icon: \"x\",\n    onClick: onClose,\n    \"data-qa\": qa === null || qa === void 0 ? void 0 : qa.closeButton\n  })); // prevent empty tooltip blinks when navigating via the keyboard by wrapping in tooltip conditionally\n\n  if (isError) {\n    return React.createElement(Tooltip, {\n      ref: ref,\n      trigger: \"hover\",\n      overlay: errorMessage\n    }, React.createElement(StyledFileToken, __assign({}, props, {\n      \"$error\": isError,\n      \"$finalized\": isFinalized,\n      \"$progressComplete\": isProgressComplete\n    }), token, React.createElement(Loader, {\n      value: progressValue,\n      animated: true\n    }, token)));\n  }\n\n  return React.createElement(StyledFileToken, __assign({}, props, {\n    \"$error\": isError,\n    \"$finalized\": isFinalized,\n    \"$progressComplete\": isProgressComplete,\n    ref: ref\n  }), token, React.createElement(Loader, {\n    value: progressValue,\n    animated: true\n  }, token));\n});\nFileToken.displayName = 'FileToken';","map":{"version":3,"sources":["../../../../src/components/FileToken/FileToken.tsx"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { parseFilename } from '../../utils/filename';\nimport { Loader } from '../Loader';\nimport { transitionDuration } from '../Loader/Loader.styles';\nimport { Token } from '../Token';\nimport { Tooltip } from '../Tooltip';\nimport { pulseAnimationDuration, StyledExtension, StyledFilename, StyledFilenameShortcut, StyledFileToken, } from './FileToken.styles';\nexport var FileToken = React.forwardRef(function FileToken(_a, ref) {\n    var fileName = _a.fileName, _b = _a.progressValue, progressValue = _b === void 0 ? 0 : _b, _c = _a.errorMessage, errorMessage = _c === void 0 ? '' : _c, onLabelClick = _a.onLabelClick, onClose = _a.onClose, qa = _a.qa, props = __rest(_a, [\"fileName\", \"progressValue\", \"errorMessage\", \"onLabelClick\", \"onClose\", \"qa\"]);\n    var isError = Boolean(errorMessage);\n    var isProgressValueComplete = !isError && progressValue >= 100;\n    var _d = React.useState(isProgressValueComplete), isProgressComplete = _d[0], setProgressComplete = _d[1];\n    var _e = React.useState(false), isFinalized = _e[0], setFinalized = _e[1];\n    var didMountRef = React.useRef(false);\n    var _f = parseFilename(fileName), filename = _f.filename, extension = _f.extension, isFilename = _f.isFilename;\n    var name = isFilename ? \"\".concat(filename, \".\") : fileName;\n    React.useEffect(function () {\n        var timerId = isProgressValueComplete\n            ? window.setTimeout(function () {\n                setProgressComplete(true);\n            }, transitionDuration)\n            : null;\n        if (!isProgressValueComplete) {\n            setProgressComplete(false);\n        }\n        return function () {\n            timerId && clearTimeout(timerId);\n        };\n    }, [isProgressValueComplete]);\n    React.useEffect(function () {\n        var isFinalized = didMountRef.current && isProgressComplete;\n        var timerId = isFinalized\n            ? window.setTimeout(function () {\n                setFinalized(false);\n            }, pulseAnimationDuration)\n            : null;\n        setFinalized(didMountRef.current && isProgressComplete);\n        if (!didMountRef.current) {\n            didMountRef.current = true;\n        }\n        return function () {\n            timerId && clearTimeout(timerId);\n        };\n    }, [isProgressComplete]);\n    var token = (React.createElement(Token, null,\n        React.createElement(Token.Label, { onClick: onLabelClick },\n            React.createElement(StyledFilenameShortcut, null,\n                React.createElement(StyledFilename, null, name),\n                React.createElement(StyledExtension, null, extension))),\n        React.createElement(Token.Icon, { icon: \"x\", onClick: onClose, \"data-qa\": qa === null || qa === void 0 ? void 0 : qa.closeButton })));\n    // prevent empty tooltip blinks when navigating via the keyboard by wrapping in tooltip conditionally\n    if (isError) {\n        return (React.createElement(Tooltip, { ref: ref, trigger: \"hover\", overlay: errorMessage },\n            React.createElement(StyledFileToken, __assign({}, props, { \"$error\": isError, \"$finalized\": isFinalized, \"$progressComplete\": isProgressComplete }),\n                token,\n                React.createElement(Loader, { value: progressValue, animated: true }, token))));\n    }\n    return (React.createElement(StyledFileToken, __assign({}, props, { \"$error\": isError, \"$finalized\": isFinalized, \"$progressComplete\": isProgressComplete, ref: ref }),\n        token,\n        React.createElement(Loader, { value: progressValue, animated: true }, token)));\n});\nFileToken.displayName = 'FileToken';\n"]},"metadata":{},"sourceType":"module"}