{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { string } from 'prop-types';\nconst {\n  REACT_APP_API_URL,\n  REACT_APP_MOVIE_API_KEY\n} = process.env;\n// ?? interface for React.FC when you call children props as a function\nexport const LayoutContainer\n/*: React.FC<ILayoutContainer>*/\n= props => {\n  _s();\n\n  const [allMovies, setAllMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [fetching, setFetching] = useState(true); // const [showSmallLoader, setShowSmallLoader] = useState(false)\n\n  const [search, setSearch] = useState(''); // const [movies, setMovies] = useState([]);\n  // const [isSearching, setIsSearching] = useState(false);\n  // const [movieId, setMovieId] = useState({});\n  // const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  const navigate = useNavigate();\n\n  const handleChangeSearch = term => {\n    // e\n    setSearch(term); // ok) e.target.value\n  };\n\n  useEffect(() => {\n    if (fetching) {\n      axios.get(`${REACT_APP_API_URL}/trending/movie/week?api_key=${REACT_APP_MOVIE_API_KEY}&page=${currentPage}`).then(function (response) {\n        // handle success\n        console.log(response.data.results);\n        setAllMovies(prevState => {\n          return [...prevState, ...response.data.results];\n        });\n        setCurrentPage(prevState => {\n          return prevState + 1;\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(() => {\n        setFetching(false);\n      });\n    }\n  }, [fetching]);\n  useEffect(() => {\n    document.addEventListener('scroll', scrollHandler);\n    return function () {\n      document.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n\n  const scrollHandler = e => {\n    if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\n      setFetching(true);\n    }\n  };\n\n  useEffect(() => {\n    if (search) {\n      handleSearchMovies();\n    }\n  }, [search]);\n\n  const handleSearchMovies = async () => {\n    console.log(search); // setIsSearching(true);\n\n    try {\n      const url = `${REACT_APP_API_URL}/search/movie?api_key=${REACT_APP_MOVIE_API_KEY}&query=${search}`;\n      const {\n        data: {\n          results\n        }\n      } = await axios.get(url);\n      setSearch('');\n      setAllMovies(results); // setIsSearching(false);\n\n      console.log(allMovies);\n      navigate('/');\n    } catch (e) {\n      console.error('[e]', e);\n    }\n\n    console.log(allMovies);\n  };\n\n  return props.children({\n    search,\n    allMovies,\n    onChangeSearch: handleChangeSearch,\n    onSearchMovies: handleSearchMovies\n  });\n};\n\n_s(LayoutContainer, \"iHLKh6Kj1PMy0IWCWfenYu0y8R0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LayoutContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutContainer\");","map":{"version":3,"sources":["/Users/marinagavrilenko/Documents/GitHub/movies_search/src/containers/LayoutContainer/LayoutContainer.tsx"],"names":["useState","useEffect","axios","useNavigate","string","REACT_APP_API_URL","REACT_APP_MOVIE_API_KEY","process","env","LayoutContainer","props","allMovies","setAllMovies","currentPage","setCurrentPage","fetching","setFetching","search","setSearch","navigate","handleChangeSearch","term","get","then","response","console","log","data","results","prevState","catch","error","finally","document","addEventListener","scrollHandler","removeEventListener","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","handleSearchMovies","url","children","onChangeSearch","onSearchMovies"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { string } from 'prop-types';\n\nconst { REACT_APP_API_URL, REACT_APP_MOVIE_API_KEY } = process.env;\n\ninterface AllMoviesResponse{\n     [key: string]: (string | number | [] | {}) \n}\ninterface ILayoutContainer { \n    children(search: string, allMovies: Array<{}>,  handleChangeSearch: (string)=> void, handleSearchMovies: () => void\n    )}\n\n  // ?? interface for React.FC when you call children props as a function\nexport const LayoutContainer /*: React.FC<ILayoutContainer>*/ = (props) => {\n\n    const [ allMovies, setAllMovies ] = useState<AllMoviesResponse[]>([])\n    const [ currentPage, setCurrentPage ] = useState<number>(1)\n    const [ fetching, setFetching ] = useState<boolean>(true)\n    // const [showSmallLoader, setShowSmallLoader] = useState(false)\n\n    const [search, setSearch] = useState<string>('');\n    // const [movies, setMovies] = useState([]);\n    // const [isSearching, setIsSearching] = useState(false);\n    // const [movieId, setMovieId] = useState({});\n    // const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n    const navigate = useNavigate();\n\n    const handleChangeSearch = (term: string): void => { // e\n        setSearch(term);      // ok) e.target.value\n    };\n\n    useEffect (()=>{\n\n        if(fetching){\n            axios.get(`${REACT_APP_API_URL}/trending/movie/week?api_key=${REACT_APP_MOVIE_API_KEY}&page=${currentPage}`)\n            .then(function (response) {\n                // handle success\n                console.log(response.data.results);\n                setAllMovies( (prevState) => {  return [...prevState, ...response.data.results ]})\n                setCurrentPage((prevState)=>{ return prevState+1 })\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .finally(()=> { setFetching(false) })\n        }\n    },[fetching])\n\n    useEffect(()=>{\n\n        document.addEventListener( 'scroll', scrollHandler )\n\n        return function() { document.removeEventListener( 'scroll', scrollHandler ) }\n    },[])\n\n    const scrollHandler = ( e ) => {\n        if(e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100 ){\n            \n            setFetching(true)\n           \n        }\n    }\n\n    useEffect(()=>{\n        if (search){\n\n            handleSearchMovies()\n        }\n        \n    },[search])\n\n    const handleSearchMovies = async () => {\n        \n        console.log (search)\n        // setIsSearching(true);\n\n        try {\n            const url = `${REACT_APP_API_URL}/search/movie?api_key=${REACT_APP_MOVIE_API_KEY}&query=${search}`;\n\n            const {\n                data: { results }\n            } = await axios.get(url);\n\n            setSearch('');\n            setAllMovies(results);\n            // setIsSearching(false);\n\n            console.log(allMovies)\n\n            navigate('/');\n        } catch (e) {\n            console.error('[e]', e);\n        }\n        console.log(allMovies)\n        \n    };\n\n    return props.children({\n        search,\n        allMovies,\n        onChangeSearch: handleChangeSearch,\n        onSearchMovies: handleSearchMovies,\n\n\n    })\n}"]},"metadata":{},"sourceType":"module"}