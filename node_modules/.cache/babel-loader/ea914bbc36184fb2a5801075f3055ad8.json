{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { defaultRect } from './dom'; // UTILS\n\nfunction getComponents(placement) {\n  var _a = placement.split('-'),\n      primary = _a[0],\n      secondary = _a[1];\n\n  var edge = primary;\n  var align = secondary || 'center';\n  return {\n    edge: edge,\n    align: align\n  };\n}\n\nfunction fromComponents(_a) {\n  var align = _a.align,\n      edge = _a.edge;\n  return align === 'center' ? edge : \"\".concat(edge, \"-\").concat(align);\n}\n\nfunction getContainer() {\n  return {\n    top: 0,\n    left: 0,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    bottom: window.innerWidth,\n    right: window.innerWidth\n  };\n}\n\nfunction flip(current) {\n  var opposite = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left',\n    center: 'center'\n  };\n  return opposite[current];\n} // GENERIC POSITION UPDATER (Edge, Align)\n// Flip updater if validator fails and opposite passes\n\n\nfunction getPositionComponent(_a) {\n  var validator = _a.validator,\n      updater = _a.updater;\n  return function (_a) {\n    var container = _a.container,\n        target = _a.target,\n        overlay = _a.overlay,\n        current = _a.placement,\n        _b = _a.canFlip,\n        canFlip = _b === void 0 ? true : _b;\n    var opposite = flip(current);\n    var shouldFlip = !validator[current](container, target, overlay) && validator[opposite](container, target, overlay);\n    var placement = canFlip && shouldFlip ? opposite : current;\n    return __assign({\n      placement: placement\n    }, updater[placement](target, overlay));\n  };\n} // PRIMARY\n\n\nvar Edge = {\n  updater: {\n    left: function (target, overlay) {\n      return {\n        left: target.left - overlay.width\n      };\n    },\n    right: function (target, overlay) {\n      return {\n        left: target.right\n      };\n    },\n    top: function (target, overlay) {\n      return {\n        top: target.top - overlay.height\n      };\n    },\n    bottom: function (target, overlay) {\n      return {\n        top: target.bottom\n      };\n    }\n  },\n  validator: {\n    top: function (container, target, overlay) {\n      return target.top - container.top >= overlay.height;\n    },\n    left: function (container, target, overlay) {\n      return target.left - container.left >= overlay.width;\n    },\n    bottom: function (container, target, overlay) {\n      return container.height - target.bottom >= overlay.height;\n    },\n    right: function (container, target, overlay) {\n      return container.width - target.right >= overlay.width;\n    }\n  }\n}; // SECONDARY\n\nexport var Alignment = {\n  updater: {\n    left: function (target, overlay) {\n      return {\n        left: target.left\n      };\n    },\n    right: function (target, overlay) {\n      return {\n        left: target.right - overlay.width\n      };\n    },\n    top: function (target, overlay) {\n      return {\n        top: target.top\n      };\n    },\n    bottom: function (target, overlay) {\n      return {\n        top: target.bottom - overlay.height\n      };\n    },\n    center: function (target, overlay) {\n      return {\n        left: target.left + (target.width - overlay.width) / 2,\n        top: target.top + (target.height - overlay.height) / 2\n      };\n    }\n  },\n  validator: {\n    top: function (container, target, overlay) {\n      return container.height - target.top >= overlay.height;\n    },\n    right: function (container, target, overlay) {\n      return target.right - container.left >= overlay.width;\n    },\n    left: function (container, target, overlay) {\n      return container.width - target.left >= overlay.width;\n    },\n    bottom: function (container, target, overlay) {\n      return target.bottom - container.top >= overlay.height;\n    },\n    center: function () {\n      return true;\n    }\n  }\n};\nexport var getAlignmentPosition = getPositionComponent(Alignment);\nexport var getEdgePosition = getPositionComponent(Edge);\nexport var padding = function (pad, shape) {\n  if (pad === void 0) {\n    pad = 0;\n  }\n\n  return __assign(__assign({}, shape), {\n    width: shape.width + pad * 2,\n    height: shape.height + pad * 2,\n    top: shape.top - pad,\n    bottom: shape.bottom + pad,\n    left: shape.left - pad,\n    right: shape.right + pad\n  });\n};\nexport function getAnchorPosition(placement, pad, container, target, overlay, canFlip) {\n  if (pad === void 0) {\n    pad = 0;\n  }\n\n  if (container === void 0) {\n    container = getContainer();\n  }\n\n  if (canFlip === void 0) {\n    canFlip = true;\n  }\n\n  if (!target || !overlay) {\n    return defaultRect;\n  }\n\n  var components = getComponents(placement);\n  var align = getAlignmentPosition({\n    canFlip: canFlip,\n    container: container,\n    target: target,\n    overlay: overlay,\n    placement: components.align\n  });\n  var edge = getEdgePosition({\n    canFlip: canFlip,\n    container: container,\n    target: padding(pad, target),\n    overlay: overlay,\n    placement: components.edge\n  });\n  return __assign(__assign(__assign({}, align), edge), {\n    placement: fromComponents({\n      align: align.placement,\n      edge: edge.placement\n    }),\n    minWidth: target.width\n  });\n}","map":{"version":3,"sources":["../../../src/utils/getAnchorPosition.ts"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { defaultRect } from './dom';\n// UTILS\nfunction getComponents(placement) {\n    var _a = placement.split('-'), primary = _a[0], secondary = _a[1];\n    var edge = primary;\n    var align = secondary || 'center';\n    return { edge: edge, align: align };\n}\nfunction fromComponents(_a) {\n    var align = _a.align, edge = _a.edge;\n    return align === 'center' ? edge : \"\".concat(edge, \"-\").concat(align);\n}\nfunction getContainer() {\n    return {\n        top: 0,\n        left: 0,\n        width: window.innerWidth,\n        height: window.innerHeight,\n        bottom: window.innerWidth,\n        right: window.innerWidth,\n    };\n}\nfunction flip(current) {\n    var opposite = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left',\n        center: 'center',\n    };\n    return opposite[current];\n}\n// GENERIC POSITION UPDATER (Edge, Align)\n// Flip updater if validator fails and opposite passes\nfunction getPositionComponent(_a) {\n    var validator = _a.validator, updater = _a.updater;\n    return function (_a) {\n        var container = _a.container, target = _a.target, overlay = _a.overlay, current = _a.placement, _b = _a.canFlip, canFlip = _b === void 0 ? true : _b;\n        var opposite = flip(current);\n        var shouldFlip = !validator[current](container, target, overlay) &&\n            validator[opposite](container, target, overlay);\n        var placement = canFlip && shouldFlip ? opposite : current;\n        return __assign({ placement: placement }, updater[placement](target, overlay));\n    };\n}\n// PRIMARY\nvar Edge = {\n    updater: {\n        left: function (target, overlay) { return ({\n            left: target.left - overlay.width,\n        }); },\n        right: function (target, overlay) { return ({ left: target.right }); },\n        top: function (target, overlay) { return ({\n            top: target.top - overlay.height,\n        }); },\n        bottom: function (target, overlay) { return ({ top: target.bottom }); },\n    },\n    validator: {\n        top: function (container, target, overlay) {\n            return target.top - container.top >= overlay.height;\n        },\n        left: function (container, target, overlay) {\n            return target.left - container.left >= overlay.width;\n        },\n        bottom: function (container, target, overlay) {\n            return container.height - target.bottom >= overlay.height;\n        },\n        right: function (container, target, overlay) {\n            return container.width - target.right >= overlay.width;\n        },\n    },\n};\n// SECONDARY\nexport var Alignment = {\n    updater: {\n        left: function (target, overlay) { return ({ left: target.left }); },\n        right: function (target, overlay) { return ({ left: target.right - overlay.width }); },\n        top: function (target, overlay) { return ({ top: target.top }); },\n        bottom: function (target, overlay) { return ({ top: target.bottom - overlay.height }); },\n        center: function (target, overlay) { return ({\n            left: target.left + (target.width - overlay.width) / 2,\n            top: target.top + (target.height - overlay.height) / 2,\n        }); },\n    },\n    validator: {\n        top: function (container, target, overlay) {\n            return container.height - target.top >= overlay.height;\n        },\n        right: function (container, target, overlay) {\n            return target.right - container.left >= overlay.width;\n        },\n        left: function (container, target, overlay) {\n            return container.width - target.left >= overlay.width;\n        },\n        bottom: function (container, target, overlay) {\n            return target.bottom - container.top >= overlay.height;\n        },\n        center: function () { return true; },\n    },\n};\nexport var getAlignmentPosition = getPositionComponent(Alignment);\nexport var getEdgePosition = getPositionComponent(Edge);\nexport var padding = function (pad, shape) {\n    if (pad === void 0) { pad = 0; }\n    return (__assign(__assign({}, shape), { width: shape.width + pad * 2, height: shape.height + pad * 2, top: shape.top - pad, bottom: shape.bottom + pad, left: shape.left - pad, right: shape.right + pad }));\n};\nexport function getAnchorPosition(placement, pad, container, target, overlay, canFlip) {\n    if (pad === void 0) { pad = 0; }\n    if (container === void 0) { container = getContainer(); }\n    if (canFlip === void 0) { canFlip = true; }\n    if (!target || !overlay) {\n        return defaultRect;\n    }\n    var components = getComponents(placement);\n    var align = getAlignmentPosition({\n        canFlip: canFlip,\n        container: container,\n        target: target,\n        overlay: overlay,\n        placement: components.align,\n    });\n    var edge = getEdgePosition({\n        canFlip: canFlip,\n        container: container,\n        target: padding(pad, target),\n        overlay: overlay,\n        placement: components.edge,\n    });\n    return __assign(__assign(__assign({}, align), edge), { placement: fromComponents({ align: align.placement, edge: edge.placement }), minWidth: target.width });\n}\n"]},"metadata":{},"sourceType":"module"}