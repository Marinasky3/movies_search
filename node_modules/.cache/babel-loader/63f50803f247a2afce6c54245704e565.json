{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { useDropzone } from '../../Dropzone';\nimport { Flex } from '../../../layouts/Flex';\nimport { useI18nContext } from '../../../state/I18n';\nimport { dropErrors } from '../../Dropzone/Dropzone.types';\nimport { Tooltip } from '../../Tooltip';\nimport { dropzoneContainerAttr, StyledDropzone, StyledDropzoneMessage, StyledUploadButtonWrapper } from './FileSelectDropzone.styles';\nimport { Button } from '../../Button';\nvar DefaultContent = React.forwardRef(function DefaultContent(_a, ref) {\n  var disabled = _a.disabled,\n      errorMessage = _a.errorMessage,\n      _b = _a.hideDropzone,\n      hideDropzone = _b === void 0 ? false : _b,\n      multiple = _a.multiple,\n      onAttachFromProject = _a.onAttachFromProject,\n      tooltip = _a.tooltip,\n      qa = _a.qa;\n  var I18n = useI18nContext();\n  var attachFilesButton = React.createElement(Tooltip, {\n    trigger: hideDropzone && tooltip ? 'hover' : 'none',\n    placement: \"right\",\n    overlay: tooltip\n  }, React.createElement(StyledUploadButtonWrapper, null, React.createElement(Button, {\n    ref: ref,\n    variant: \"secondary\",\n    onClick: onAttachFromProject,\n    disabled: disabled,\n    \"data-qa\": qa === null || qa === void 0 ? void 0 : qa.attachFiles\n  }, I18n.t('core.fileAttacher.attachFiles', {\n    count: multiple ? Infinity : 1\n  }))));\n  return hideDropzone ? attachFilesButton : React.createElement(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, attachFilesButton, React.createElement(StyledDropzoneMessage, {\n    error: Boolean(errorMessage)\n  }, errorMessage || I18n.t('core.dropzone.dragAndDrop')));\n});\nexport var FileSelectDropzone = React.forwardRef(function FileSelectDropzone(_a, ref) {\n  var _b;\n\n  var accept = _a.accept,\n      maxFileNumber = _a.maxFileNumber,\n      maxFileSize = _a.maxFileSize,\n      minFileSize = _a.minFileSize,\n      disabled = _a.disabled,\n      value = _a.value,\n      onDrop = _a.onDrop,\n      multiple = _a.multiple,\n      noDrag = _a.noDrag,\n      onAttachFromProject = _a.onAttachFromProject,\n      contentRenderer = _a.contentRenderer,\n      _c = _a.hideDropzone,\n      hideDropzone = _c === void 0 ? false : _c,\n      tooltip = _a.tooltip,\n      qa = _a.qa;\n  var dropzoneState = useDropzone({\n    accept: accept,\n    maxFileNumber: maxFileNumber,\n    maxFileSize: maxFileSize,\n    minFileSize: minFileSize,\n    disabled: disabled,\n    value: value,\n    onDrop: onDrop,\n    multiple: multiple,\n    noDrag: noDrag\n  });\n  var attachButtonRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      clearErrors: function () {\n        dropzoneState.dispatchDropError(dropErrors.reset);\n      },\n      attachButton: attachButtonRef.current\n    };\n  });\n\n  var defaultContent = function (props) {\n    return React.createElement(DefaultContent, __assign({}, props, {\n      ref: attachButtonRef,\n      tooltip: tooltip,\n      hideDropzone: hideDropzone,\n      multiple: multiple,\n      onAttachFromProject: onAttachFromProject,\n      qa: {\n        attachFiles: qa === null || qa === void 0 ? void 0 : qa.attachFiles\n      }\n    }));\n  };\n\n  var dropzoneContent = contentRenderer || defaultContent;\n  return React.createElement(StyledDropzone, __assign({}, dropzoneState, {\n    tooltip: hideDropzone ? null : tooltip,\n    contentRenderer: dropzoneContent,\n    hidden: hideDropzone,\n    rootProps: (_b = {}, _b[dropzoneContainerAttr] = '', _b)\n  }, hideDropzone ? {\n    isIconVisible: false\n  } : {}));\n});\nFileSelectDropzone.displayName = 'FileSelectDropzone';\nexport default FileSelectDropzone;","map":{"version":3,"sources":["../../../../../src/components/FileSelect/FileSelectDropzone/FileSelectDropzone.tsx"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { useDropzone } from '../../Dropzone';\nimport { Flex } from '../../../layouts/Flex';\nimport { useI18nContext } from '../../../state/I18n';\nimport { dropErrors } from '../../Dropzone/Dropzone.types';\nimport { Tooltip } from '../../Tooltip';\nimport { dropzoneContainerAttr, StyledDropzone, StyledDropzoneMessage, StyledUploadButtonWrapper, } from './FileSelectDropzone.styles';\nimport { Button } from '../../Button';\nvar DefaultContent = React.forwardRef(function DefaultContent(_a, ref) {\n    var disabled = _a.disabled, errorMessage = _a.errorMessage, _b = _a.hideDropzone, hideDropzone = _b === void 0 ? false : _b, multiple = _a.multiple, onAttachFromProject = _a.onAttachFromProject, tooltip = _a.tooltip, qa = _a.qa;\n    var I18n = useI18nContext();\n    var attachFilesButton = (React.createElement(Tooltip, { trigger: hideDropzone && tooltip ? 'hover' : 'none', placement: \"right\", overlay: tooltip },\n        React.createElement(StyledUploadButtonWrapper, null,\n            React.createElement(Button, { ref: ref, variant: \"secondary\", onClick: onAttachFromProject, disabled: disabled, \"data-qa\": qa === null || qa === void 0 ? void 0 : qa.attachFiles }, I18n.t('core.fileAttacher.attachFiles', {\n                count: multiple ? Infinity : 1,\n            })))));\n    return hideDropzone ? (attachFilesButton) : (React.createElement(Flex, { direction: \"column\", justifyContent: \"center\", alignItems: \"center\" },\n        attachFilesButton,\n        React.createElement(StyledDropzoneMessage, { error: Boolean(errorMessage) }, errorMessage || I18n.t('core.dropzone.dragAndDrop'))));\n});\nexport var FileSelectDropzone = React.forwardRef(function FileSelectDropzone(_a, ref) {\n    var _b;\n    var accept = _a.accept, maxFileNumber = _a.maxFileNumber, maxFileSize = _a.maxFileSize, minFileSize = _a.minFileSize, disabled = _a.disabled, value = _a.value, onDrop = _a.onDrop, multiple = _a.multiple, noDrag = _a.noDrag, onAttachFromProject = _a.onAttachFromProject, contentRenderer = _a.contentRenderer, _c = _a.hideDropzone, hideDropzone = _c === void 0 ? false : _c, tooltip = _a.tooltip, qa = _a.qa;\n    var dropzoneState = useDropzone({\n        accept: accept,\n        maxFileNumber: maxFileNumber,\n        maxFileSize: maxFileSize,\n        minFileSize: minFileSize,\n        disabled: disabled,\n        value: value,\n        onDrop: onDrop,\n        multiple: multiple,\n        noDrag: noDrag,\n    });\n    var attachButtonRef = useRef(null);\n    useImperativeHandle(ref, function () { return ({\n        clearErrors: function () {\n            dropzoneState.dispatchDropError(dropErrors.reset);\n        },\n        attachButton: attachButtonRef.current,\n    }); });\n    var defaultContent = function (props) { return (React.createElement(DefaultContent, __assign({}, props, { ref: attachButtonRef, tooltip: tooltip, hideDropzone: hideDropzone, multiple: multiple, onAttachFromProject: onAttachFromProject, qa: { attachFiles: qa === null || qa === void 0 ? void 0 : qa.attachFiles } }))); };\n    var dropzoneContent = contentRenderer || defaultContent;\n    return (React.createElement(StyledDropzone, __assign({}, dropzoneState, { tooltip: hideDropzone ? null : tooltip, contentRenderer: dropzoneContent, hidden: hideDropzone, rootProps: (_b = {}, _b[dropzoneContainerAttr] = '', _b) }, (hideDropzone ? { isIconVisible: false } : {}))));\n});\nFileSelectDropzone.displayName = 'FileSelectDropzone';\nexport default FileSelectDropzone;\n"]},"metadata":{},"sourceType":"module"}