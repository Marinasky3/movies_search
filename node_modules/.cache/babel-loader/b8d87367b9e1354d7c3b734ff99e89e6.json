{"ast":null,"code":"import React from 'react';\nimport { StyledSidebar, StyledNavigation, StyledSourceItem } from './FileExplorerSidebar.styles';\nimport { useSidebarNavigation } from './useSidebarNavigation';\nexport function FileExplorerSidebar(_a) {\n  var selectedSource = _a.value,\n      onChange = _a.onChange,\n      sources = _a.sources,\n      isOpen = _a.isOpen;\n\n  var _b = React.useState(false),\n      isNavFocused = _b[0],\n      setIsNavFocused = _b[1];\n\n  var _c = React.useState(true),\n      isFocusVisible = _c[0],\n      setIsFocusVisible = _c[1];\n\n  var focusedSourceRef = React.useRef(null);\n  var selectedSourceIndex = sources.findIndex(function (_a) {\n    var sourceId = _a.sourceId;\n    return sourceId === selectedSource;\n  });\n  var sidebarNavigation = useSidebarNavigation({\n    initialIndex: selectedSourceIndex,\n    size: sources.length,\n    selectedIndex: selectedSourceIndex\n  });\n  React.useEffect(function () {\n    sidebarNavigation.set(selectedSourceIndex);\n  }, [selectedSourceIndex]);\n  React.useEffect(function () {\n    if (focusedSourceRef.current && isOpen) {\n      focusedSourceRef.current.focus();\n    }\n  }, [sidebarNavigation.index, isOpen]);\n  React.useEffect(function () {\n    sidebarNavigation.setSize(sources.length);\n  }, [sources.length]);\n\n  var onKeyDown = function (e) {\n    if (!isNavFocused) return;\n\n    switch (e.nativeEvent.key) {\n      case 'Enter':\n        e.preventDefault();\n        onChange(sources[sidebarNavigation.index].sourceId);\n        break;\n\n      case 'ArrowUp':\n      case 'Up':\n        e.preventDefault();\n        sidebarNavigation.up();\n        break;\n\n      case 'ArrowDown':\n      case 'Down':\n        e.preventDefault();\n        sidebarNavigation.down();\n        break;\n    }\n  };\n\n  return React.createElement(StyledSidebar, null, React.createElement(StyledNavigation, null, sources.map(function (source, idx) {\n    var isFocused = idx === sidebarNavigation.index;\n    return React.createElement(StyledSourceItem, {\n      key: source.sourceId,\n      loading: source.isUploading,\n      error: source.hasError,\n      icon: source.icon,\n      selected: selectedSource === source.sourceId,\n      focused: isNavFocused && isFocusVisible && isFocused,\n      tabIndex: isFocused ? 0 : -1,\n      ref: isFocused ? focusedSourceRef : null,\n      onMouseDown: function () {\n        // prevent focus blink on the latest focused item\n        setIsFocusVisible(false);\n      },\n      onMouseUp: function () {\n        setIsFocusVisible(true);\n      },\n      count: source.value.length,\n      onFocus: function () {\n        setIsNavFocused(true);\n      },\n      onBlur: function () {\n        setIsNavFocused(false);\n      },\n      onKeyDown: onKeyDown,\n      onClick: function () {\n        sidebarNavigation.set(idx);\n        onChange(source.sourceId);\n      }\n    }, source.title);\n  })));\n}","map":{"version":3,"sources":["../../../../../src/components/FileSelect/FileExplorer/FileExplorerSidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyledSidebar, StyledNavigation, StyledSourceItem, } from './FileExplorerSidebar.styles';\nimport { useSidebarNavigation } from './useSidebarNavigation';\nexport function FileExplorerSidebar(_a) {\n    var selectedSource = _a.value, onChange = _a.onChange, sources = _a.sources, isOpen = _a.isOpen;\n    var _b = React.useState(false), isNavFocused = _b[0], setIsNavFocused = _b[1];\n    var _c = React.useState(true), isFocusVisible = _c[0], setIsFocusVisible = _c[1];\n    var focusedSourceRef = React.useRef(null);\n    var selectedSourceIndex = sources.findIndex(function (_a) {\n        var sourceId = _a.sourceId;\n        return sourceId === selectedSource;\n    });\n    var sidebarNavigation = useSidebarNavigation({\n        initialIndex: selectedSourceIndex,\n        size: sources.length,\n        selectedIndex: selectedSourceIndex,\n    });\n    React.useEffect(function () {\n        sidebarNavigation.set(selectedSourceIndex);\n    }, [selectedSourceIndex]);\n    React.useEffect(function () {\n        if (focusedSourceRef.current && isOpen) {\n            focusedSourceRef.current.focus();\n        }\n    }, [sidebarNavigation.index, isOpen]);\n    React.useEffect(function () {\n        sidebarNavigation.setSize(sources.length);\n    }, [sources.length]);\n    var onKeyDown = function (e) {\n        if (!isNavFocused)\n            return;\n        switch (e.nativeEvent.key) {\n            case 'Enter':\n                e.preventDefault();\n                onChange(sources[sidebarNavigation.index].sourceId);\n                break;\n            case 'ArrowUp':\n            case 'Up':\n                e.preventDefault();\n                sidebarNavigation.up();\n                break;\n            case 'ArrowDown':\n            case 'Down':\n                e.preventDefault();\n                sidebarNavigation.down();\n                break;\n        }\n    };\n    return (React.createElement(StyledSidebar, null,\n        React.createElement(StyledNavigation, null, sources.map(function (source, idx) {\n            var isFocused = idx === sidebarNavigation.index;\n            return (React.createElement(StyledSourceItem, { key: source.sourceId, loading: source.isUploading, error: source.hasError, icon: source.icon, selected: selectedSource === source.sourceId, focused: isNavFocused && isFocusVisible && isFocused, tabIndex: isFocused ? 0 : -1, ref: isFocused ? focusedSourceRef : null, onMouseDown: function () {\n                    // prevent focus blink on the latest focused item\n                    setIsFocusVisible(false);\n                }, onMouseUp: function () {\n                    setIsFocusVisible(true);\n                }, count: source.value.length, onFocus: function () {\n                    setIsNavFocused(true);\n                }, onBlur: function () {\n                    setIsNavFocused(false);\n                }, onKeyDown: onKeyDown, onClick: function () {\n                    sidebarNavigation.set(idx);\n                    onChange(source.sourceId);\n                } }, source.title));\n        }))));\n}\n"]},"metadata":{},"sourceType":"module"}