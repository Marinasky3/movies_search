{"ast":null,"code":"var _jsxFileName = \"/Users/marinagavrilenko/Documents/GitHub/movies_search/src/components/MovieCard/MovieCard.tsx\";\nimport { Link } from 'react-router-dom';\nimport { Card } from '@procore/core-react';\nimport { Icon } from '@procore/core-react';\nimport './MovieCard.scss';\nimport img from '../../img/noPoster.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_STORAGE_URL\n} = process.env;\nexport const MovieCard = _ref => {\n  let {\n    movie\n  } = _ref;\n  const movieRating = Number((movie.vote_average / 2).toFixed(0));\n  const movieRatingToShow = Number((movie.vote_average / 2).toFixed(2));\n  const arrOfStarsForRating = [];\n\n  for (let i = 0; i < movieRating; i++) {\n    arrOfStarsForRating.push(1);\n  }\n\n  const utcDate = new Date(movie.release_date);\n  const year = utcDate.getFullYear(); // console.log(year)\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      padding: 24,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${movie.title}?movieId=${movie.id}`,\n      className: \"movieCard_movieLink\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieCard_movieActive\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieCard_title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieCard_releaseYear\",\n          children: [\"Release: \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: movie.poster_path !== null ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path}) 0 0/100% 100% no-repeat` : `url(${img})  center no-repeat `\n        },\n        className: \"movieCard_movieBackground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieCard_ratingWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [\"Rating: \", movieRatingToShow]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: arrOfStarsForRating.map(() => {\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            clickable: true,\n            icon: \"star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this) //   background: url( ${props => props.bgUrl}) 0 0/100% 100% no-repeat\n  ;\n};\n_c = MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["/Users/marinagavrilenko/Documents/GitHub/movies_search/src/components/MovieCard/MovieCard.tsx"],"names":["Link","Card","Icon","img","REACT_APP_STORAGE_URL","process","env","MovieCard","movie","movieRating","Number","vote_average","toFixed","movieRatingToShow","arrOfStarsForRating","i","push","utcDate","Date","release_date","year","getFullYear","padding","position","title","id","background","poster_path","map"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA4BC,OAAO,CAACC,GAA1C;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAc;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACnC,QAAMC,WAAmB,GAAGC,MAAM,CAAC,CAACF,KAAK,CAACG,YAAN,GAAmB,CAApB,EAAuBC,OAAvB,CAA+B,CAA/B,CAAD,CAAlC;AACA,QAAMC,iBAAyB,GAAGH,MAAM,CAAC,CAACF,KAAK,CAACG,YAAN,GAAmB,CAApB,EAAuBC,OAAvB,CAA+B,CAA/B,CAAD,CAAxC;AAEA,QAAME,mBAAkC,GAAG,EAA3C;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAACN,WAAnB,EAAgCM,CAAC,EAAjC,EAAoC;AAChCD,IAAAA,mBAAmB,CAACE,IAApB,CAAyB,CAAzB;AACH;;AACD,QAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASV,KAAK,CAACW,YAAf,CAAhB;AACA,QAAMC,IAAI,GAAGH,OAAO,CAACI,WAAR,EAAb,CATmC,CAUnC;;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,QAAQ,EAAC;AAAvB,KAAb;AAAA,4BAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASf,KAAK,CAACgB,KAAM,YAAWhB,KAAK,CAACiB,EAAG,EAApD;AAAuD,MAAA,SAAS,EAAC,qBAAjE;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACMjB,KAAK,CAACgB;AADZ;AAAA;AAAA;AAAA;AAAA,gBADH,eAIG;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCAAiDJ,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AACI,QAAA,KAAK,EAAE;AAACM,UAAAA,UAAU,EAAElB,KAAK,CAACmB,WAAN,KAAsB,IAAtB,GAA8B,sCAAqCnB,KAAK,CAACmB,WAAY,2BAArF,GAAmH,OAAMxB,GAAI;AAA1I,SADX;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cARJ,eAYI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAkBQ;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BAEaU,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,kBAEQC,mBAAmB,CAACc,GAApB,CAAwB,MAAI;AACxB,8BACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE,IAAjB;AAAuB,YAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJD;AAFR;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAoCA;AApCA;AAsCH,CAlDM;KAAMrB,S","sourcesContent":["import { Link } from 'react-router-dom';\nimport { Card } from '@procore/core-react'\nimport { Icon } from '@procore/core-react'\nimport './MovieCard.scss'\nimport img from '../../img/noPoster.jpeg'\n\nconst { REACT_APP_STORAGE_URL } = process.env;\n\nexport const MovieCard = ({movie }) => {\n    const movieRating: number = Number((movie.vote_average/2).toFixed(0))\n    const movieRatingToShow: number = Number((movie.vote_average/2).toFixed(2))\n\n    const arrOfStarsForRating: Array<number> = []\n    for ( let i = 0; i<movieRating; i++){\n        arrOfStarsForRating.push(1)\n    }\n    const utcDate = new Date(movie.release_date)\n    const year = utcDate.getFullYear();\n    // console.log(year)\n\n    return(\n        <Card style={{padding: 24, position:'relative'}}>\n\n            <Link to={`/movie/${movie.title}?movieId=${movie.id}`} className=\"movieCard_movieLink\">\n\n                <div className=\"movieCard_movieActive\">\n                   <div className=\"movieCard_title\">                \n                        {movie.title}\n                   </div>\n                   <div className=\"movieCard_releaseYear\">Release: {year}</div>\n                </div>\n                <div \n                    style={{background: movie.poster_path !== null ? `url(https://image.tmdb.org/t/p/w500${movie.poster_path}) 0 0/100% 100% no-repeat` : `url(${img})  center no-repeat `}} \n                    className=\"movieCard_movieBackground\">\n                </div>\n                <div className=\"\">\n\n                </div>\n             </Link>\n                <div className=\"movieCard_ratingWrapper\">\n                    <div className=\"\">\n\n                        Rating: {movieRatingToShow}\n                    </div>\n                    <div className=\"\">\n                        {\n                            arrOfStarsForRating.map(()=>{\n                                return(\n                                    <Icon clickable={true} icon=\"star\" />\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n           \n        </Card>\n    //   background: url( ${props => props.bgUrl}) 0 0/100% 100% no-repeat\n    )\n} "]},"metadata":{},"sourceType":"module"}