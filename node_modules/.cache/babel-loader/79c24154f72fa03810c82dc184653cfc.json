{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport React from 'react';\nimport { VariableSizeGrid } from 'react-window';\nimport InfiniteLoader from 'react-window-infinite-loader';\nimport { mergeRefs } from '../../effects/mergeRefs';\nimport { useI18nContext } from '../../state/I18n';\nimport { Spinner } from '../Spinner';\nimport { Tooltip } from '../Tooltip';\nimport { useGridNavigation } from './ThumbnailGrid.hooks';\nimport { StyledGroupCell, StyledGroupTitle, StyledSpinnerWrapper, StyledThumbnail, StyledThumbnailGrid } from './ThumbnailGrid.styles';\n\nfunction noop() {}\n\nvar asyncNoop = function () {\n  return Promise.resolve();\n};\n\nvar titleHeight = 20;\nvar titleTopPadding = 24;\nvar thumbnailHeight = 138;\nvar thumbnailWidh = 104;\nvar columnsCount = 5;\nvar gutterSize = 12;\nvar columnWidth = thumbnailWidh + gutterSize;\nvar gridLeftPadding = 24;\nvar defaultGridWidth = gridLeftPadding + columnWidth * columnsCount;\nvar defaultGridHeight = (thumbnailHeight + gutterSize) * 3;\n\nvar getGridRows = function (_a) {\n  var items = _a.items,\n      groups = _a.groups,\n      title = _a.title,\n      _b = _a.isFetching,\n      isFetching = _b === void 0 ? false : _b,\n      groupTitleFallback = _a.groupTitleFallback;\n\n  var splitToRows = function (items) {\n    return items.reduce(function (acc, item, index) {\n      var rowIndex = Math.floor(index / columnsCount);\n      var row = acc[rowIndex] = acc[rowIndex] || [];\n      row.push(item);\n      return acc;\n    }, []);\n  };\n\n  var splitToGroupedRows = function (items, groups) {\n    var groupedRows = [];\n    var groupedThumbnails = items.reduce(function (acc, item) {\n      var _a;\n\n      var groupId = (_a = item.groupId) !== null && _a !== void 0 ? _a : String(item.groupId);\n      var group = acc.get(groupId);\n\n      if (group) {\n        group.push(item);\n      } else {\n        acc.set(groupId, [item]);\n      }\n\n      return acc;\n    }, new Map(groups.map(function (_a) {\n      var id = _a.id;\n      return [id, []];\n    })));\n    groupedThumbnails.forEach(function (group, groupId) {\n      var _a;\n\n      var groupRows = splitToRows(group);\n\n      if (groupRows.length) {\n        var groupTitleRow = [{\n          title: ((_a = groups.find(function (_a) {\n            var id = _a.id;\n            return groupId === id;\n          })) === null || _a === void 0 ? void 0 : _a.title) || groupTitleFallback\n        }];\n        groupRows.unshift(groupTitleRow);\n      }\n\n      groupedRows = __spreadArray(__spreadArray([], groupedRows, true), groupRows, true);\n    });\n    return groupedRows;\n  };\n\n  var setGridTitle = function (rows) {\n    if (title) {\n      rows.unshift([{\n        title: title\n      }]);\n    }\n\n    return rows;\n  };\n\n  var setLoadingIndicator = function (rows) {\n    if (isFetching) {\n      rows.push([{\n        isFetching: isFetching\n      }]);\n    }\n\n    return rows;\n  };\n\n  var gridRows = groups ? splitToGroupedRows(items, groups) : splitToRows(items);\n  var gridRowsWithOptionalTitle = setGridTitle(gridRows);\n  var gridRowsWithOptionalLoadingIndicator = setLoadingIndicator(gridRowsWithOptionalTitle);\n  return gridRowsWithOptionalLoadingIndicator;\n};\n\nvar GroupCell = function (_a) {\n  var children = _a.children,\n      style = _a.style,\n      props = __rest(_a, [\"children\", \"style\"]);\n\n  return React.createElement(StyledGroupCell, __assign({\n    style: __assign(__assign({}, style), {\n      left: (style === null || style === void 0 ? void 0 : style.left) + gridLeftPadding,\n      top: (style === null || style === void 0 ? void 0 : style.top) + gutterSize,\n      width: columnWidth * columnsCount\n    })\n  }, props), children);\n};\n\nvar ThumbnailCell = function (_a) {\n  var children = _a.children,\n      className = _a.className,\n      style = _a.style,\n      props = __rest(_a, [\"children\", \"className\", \"style\"]);\n\n  return React.createElement(\"div\", __assign({\n    style: __assign(__assign({}, style), {\n      left: (style === null || style === void 0 ? void 0 : style.left) + gridLeftPadding,\n      top: (style === null || style === void 0 ? void 0 : style.top) + gutterSize\n    })\n  }, props), children);\n}; // See https://github.com/bvaughn/react-window/issues/130\n\n\nvar GridOuterContainer = React.forwardRef(function (props, ref) {\n  return React.createElement(\"div\", __assign({\n    ref: ref,\n    tabIndex: -1\n  }, props));\n});\nvar GridInnerContainer = React.forwardRef(function (_a, ref) {\n  var style = _a.style,\n      props = __rest(_a, [\"style\"]);\n\n  return React.createElement(\"div\", __assign({\n    ref: ref,\n    style: __assign(__assign({}, style), {\n      paddingLeft: gridLeftPadding,\n      width: (style === null || style === void 0 ? void 0 : style.width) + gridLeftPadding\n    })\n  }, props));\n});\nexport var ThumbnailGrid = React.forwardRef(function (_a, forwardRef) {\n  var items = _a.items,\n      selected = _a.selected,\n      groups = _a.groups,\n      _b = _a.title,\n      title = _b === void 0 ? '' : _b,\n      _c = _a.gridWidth,\n      gridWidth = _c === void 0 ? defaultGridWidth : _c,\n      _d = _a.gridHeight,\n      gridHeight = _d === void 0 ? defaultGridHeight : _d,\n      _e = _a.onSelect,\n      onSelect = _e === void 0 ? noop : _e,\n      _f = _a.onDeselect,\n      onDeselect = _f === void 0 ? noop : _f,\n      _g = _a.disableSelection,\n      disableSelection = _g === void 0 ? {\n    value: false,\n    tooltip: ''\n  } : _g,\n      _h = _a.isFetching,\n      isFetching = _h === void 0 ? false : _h,\n      _j = _a.loadMoreItems,\n      loadMoreItems = _j === void 0 ? asyncNoop : _j,\n      qa = _a.qa,\n      props = __rest(_a, [\"items\", \"selected\", \"groups\", \"title\", \"gridWidth\", \"gridHeight\", \"onSelect\", \"onDeselect\", \"disableSelection\", \"isFetching\", \"loadMoreItems\", \"qa\"]);\n\n  var gridContainerRef = React.useRef(null);\n  var I18n = useI18nContext();\n  var gridContainer = gridContainerRef.current;\n  var gridRef = React.useRef(null);\n  var gridInstance = gridRef.current;\n  var rows = React.useMemo(function () {\n    return getGridRows({\n      items: items,\n      groups: groups,\n      isFetching: isFetching,\n      title: title,\n      groupTitleFallback: I18n.t('core.fileExplorer.ungroupedThumbnailGridGroup')\n    });\n  }, [items, groups, title, isFetching]);\n\n  var isTitleRow = function (rowCells) {\n    return 'title' in rowCells[0];\n  };\n\n  var isFetchingRow = function (rowCells) {\n    return 'isFetching' in rowCells[0];\n  };\n\n  var isNonNavigableRow = function (rowCells) {\n    return isTitleRow(rowCells) || isFetchingRow(rowCells);\n  };\n\n  var rowHeights = React.useMemo(function () {\n    return rows.map(function (rowCells, index) {\n      var titleRow = isTitleRow(rowCells);\n      var titleRowIsNotFirstGridRow = titleRow && index > 0;\n      var rowPadding = (titleRowIsNotFirstGridRow ? titleTopPadding : 0) + gutterSize;\n\n      if (titleRow) {\n        return titleHeight + rowPadding;\n      } else {\n        return thumbnailHeight + rowPadding;\n      }\n    });\n  }, [rows]);\n  var nonNavigableRowIndices = React.useMemo(function () {\n    return rows.map(function (rowCells, index) {\n      return {\n        index: index,\n        isNonNavigableRow: isNonNavigableRow(rowCells)\n      };\n    }).filter(function (_a) {\n      var isNonNavigableRow = _a.isNonNavigableRow;\n      return isNonNavigableRow;\n    }).map(function (_a) {\n      var index = _a.index;\n      return index;\n    });\n  }, [rows]);\n  var navigationIndicesRows = React.useMemo(function () {\n    return rows.filter(function (rowCells) {\n      return !isNonNavigableRow(rowCells);\n    }).map(function (rowCells) {\n      return rowCells.map(function (cell) {\n        return items.findIndex(function (item) {\n          return item.id === cell.id;\n        });\n      });\n    });\n  }, [rows, items]);\n  var getNumberOfNonNavigableRowsBefore = React.useCallback(function (rowIndex) {\n    return nonNavigableRowIndices.filter(function (index) {\n      return rowIndex > index;\n    }).length;\n  }, [nonNavigableRowIndices]);\n  var getThumbnailNavigationIndex = React.useCallback(function (rowIndex, cellIndex) {\n    return navigationIndicesRows[rowIndex - getNumberOfNonNavigableRowsBefore(rowIndex)][cellIndex];\n  }, [navigationIndicesRows, getNumberOfNonNavigableRowsBefore]);\n  var thumbnailNavigationIndexToRowIndexMap = React.useMemo(function () {\n    return rows.reduce(function (acc, rowCells, rowIndex) {\n      if (isNonNavigableRow(rowCells)) return acc;\n      var mappedRowCells = rowCells.reduce(function (acc, _, cellIndex) {\n        var navIndex = String(getThumbnailNavigationIndex(rowIndex, cellIndex));\n        acc[navIndex] = rowIndex;\n        return acc;\n      }, {});\n      return __assign(__assign({}, acc), mappedRowCells);\n    }, {});\n  }, [rows, getThumbnailNavigationIndex]);\n\n  var _k = React.useState(false),\n      isGridFocused = _k[0],\n      setIsGridFocused = _k[1];\n\n  var navigation = useGridNavigation({\n    indicesRows: navigationIndicesRows\n  });\n\n  var isThumbnailSelected = function (thumbnail) {\n    return selected.map(function (_a) {\n      var id = _a.id;\n      return id;\n    }).includes(thumbnail.id);\n  };\n\n  var toggle = function (thumbnail) {\n    if (isThumbnailSelected(thumbnail)) {\n      onDeselect(thumbnail);\n    } else if (!disableSelection.value) {\n      onSelect(thumbnail);\n    }\n  };\n\n  var onMouseDown = function (e) {\n    e.preventDefault();\n    var focusedEl = document.activeElement;\n\n    if (focusedEl && focusedEl !== gridContainer) {\n      focusedEl.blur();\n    }\n  };\n\n  var updateNavigationPosition = function (e) {\n    switch (e.key) {\n      case 'ArrowDown':\n      case 'Down':\n        e.preventDefault();\n        return navigation.down(e);\n\n      case 'ArrowUp':\n      case 'Up':\n        e.preventDefault();\n        return navigation.up(e);\n\n      case 'ArrowLeft':\n      case 'Left':\n        e.preventDefault();\n        return navigation.left(e);\n\n      case 'ArrowRight':\n      case 'Right':\n        e.preventDefault();\n        return navigation.right(e);\n\n      default:\n        return -1;\n    }\n  };\n\n  var onKeyDown = function (e) {\n    if (!isGridFocused) return;\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      toggle(items[navigation.index]);\n    } else {\n      var newPosition = updateNavigationPosition(e);\n\n      if (newPosition !== -1) {\n        gridInstance === null || gridInstance === void 0 ? void 0 : gridInstance.scrollToItem({\n          rowIndex: thumbnailNavigationIndexToRowIndexMap[newPosition]\n        });\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    navigation.setIndicesRows(navigationIndicesRows);\n  }, [navigationIndicesRows, navigation]);\n  React.useEffect(function () {\n    // VariableSizeGrid caches offsets and measurements for each row index for performance purposes.\n    // Method below clears cached data and triggers recalucation when a new value of search filter recomposites grid structure.\n    gridInstance === null || gridInstance === void 0 ? void 0 : gridInstance.resetAfterRowIndex(0);\n  }, [items, gridInstance]);\n  return React.createElement(StyledThumbnailGrid, __assign({}, props, {\n    ref: mergeRefs(forwardRef, gridContainerRef),\n    \"data-qa\": qa === null || qa === void 0 ? void 0 : qa.grid,\n    tabIndex: 0,\n    onBlur: function () {\n      return setIsGridFocused(false);\n    },\n    onFocus: function () {\n      return setIsGridFocused(true);\n    },\n    onKeyDown: onKeyDown,\n    onMouseDown: onMouseDown\n  }), React.createElement(InfiniteLoader, {\n    loadMoreItems: isFetching ? asyncNoop : loadMoreItems,\n    itemCount: rows.length,\n    isItemLoaded: function (index) {\n      return index < rows.length - 1;\n    },\n    threshold: 0\n  }, function (_a) {\n    var onItemsRendered = _a.onItemsRendered,\n        infiniteLoaderRef = _a.ref;\n    return React.createElement(VariableSizeGrid, {\n      width: gridWidth,\n      height: gridHeight,\n      rowCount: rows.length,\n      rowHeight: function (index) {\n        return rowHeights[index];\n      },\n      columnCount: columnsCount,\n      columnWidth: function () {\n        return columnWidth;\n      },\n      innerElementType: GridInnerContainer,\n      outerElementType: GridOuterContainer,\n      overscanRowCount: 2,\n      onItemsRendered: function (_a) {\n        var visibleRowStartIndex = _a.visibleRowStartIndex,\n            visibleRowStopIndex = _a.visibleRowStopIndex,\n            overscanRowStopIndex = _a.overscanRowStopIndex,\n            overscanRowStartIndex = _a.overscanRowStartIndex;\n        onItemsRendered({\n          overscanStartIndex: overscanRowStartIndex,\n          overscanStopIndex: overscanRowStopIndex,\n          visibleStartIndex: visibleRowStartIndex,\n          visibleStopIndex: visibleRowStopIndex\n        });\n      },\n      ref: mergeRefs(gridRef, infiniteLoaderRef)\n    }, function (_a) {\n      var _b;\n\n      var columnIndex = _a.columnIndex,\n          rowIndex = _a.rowIndex,\n          style = _a.style;\n      var cellData = rows[rowIndex][columnIndex];\n      if (!cellData) return null;\n      if ('title' in cellData) return React.createElement(GroupCell, {\n        style: style\n      }, React.createElement(StyledGroupTitle, {\n        weight: \"bold\",\n        color: \"gray15\"\n      }, cellData.title));\n\n      if ('isFetching' in cellData) {\n        return React.createElement(GroupCell, {\n          style: style\n        }, React.createElement(StyledSpinnerWrapper, null, React.createElement(Spinner, null)));\n      }\n\n      var thumbnailNavigationIndex = getThumbnailNavigationIndex(rowIndex, columnIndex);\n      var isNavigationTarget = navigation.index === thumbnailNavigationIndex;\n      var isFocused = isGridFocused && isNavigationTarget;\n      var isSelected = isThumbnailSelected(cellData);\n      var isDisabled = disableSelection.value && !isSelected;\n      return React.createElement(ThumbnailCell, {\n        style: style\n      }, React.createElement(Tooltip, {\n        key: cellData.id,\n        trigger: isDisabled ? 'hover' : 'none',\n        overlay: disableSelection.tooltip,\n        showKeys: []\n      }, React.createElement(StyledThumbnail, {\n        \"data-thumbnail\": true,\n        \"data-qa\": (_b = qa === null || qa === void 0 ? void 0 : qa.thumbnail) === null || _b === void 0 ? void 0 : _b.call(qa, cellData.id),\n        focused: isFocused,\n        selected: isSelected,\n        disabled: isDisabled,\n        caption: cellData.name,\n        src: cellData.src,\n        label: cellData.label,\n        hasCaptionPlaceholder: true,\n        onClick: function (_a) {\n          var _b;\n\n          var target = _a.target;\n          var isCaptionTooltipClick = (_b = target.dataset) === null || _b === void 0 ? void 0 : _b.captionTooltip;\n          if (isCaptionTooltipClick) return;\n          navigation.setIndex(thumbnailNavigationIndex);\n          toggle(cellData);\n          gridContainer === null || gridContainer === void 0 ? void 0 : gridContainer.focus();\n        }\n      })));\n    });\n  }));\n});","map":{"version":3,"sources":["../../../../src/components/ThumbnailGrid/ThumbnailGrid.tsx"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React from 'react';\nimport { VariableSizeGrid } from 'react-window';\nimport InfiniteLoader from 'react-window-infinite-loader';\nimport { mergeRefs } from '../../effects/mergeRefs';\nimport { useI18nContext } from '../../state/I18n';\nimport { Spinner } from '../Spinner';\nimport { Tooltip } from '../Tooltip';\nimport { useGridNavigation } from './ThumbnailGrid.hooks';\nimport { StyledGroupCell, StyledGroupTitle, StyledSpinnerWrapper, StyledThumbnail, StyledThumbnailGrid, } from './ThumbnailGrid.styles';\nfunction noop() { }\nvar asyncNoop = function () { return Promise.resolve(); };\nvar titleHeight = 20;\nvar titleTopPadding = 24;\nvar thumbnailHeight = 138;\nvar thumbnailWidh = 104;\nvar columnsCount = 5;\nvar gutterSize = 12;\nvar columnWidth = thumbnailWidh + gutterSize;\nvar gridLeftPadding = 24;\nvar defaultGridWidth = gridLeftPadding + columnWidth * columnsCount;\nvar defaultGridHeight = (thumbnailHeight + gutterSize) * 3;\nvar getGridRows = function (_a) {\n    var items = _a.items, groups = _a.groups, title = _a.title, _b = _a.isFetching, isFetching = _b === void 0 ? false : _b, groupTitleFallback = _a.groupTitleFallback;\n    var splitToRows = function (items) {\n        return items.reduce(function (acc, item, index) {\n            var rowIndex = Math.floor(index / columnsCount);\n            var row = (acc[rowIndex] = acc[rowIndex] || []);\n            row.push(item);\n            return acc;\n        }, []);\n    };\n    var splitToGroupedRows = function (items, groups) {\n        var groupedRows = [];\n        var groupedThumbnails = items.reduce(function (acc, item) {\n            var _a;\n            var groupId = (_a = item.groupId) !== null && _a !== void 0 ? _a : String(item.groupId);\n            var group = acc.get(groupId);\n            if (group) {\n                group.push(item);\n            }\n            else {\n                acc.set(groupId, [item]);\n            }\n            return acc;\n        }, new Map(groups.map(function (_a) {\n            var id = _a.id;\n            return [id, []];\n        })));\n        groupedThumbnails.forEach(function (group, groupId) {\n            var _a;\n            var groupRows = splitToRows(group);\n            if (groupRows.length) {\n                var groupTitleRow = [\n                    {\n                        title: ((_a = groups.find(function (_a) {\n                            var id = _a.id;\n                            return groupId === id;\n                        })) === null || _a === void 0 ? void 0 : _a.title) ||\n                            groupTitleFallback,\n                    },\n                ];\n                groupRows.unshift(groupTitleRow);\n            }\n            groupedRows = __spreadArray(__spreadArray([], groupedRows, true), groupRows, true);\n        });\n        return groupedRows;\n    };\n    var setGridTitle = function (rows) {\n        if (title) {\n            rows.unshift([{ title: title }]);\n        }\n        return rows;\n    };\n    var setLoadingIndicator = function (rows) {\n        if (isFetching) {\n            rows.push([{ isFetching: isFetching }]);\n        }\n        return rows;\n    };\n    var gridRows = groups\n        ? splitToGroupedRows(items, groups)\n        : splitToRows(items);\n    var gridRowsWithOptionalTitle = setGridTitle(gridRows);\n    var gridRowsWithOptionalLoadingIndicator = setLoadingIndicator(gridRowsWithOptionalTitle);\n    return gridRowsWithOptionalLoadingIndicator;\n};\nvar GroupCell = function (_a) {\n    var children = _a.children, style = _a.style, props = __rest(_a, [\"children\", \"style\"]);\n    return (React.createElement(StyledGroupCell, __assign({ style: __assign(__assign({}, style), { left: (style === null || style === void 0 ? void 0 : style.left) + gridLeftPadding, top: (style === null || style === void 0 ? void 0 : style.top) + gutterSize, width: columnWidth * columnsCount }) }, props), children));\n};\nvar ThumbnailCell = function (_a) {\n    var children = _a.children, className = _a.className, style = _a.style, props = __rest(_a, [\"children\", \"className\", \"style\"]);\n    return (React.createElement(\"div\", __assign({ style: __assign(__assign({}, style), { left: (style === null || style === void 0 ? void 0 : style.left) + gridLeftPadding, top: (style === null || style === void 0 ? void 0 : style.top) + gutterSize }) }, props), children));\n};\n// See https://github.com/bvaughn/react-window/issues/130\nvar GridOuterContainer = React.forwardRef(function (props, ref) { return React.createElement(\"div\", __assign({ ref: ref, tabIndex: -1 }, props)); });\nvar GridInnerContainer = React.forwardRef(function (_a, ref) {\n    var style = _a.style, props = __rest(_a, [\"style\"]);\n    return (React.createElement(\"div\", __assign({ ref: ref, style: __assign(__assign({}, style), { paddingLeft: gridLeftPadding, width: (style === null || style === void 0 ? void 0 : style.width) + gridLeftPadding }) }, props)));\n});\nexport var ThumbnailGrid = React.forwardRef(function (_a, forwardRef) {\n    var items = _a.items, selected = _a.selected, groups = _a.groups, _b = _a.title, title = _b === void 0 ? '' : _b, _c = _a.gridWidth, gridWidth = _c === void 0 ? defaultGridWidth : _c, _d = _a.gridHeight, gridHeight = _d === void 0 ? defaultGridHeight : _d, _e = _a.onSelect, onSelect = _e === void 0 ? noop : _e, _f = _a.onDeselect, onDeselect = _f === void 0 ? noop : _f, _g = _a.disableSelection, disableSelection = _g === void 0 ? {\n        value: false,\n        tooltip: '',\n    } : _g, _h = _a.isFetching, isFetching = _h === void 0 ? false : _h, _j = _a.loadMoreItems, loadMoreItems = _j === void 0 ? asyncNoop : _j, qa = _a.qa, props = __rest(_a, [\"items\", \"selected\", \"groups\", \"title\", \"gridWidth\", \"gridHeight\", \"onSelect\", \"onDeselect\", \"disableSelection\", \"isFetching\", \"loadMoreItems\", \"qa\"]);\n    var gridContainerRef = React.useRef(null);\n    var I18n = useI18nContext();\n    var gridContainer = gridContainerRef.current;\n    var gridRef = React.useRef(null);\n    var gridInstance = gridRef.current;\n    var rows = React.useMemo(function () {\n        return getGridRows({\n            items: items,\n            groups: groups,\n            isFetching: isFetching,\n            title: title,\n            groupTitleFallback: I18n.t('core.fileExplorer.ungroupedThumbnailGridGroup'),\n        });\n    }, [items, groups, title, isFetching]);\n    var isTitleRow = function (rowCells) {\n        return 'title' in rowCells[0];\n    };\n    var isFetchingRow = function (rowCells) {\n        return 'isFetching' in rowCells[0];\n    };\n    var isNonNavigableRow = function (rowCells) {\n        return isTitleRow(rowCells) || isFetchingRow(rowCells);\n    };\n    var rowHeights = React.useMemo(function () {\n        return rows.map(function (rowCells, index) {\n            var titleRow = isTitleRow(rowCells);\n            var titleRowIsNotFirstGridRow = titleRow && index > 0;\n            var rowPadding = (titleRowIsNotFirstGridRow ? titleTopPadding : 0) + gutterSize;\n            if (titleRow) {\n                return titleHeight + rowPadding;\n            }\n            else {\n                return thumbnailHeight + rowPadding;\n            }\n        });\n    }, [rows]);\n    var nonNavigableRowIndices = React.useMemo(function () {\n        return rows\n            .map(function (rowCells, index) { return ({\n            index: index,\n            isNonNavigableRow: isNonNavigableRow(rowCells),\n        }); })\n            .filter(function (_a) {\n            var isNonNavigableRow = _a.isNonNavigableRow;\n            return isNonNavigableRow;\n        })\n            .map(function (_a) {\n            var index = _a.index;\n            return index;\n        });\n    }, [rows]);\n    var navigationIndicesRows = React.useMemo(function () {\n        return rows\n            .filter(function (rowCells) { return !isNonNavigableRow(rowCells); })\n            .map(function (rowCells) {\n            return rowCells.map(function (cell) {\n                return items.findIndex(function (item) { return item.id === cell.id; });\n            });\n        });\n    }, [rows, items]);\n    var getNumberOfNonNavigableRowsBefore = React.useCallback(function (rowIndex) {\n        return nonNavigableRowIndices.filter(function (index) { return rowIndex > index; }).length;\n    }, [nonNavigableRowIndices]);\n    var getThumbnailNavigationIndex = React.useCallback(function (rowIndex, cellIndex) {\n        return navigationIndicesRows[rowIndex - getNumberOfNonNavigableRowsBefore(rowIndex)][cellIndex];\n    }, [navigationIndicesRows, getNumberOfNonNavigableRowsBefore]);\n    var thumbnailNavigationIndexToRowIndexMap = React.useMemo(function () {\n        return rows.reduce(function (acc, rowCells, rowIndex) {\n            if (isNonNavigableRow(rowCells))\n                return acc;\n            var mappedRowCells = rowCells.reduce(function (acc, _, cellIndex) {\n                var navIndex = String(getThumbnailNavigationIndex(rowIndex, cellIndex));\n                acc[navIndex] = rowIndex;\n                return acc;\n            }, {});\n            return __assign(__assign({}, acc), mappedRowCells);\n        }, {});\n    }, [rows, getThumbnailNavigationIndex]);\n    var _k = React.useState(false), isGridFocused = _k[0], setIsGridFocused = _k[1];\n    var navigation = useGridNavigation({\n        indicesRows: navigationIndicesRows,\n    });\n    var isThumbnailSelected = function (thumbnail) {\n        return selected.map(function (_a) {\n            var id = _a.id;\n            return id;\n        }).includes(thumbnail.id);\n    };\n    var toggle = function (thumbnail) {\n        if (isThumbnailSelected(thumbnail)) {\n            onDeselect(thumbnail);\n        }\n        else if (!disableSelection.value) {\n            onSelect(thumbnail);\n        }\n    };\n    var onMouseDown = function (e) {\n        e.preventDefault();\n        var focusedEl = document.activeElement;\n        if (focusedEl && focusedEl !== gridContainer) {\n            focusedEl.blur();\n        }\n    };\n    var updateNavigationPosition = function (e) {\n        switch (e.key) {\n            case 'ArrowDown':\n            case 'Down':\n                e.preventDefault();\n                return navigation.down(e);\n            case 'ArrowUp':\n            case 'Up':\n                e.preventDefault();\n                return navigation.up(e);\n            case 'ArrowLeft':\n            case 'Left':\n                e.preventDefault();\n                return navigation.left(e);\n            case 'ArrowRight':\n            case 'Right':\n                e.preventDefault();\n                return navigation.right(e);\n            default:\n                return -1;\n        }\n    };\n    var onKeyDown = function (e) {\n        if (!isGridFocused)\n            return;\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            toggle(items[navigation.index]);\n        }\n        else {\n            var newPosition = updateNavigationPosition(e);\n            if (newPosition !== -1) {\n                gridInstance === null || gridInstance === void 0 ? void 0 : gridInstance.scrollToItem({\n                    rowIndex: thumbnailNavigationIndexToRowIndexMap[newPosition],\n                });\n            }\n        }\n    };\n    React.useEffect(function () {\n        navigation.setIndicesRows(navigationIndicesRows);\n    }, [navigationIndicesRows, navigation]);\n    React.useEffect(function () {\n        // VariableSizeGrid caches offsets and measurements for each row index for performance purposes.\n        // Method below clears cached data and triggers recalucation when a new value of search filter recomposites grid structure.\n        gridInstance === null || gridInstance === void 0 ? void 0 : gridInstance.resetAfterRowIndex(0);\n    }, [items, gridInstance]);\n    return (React.createElement(StyledThumbnailGrid, __assign({}, props, { ref: mergeRefs(forwardRef, gridContainerRef), \"data-qa\": qa === null || qa === void 0 ? void 0 : qa.grid, tabIndex: 0, onBlur: function () { return setIsGridFocused(false); }, onFocus: function () { return setIsGridFocused(true); }, onKeyDown: onKeyDown, onMouseDown: onMouseDown }),\n        React.createElement(InfiniteLoader, { loadMoreItems: isFetching ? asyncNoop : loadMoreItems, itemCount: rows.length, isItemLoaded: function (index) { return index < rows.length - 1; }, threshold: 0 }, function (_a) {\n            var onItemsRendered = _a.onItemsRendered, infiniteLoaderRef = _a.ref;\n            return (React.createElement(VariableSizeGrid, { width: gridWidth, height: gridHeight, rowCount: rows.length, rowHeight: function (index) { return rowHeights[index]; }, columnCount: columnsCount, columnWidth: function () { return columnWidth; }, innerElementType: GridInnerContainer, outerElementType: GridOuterContainer, overscanRowCount: 2, onItemsRendered: function (_a) {\n                    var visibleRowStartIndex = _a.visibleRowStartIndex, visibleRowStopIndex = _a.visibleRowStopIndex, overscanRowStopIndex = _a.overscanRowStopIndex, overscanRowStartIndex = _a.overscanRowStartIndex;\n                    onItemsRendered({\n                        overscanStartIndex: overscanRowStartIndex,\n                        overscanStopIndex: overscanRowStopIndex,\n                        visibleStartIndex: visibleRowStartIndex,\n                        visibleStopIndex: visibleRowStopIndex,\n                    });\n                }, ref: mergeRefs(gridRef, infiniteLoaderRef) }, function (_a) {\n                var _b;\n                var columnIndex = _a.columnIndex, rowIndex = _a.rowIndex, style = _a.style;\n                var cellData = rows[rowIndex][columnIndex];\n                if (!cellData)\n                    return null;\n                if ('title' in cellData)\n                    return (React.createElement(GroupCell, { style: style },\n                        React.createElement(StyledGroupTitle, { weight: \"bold\", color: \"gray15\" }, cellData.title)));\n                if ('isFetching' in cellData) {\n                    return (React.createElement(GroupCell, { style: style },\n                        React.createElement(StyledSpinnerWrapper, null,\n                            React.createElement(Spinner, null))));\n                }\n                var thumbnailNavigationIndex = getThumbnailNavigationIndex(rowIndex, columnIndex);\n                var isNavigationTarget = navigation.index === thumbnailNavigationIndex;\n                var isFocused = isGridFocused && isNavigationTarget;\n                var isSelected = isThumbnailSelected(cellData);\n                var isDisabled = disableSelection.value && !isSelected;\n                return (React.createElement(ThumbnailCell, { style: style },\n                    React.createElement(Tooltip, { key: cellData.id, trigger: isDisabled ? 'hover' : 'none', overlay: disableSelection.tooltip, showKeys: [] },\n                        React.createElement(StyledThumbnail, { \"data-thumbnail\": true, \"data-qa\": (_b = qa === null || qa === void 0 ? void 0 : qa.thumbnail) === null || _b === void 0 ? void 0 : _b.call(qa, cellData.id), focused: isFocused, selected: isSelected, disabled: isDisabled, caption: cellData.name, src: cellData.src, label: cellData.label, hasCaptionPlaceholder: true, onClick: function (_a) {\n                                var _b;\n                                var target = _a.target;\n                                var isCaptionTooltipClick = (_b = target\n                                    .dataset) === null || _b === void 0 ? void 0 : _b.captionTooltip;\n                                if (isCaptionTooltipClick)\n                                    return;\n                                navigation.setIndex(thumbnailNavigationIndex);\n                                toggle(cellData);\n                                gridContainer === null || gridContainer === void 0 ? void 0 : gridContainer.focus();\n                            } }))));\n            }));\n        })));\n});\n"]},"metadata":{},"sourceType":"module"}