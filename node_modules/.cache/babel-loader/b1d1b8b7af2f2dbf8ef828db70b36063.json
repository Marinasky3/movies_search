{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { StyledContainer, StyledSlider, StyledIncrementOverlay, StyledIncrementContainer, StyledLabel } from './Slider.styles';\nexport var getIncrements = function (_a) {\n  var min = _a.min,\n      max = _a.max,\n      step = _a.step;\n\n  if (!step) {\n    return 0;\n  }\n\n  return (max - min) / step;\n};\nexport var getPercentage = function (_a) {\n  var max = _a.max,\n      min = _a.min,\n      value = _a.value;\n  return (value - min) / (max - min) * 100;\n};\nexport var getLabel = function (_a) {\n  var max = _a.max,\n      min = _a.min,\n      step = _a.step,\n      index = _a.index;\n\n  if (min === 0) {\n    return index * step;\n  } else if (min >= 0) {\n    return index * step + min;\n  } else if (min <= 0) {\n    return (index - getIncrements({\n      max: max,\n      min: min,\n      step: step\n    })) * step + max;\n  } else {\n    return 0;\n  }\n};\nexport var getDefaultValue = function (_a) {\n  var min = _a.min,\n      max = _a.max,\n      step = _a.step; // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range#value\n\n  var defaultVal = max < min ? min : min + (max - min) / 2;\n  return step ? Math.round(defaultVal / step) * step : defaultVal;\n};\nexport var Slider = React.forwardRef(function Slider(_a, ref) {\n  var className = _a.className,\n      disabled = _a.disabled,\n      onChange = _a.onChange,\n      _b = _a.max,\n      max = _b === void 0 ? 100 : _b,\n      _c = _a.min,\n      min = _c === void 0 ? 0 : _c,\n      showLabel = _a.showLabel,\n      step = _a.step,\n      style = _a.style,\n      value_ = _a.value,\n      props = __rest(_a, [\"className\", \"disabled\", \"onChange\", \"max\", \"min\", \"showLabel\", \"step\", \"style\", \"value\"]);\n\n  var _d = React.useState(false),\n      isDragging = _d[0],\n      setIsDragging = _d[1];\n\n  var value = value_ !== null && value_ !== void 0 ? value_ : getDefaultValue({\n    max: max,\n    min: min,\n    step: step\n  });\n  var increments = getIncrements({\n    max: max,\n    min: min,\n    step: step\n  }); // check if the \"step\" value does not cleanly\n  //  divide into max - min\n\n  if (increments % 1 !== 0) {\n    console.warn('@procore/core-react: SLIDER COMPONENT WARNING: Your step value does not cleanly divide into max - min. This will cause your Slider to display incorrectly.');\n  }\n\n  return React.createElement(StyledContainer, {\n    className: className,\n    style: style,\n    showLabel: showLabel\n  }, React.createElement(StyledSlider, __assign({}, props, {\n    disabled: disabled,\n    onChange: onChange,\n    max: max,\n    min: min,\n    \"$percent\": getPercentage({\n      max: max,\n      min: min,\n      value: value\n    }),\n    ref: ref,\n    step: step,\n    type: \"range\",\n    value: value,\n    onMouseDown: function () {\n      return setIsDragging(true);\n    },\n    onMouseUp: function () {\n      return setIsDragging(false);\n    },\n    isDragging: isDragging\n  })), step && React.createElement(StyledIncrementContainer, null, Array(Math.floor(increments) + 1).fill(null).map(function (_, index) {\n    return React.createElement(StyledIncrementOverlay, {\n      key: \"core-slider-increment-overlay-\".concat(index, \"-\").concat(min, \"-\").concat(max, \"-\").concat(step)\n    }, showLabel && React.createElement(StyledLabel, {\n      intent: \"small\"\n    }, getLabel({\n      min: min,\n      max: max,\n      step: step,\n      index: index\n    })));\n  })));\n});","map":{"version":3,"sources":["../../../../src/components/Slider/Slider.tsx"],"names":[],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { StyledContainer, StyledSlider, StyledIncrementOverlay, StyledIncrementContainer, StyledLabel, } from './Slider.styles';\nexport var getIncrements = function (_a) {\n    var min = _a.min, max = _a.max, step = _a.step;\n    if (!step) {\n        return 0;\n    }\n    return (max - min) / step;\n};\nexport var getPercentage = function (_a) {\n    var max = _a.max, min = _a.min, value = _a.value;\n    return ((value - min) / (max - min)) * 100;\n};\nexport var getLabel = function (_a) {\n    var max = _a.max, min = _a.min, step = _a.step, index = _a.index;\n    if (min === 0) {\n        return index * step;\n    }\n    else if (min >= 0) {\n        return index * step + min;\n    }\n    else if (min <= 0) {\n        return (index - getIncrements({ max: max, min: min, step: step })) * step + max;\n    }\n    else {\n        return 0;\n    }\n};\nexport var getDefaultValue = function (_a) {\n    var min = _a.min, max = _a.max, step = _a.step;\n    // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range#value\n    var defaultVal = max < min ? min : min + (max - min) / 2;\n    return step ? Math.round(defaultVal / step) * step : defaultVal;\n};\nexport var Slider = React.forwardRef(function Slider(_a, ref) {\n    var className = _a.className, disabled = _a.disabled, onChange = _a.onChange, _b = _a.max, max = _b === void 0 ? 100 : _b, _c = _a.min, min = _c === void 0 ? 0 : _c, showLabel = _a.showLabel, step = _a.step, style = _a.style, value_ = _a.value, props = __rest(_a, [\"className\", \"disabled\", \"onChange\", \"max\", \"min\", \"showLabel\", \"step\", \"style\", \"value\"]);\n    var _d = React.useState(false), isDragging = _d[0], setIsDragging = _d[1];\n    var value = value_ !== null && value_ !== void 0 ? value_ : getDefaultValue({ max: max, min: min, step: step });\n    var increments = getIncrements({ max: max, min: min, step: step });\n    // check if the \"step\" value does not cleanly\n    //  divide into max - min\n    if (increments % 1 !== 0) {\n        console.warn('@procore/core-react: SLIDER COMPONENT WARNING: Your step value does not cleanly divide into max - min. This will cause your Slider to display incorrectly.');\n    }\n    return (React.createElement(StyledContainer, { className: className, style: style, showLabel: showLabel },\n        React.createElement(StyledSlider, __assign({}, props, { disabled: disabled, onChange: onChange, max: max, min: min, \"$percent\": getPercentage({ max: max, min: min, value: value }), ref: ref, step: step, type: \"range\", value: value, onMouseDown: function () { return setIsDragging(true); }, onMouseUp: function () { return setIsDragging(false); }, isDragging: isDragging })),\n        step && (React.createElement(StyledIncrementContainer, null, Array(Math.floor(increments) + 1)\n            .fill(null)\n            .map(function (_, index) {\n            return (React.createElement(StyledIncrementOverlay, { key: \"core-slider-increment-overlay-\".concat(index, \"-\").concat(min, \"-\").concat(max, \"-\").concat(step) }, showLabel && (React.createElement(StyledLabel, { intent: \"small\" }, getLabel({\n                min: min,\n                max: max,\n                step: step,\n                index: index,\n            })))));\n        })))));\n});\n"]},"metadata":{},"sourceType":"module"}