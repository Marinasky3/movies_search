{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport styles from '@procore/core-css/src/components/_typography.scss';\nimport React from 'react';\nimport { useDeprecation } from '../../effects/Deprecation';\n\nvar classnames = require('classnames/bind');\n\nvar cx = classnames.bind(styles);\nvar availableFonts = Object.keys(styles);\n/**\n * @deprecated Please use H1, H2, H3, P, UL, or Typography\n */\n\nexport var Font = React.forwardRef(function Font(_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      _b = _a.size,\n      size = _b === void 0 ? 'sm' : _b,\n      _c = _a.weight,\n      weight = _c === void 0 ? 'regular' : _c,\n      _d = _a.fontStyle,\n      fontStyle = _d === void 0 ? '' : _d,\n      _e = _a.variant,\n      variant = _e === void 0 ? 'primary' : _e,\n      props = __rest(_a, [\"children\", \"className\", \"size\", \"weight\", \"fontStyle\", \"variant\"]);\n\n  useDeprecation({\n    oldThing: 'Font',\n    newThing: 'H1, H2, H3, P, UL, or Typography'\n  });\n  var style = fontStyle ? \"-\".concat(fontStyle) : '';\n  var fontClassName = \"\".concat(size, \"-\").concat(weight).concat(style, \"--\").concat(variant);\n\n  if (availableFonts.length && availableFonts.indexOf(fontClassName) < 0) {\n    console.error(\"Warning: Font component failed to load class; \".concat(fontClassName, \" does not exist.\"));\n  }\n\n  return React.createElement(\"span\", __assign({\n    ref: ref,\n    className: cx(fontClassName, className)\n  }, props), children);\n});\nFont.displayName = 'Font';\nexport default Font;","map":{"version":3,"sources":["../../../../src/components/Font/Font.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,MAAP,MAAmB,mDAAnB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,cAAT,QAA+B,2BAA/B;;AAGA,IAAM,UAAU,GAAG,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAM,EAAE,GAAG,UAAU,CAAC,IAAX,CAAgB,MAAhB,CAAX;AAEA,IAAM,cAAc,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAvB;AAEA;;AAEG;;AACH,OAAO,IAAM,IAAI,GAAG,KAAK,CAAC,UAAN,CAGlB,SAAS,IAAT,CACA,EADA,EAUA,GAVA,EAUG;AARD,MAAA,QAAQ,GAAA,EAAA,CAAA,QAAR;AAAA,MACA,SAAS,GAAA,EAAA,CAAA,SADT;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,IAFA;AAAA,MAEA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAFX;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,MAHA;AAAA,MAGA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAH,GAAY,EAHlB;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,SAJA;AAAA,MAIA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,EAJd;AAAA,MAKA,EAAA,GAAA,EAAA,CAAA,OALA;AAAA,MAKA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAH,GAAY,EALnB;AAAA,MAMG,KAAK,GAAA,MAAA,CAAA,EAAA,EAPV,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,SAAA,CAOU,CANR;;AAUF,EAAA,cAAc,CAAC;AACb,IAAA,QAAQ,EAAE,MADG;AAEb,IAAA,QAAQ,EAAE;AAFG,GAAD,CAAd;AAKA,MAAM,KAAK,GAAG,SAAS,GAAG,IAAA,MAAA,CAAI,SAAJ,CAAH,GAAqB,EAA5C;AAEA,MAAM,aAAa,GAAG,GAAA,MAAA,CAAG,IAAH,EAAO,GAAP,EAAO,MAAP,CAAW,MAAX,EAAiB,MAAjB,CAAoB,KAApB,EAAyB,IAAzB,EAAyB,MAAzB,CAA8B,OAA9B,CAAtB;;AAEA,MAAI,cAAc,CAAC,MAAf,IAAyB,cAAc,CAAC,OAAf,CAAuB,aAAvB,IAAwC,CAArE,EAAwE;AACtE,IAAA,OAAO,CAAC,KAAR,CACE,iDAAA,MAAA,CAAiD,aAAjD,EAA8D,kBAA9D,CADF;AAGD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAM,IAAA,GAAG,EAAE,GAAX;AAAgB,IAAA,SAAS,EAAE,EAAE,CAAC,aAAD,EAAgB,SAAhB;AAA7B,GAAA,EAA6D,KAA7D,CAAA,EACG,QADH,CADF;AAKD,CAnCmB,CAAb;AAqCP,IAAI,CAAC,WAAL,GAAmB,MAAnB;AAEA,eAAe,IAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport styles from '@procore/core-css/src/components/_typography.scss';\nimport React from 'react';\nimport { useDeprecation } from '../../effects/Deprecation';\nvar classnames = require('classnames/bind');\nvar cx = classnames.bind(styles);\nvar availableFonts = Object.keys(styles);\n/**\n * @deprecated Please use H1, H2, H3, P, UL, or Typography\n */\nexport var Font = React.forwardRef(function Font(_a, ref) {\n    var children = _a.children, className = _a.className, _b = _a.size, size = _b === void 0 ? 'sm' : _b, _c = _a.weight, weight = _c === void 0 ? 'regular' : _c, _d = _a.fontStyle, fontStyle = _d === void 0 ? '' : _d, _e = _a.variant, variant = _e === void 0 ? 'primary' : _e, props = __rest(_a, [\"children\", \"className\", \"size\", \"weight\", \"fontStyle\", \"variant\"]);\n    useDeprecation({\n        oldThing: 'Font',\n        newThing: 'H1, H2, H3, P, UL, or Typography',\n    });\n    var style = fontStyle ? \"-\".concat(fontStyle) : '';\n    var fontClassName = \"\".concat(size, \"-\").concat(weight).concat(style, \"--\").concat(variant);\n    if (availableFonts.length && availableFonts.indexOf(fontClassName) < 0) {\n        console.error(\"Warning: Font component failed to load class; \".concat(fontClassName, \" does not exist.\"));\n    }\n    return (React.createElement(\"span\", __assign({ ref: ref, className: cx(fontClassName, className) }, props), children));\n});\nFont.displayName = 'Font';\nexport default Font;\n"]},"metadata":{},"sourceType":"module"}