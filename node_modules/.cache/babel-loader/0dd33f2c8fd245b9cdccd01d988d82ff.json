{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Check } from '@procore/core-icons/dist';\nimport React from 'react';\nimport { OverflowObserver } from '../../effects/OverflowObserver';\nimport { OptGroup, Option, Select } from '../Select';\nimport { Tooltip } from '../Tooltip';\nimport { PillSelectCheckedContainer, PillSelectLabel, PillSelectLabelWrapper, PillSelectOptionWrapper, PillSelectPill } from './PillSelect.styles';\nvar emptyArr = [];\n\nfunction defaultGetId(option) {\n  return option.id;\n}\n\nfunction defaultGetLabel(option) {\n  return option.label;\n}\n\nfunction defaultGetGroup(option) {\n  return option.groupId;\n}\n\nfunction defaultGetSuggested(option) {\n  return option.suggested;\n}\n\nexport function defaultGetColor(option) {\n  return option.color;\n}\nvar PillSelectOption = React.forwardRef(function PillSelectOption(_a, ref) {\n  var color = _a.color,\n      label = _a.label,\n      selected = _a.selected,\n      props = __rest(_a, [\"color\", \"label\", \"selected\"]);\n\n  return React.createElement(Option, __assign({\n    selected: selected\n  }, props, {\n    ref: ref\n  }), React.createElement(PillSelectOptionWrapper, null, React.createElement(PillSelectPill, {\n    color: color\n  }, label), selected && React.createElement(PillSelectCheckedContainer, null, React.createElement(Check, {\n    size: \"sm\"\n  }))));\n});\nvar PillSelectOptGroup = React.forwardRef(function PillSelectOptGroup(props, ref) {\n  return React.createElement(OptGroup, __assign({}, props, {\n    ref: ref\n  }));\n});\nexport var PillSelect = React.forwardRef(function PillSelect(_a, ref) {\n  var afterHide_ = _a.afterHide,\n      afterShow_ = _a.afterShow,\n      _b = _a.getColor,\n      getColor = _b === void 0 ? defaultGetColor : _b,\n      _c = _a.getGroup,\n      getGroup = _c === void 0 ? defaultGetGroup : _c,\n      _d = _a.getId,\n      getId = _d === void 0 ? defaultGetId : _d,\n      _e = _a.getLabel,\n      getLabel = _e === void 0 ? defaultGetLabel : _e,\n      _f = _a.getSuggested,\n      getSuggested = _f === void 0 ? defaultGetSuggested : _f,\n      _g = _a.groupGetId,\n      groupGetId = _g === void 0 ? defaultGetId : _g,\n      _h = _a.groupGetLabel,\n      groupGetLabel = _h === void 0 ? defaultGetLabel : _h,\n      optgroups = _a.optgroups,\n      _j = _a.options,\n      options = _j === void 0 ? emptyArr : _j,\n      value = _a.value,\n      props = __rest(_a, [\"afterHide\", \"afterShow\", \"getColor\", \"getGroup\", \"getId\", \"getLabel\", \"getSuggested\", \"groupGetId\", \"groupGetLabel\", \"optgroups\", \"options\", \"value\"]);\n\n  var _k = React.useMemo(function () {\n    if (!value) {\n      return {};\n    }\n\n    return {\n      color: getColor(value),\n      id: getId(value),\n      label: getLabel(value)\n    };\n  }, [getColor, getId, getLabel, value]),\n      color = _k.color,\n      id = _k.id,\n      label = _k.label;\n\n  var optionsByGroup = React.useMemo(function () {\n    return optgroups === null || optgroups === void 0 ? void 0 : optgroups.map(function (optgroup) {\n      return {\n        optgroup: optgroup,\n        options: options.filter(function (option) {\n          return getGroup(option) === groupGetId(optgroup);\n        })\n      };\n    }).filter(function (_a) {\n      var options = _a.options;\n      return options.length;\n    });\n  }, [options, optgroups, groupGetId, getGroup]);\n\n  var _l = React.useState(false),\n      isOpened = _l[0],\n      setIsOpened = _l[1];\n\n  var afterShow = React.useCallback(function () {\n    setIsOpened(true);\n    afterShow_ === null || afterShow_ === void 0 ? void 0 : afterShow_();\n  }, [afterShow_]);\n  var afterHide = React.useCallback(function () {\n    setIsOpened(false);\n    afterHide_ === null || afterHide_ === void 0 ? void 0 : afterHide_();\n  }, [afterHide_]);\n  return React.createElement(Select, __assign({\n    afterHide: afterHide,\n    afterShow: afterShow,\n    label: label ? React.createElement(OverflowObserver, null, function (_a) {\n      var isOverflowing = _a.isOverflowing,\n          ref = _a.ref;\n      var pill = React.createElement(PillSelectLabel, {\n        color: color,\n        ref: ref\n      }, label);\n      var showTooltip = isOverflowing && !isOpened;\n      return React.createElement(PillSelectLabelWrapper, {\n        disabled: props.disabled\n      }, showTooltip ? React.createElement(Tooltip, {\n        trigger: \"hover\",\n        overlay: label\n      }, pill) : pill);\n    }) : null\n  }, props, {\n    ref: ref\n  }), optionsByGroup ? optionsByGroup.map(function (_a) {\n    var optgroup = _a.optgroup,\n        options = _a.options;\n    return React.createElement(React.Fragment, {\n      key: groupGetId(optgroup)\n    }, React.createElement(PillSelectOptGroup, {\n      key: groupGetId(optgroup)\n    }, groupGetLabel(optgroup)), options.map(function (option) {\n      return React.createElement(PillSelectOption, {\n        key: getId(option),\n        color: getColor(option),\n        label: getLabel(option),\n        selected: getId(option) === id,\n        suggested: getSuggested(option),\n        value: option\n      });\n    }));\n  }) : React.createElement(React.Fragment, null, options.map(function (option) {\n    return React.createElement(PillSelectOption, {\n      key: getId(option),\n      color: getColor(option),\n      label: getLabel(option),\n      selected: getId(option) === id,\n      suggested: getSuggested(option),\n      value: option\n    });\n  })));\n});\nPillSelect.displayName = 'PillSelect';","map":{"version":3,"sources":["../../../../src/components/PillSelect/PillSelect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,KAAT,QAAsB,0BAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,gBAAT,QAAiC,gCAAjC;AAEA,SAAS,QAAT,EAAmB,MAAnB,EAA2B,MAA3B,QAAyC,WAAzC;AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,SACE,0BADF,EAEE,eAFF,EAGE,sBAHF,EAIE,uBAJF,EAKE,cALF,QAMO,qBANP;AAcA,IAAM,QAAQ,GAAe,EAA7B;;AAEA,SAAS,YAAT,CAAsB,MAAtB,EAAuD;AACrD,SAAO,MAAM,CAAC,EAAd;AACD;;AAED,SAAS,eAAT,CAAyB,MAAzB,EAA0D;AACxD,SAAO,MAAM,CAAC,KAAd;AACD;;AAED,SAAS,eAAT,CAAyB,MAAzB,EAA2C;AACzC,SAAO,MAAM,CAAC,OAAd;AACD;;AAED,SAAS,mBAAT,CAA6B,MAA7B,EAA+C;AAC7C,SAAO,MAAM,CAAC,SAAd;AACD;;AAED,OAAM,SAAU,eAAV,CAA0B,MAA1B,EAA4C;AAChD,SAAO,MAAM,CAAC,KAAd;AACD;AAED,IAAM,gBAAgB,GAAG,KAAK,CAAC,UAAN,CACvB,SAAS,gBAAT,CAA0B,EAA1B,EAAgE,GAAhE,EAAmE;AAAvC,MAAA,KAAK,GAAA,EAAA,CAAA,KAAL;AAAA,MAAO,KAAK,GAAA,EAAA,CAAA,KAAZ;AAAA,MAAc,QAAQ,GAAA,EAAA,CAAA,QAAtB;AAAA,MAA2B,KAAK,GAAA,MAAA,CAAA,EAAA,EAAlC,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,CAAkC,CAAhC;;AAC1B,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,QAAA,CAAA;AAAC,IAAA,QAAQ,EAAE;AAAX,GAAA,EAAyB,KAAzB,EAA8B;AAAE,IAAA,GAAG,EAAE;AAAP,GAA9B,CAAP,EACE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,IAAA,KAAK,EAAE;AAAR,GAAf,EAA+B,KAA/B,CADF,EAEG,QAAQ,IACP,KAAA,CAAA,aAAA,CAAC,0BAAD,EAA2B,IAA3B,EACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAC;AAAN,GAAN,CADF,CAHJ,CADF,CADF;AAYD,CAdsB,CAAzB;AAiBA,IAAM,kBAAkB,GAAG,KAAK,CAAC,UAAN,CACzB,SAAS,kBAAT,CAA4B,KAA5B,EAAmC,GAAnC,EAAsC;AACpC,SAAO,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,QAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,GAAG,EAAE;AAAP,GAAV,CAAT,CAAP;AACD,CAHwB,CAA3B;AAMA,OAAO,IAAM,UAAU,GAAG,KAAK,CAAC,UAAN,CAGxB,SAAS,UAAT,CACA,EADA,EAgBA,GAhBA,EAgBG;AAdD,MAAW,UAAU,GAAA,EAAA,CAAA,SAArB;AAAA,MACW,UAAU,GAAA,EAAA,CAAA,SADrB;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,QAFA;AAAA,MAEA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,eAAH,GAAkB,EAF1B;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,QAHA;AAAA,MAGA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,eAAH,GAAkB,EAH1B;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,KAJA;AAAA,MAIA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,YAAH,GAAe,EAJpB;AAAA,MAKA,EAAA,GAAA,EAAA,CAAA,QALA;AAAA,MAKA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,eAAH,GAAkB,EAL1B;AAAA,MAMA,EAAA,GAAA,EAAA,CAAA,YANA;AAAA,MAMA,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,mBAAH,GAAsB,EANlC;AAAA,MAOA,EAAA,GAAA,EAAA,CAAA,UAPA;AAAA,MAOA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,YAAH,GAAe,EAPzB;AAAA,MAQA,EAAA,GAAA,EAAA,CAAA,aARA;AAAA,MAQA,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,eAAH,GAAkB,EAR/B;AAAA,MASA,SAAS,GAAA,EAAA,CAAA,SATT;AAAA,MAUA,EAAA,GAAA,EAAA,CAAA,OAVA;AAAA,MAUA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,EAVlB;AAAA,MAWA,KAAK,GAAA,EAAA,CAAA,KAXL;AAAA,MAYG,KAAK,GAAA,MAAA,CAAA,EAAA,EAbV,CAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,UAAA,EAAA,cAAA,EAAA,YAAA,EAAA,eAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,CAaU,CAZR;;AAgBI,MAAA,EAAA,GAAuB,KAAK,CAAC,OAAN,CAAc,YAAA;AACzC,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AACD,WAAO;AACL,MAAA,KAAK,EAAE,QAAQ,CAAC,KAAD,CADV;AAEL,MAAA,EAAE,EAAE,KAAK,CAAC,KAAD,CAFJ;AAGL,MAAA,KAAK,EAAE,QAAQ,CAAC,KAAD;AAHV,KAAP;AAKD,GAT4B,EAS1B,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,EAA4B,KAA5B,CAT0B,CAAvB;AAAA,MAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,MAAS,EAAE,GAAA,EAAA,CAAA,EAAX;AAAA,MAAa,KAAK,GAAA,EAAA,CAAA,KAAlB;;AAWN,MAAM,cAAc,GAAG,KAAK,CAAC,OAAN,CACrB,YAAA;AACE,WAAA,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CACL,GADJ,CACQ,UAAC,QAAD,EAAS;AAAK,aAAC;AACnB,QAAA,QAAQ,EAAA,QADW;AAEnB,QAAA,OAAO,EAAE,OAAO,CAAC,MAAR,CACP,UAAC,MAAD,EAAO;AAAK,iBAAA,QAAQ,CAAC,MAAD,CAAR,KAAqB,UAAU,CAA/B,QAA+B,CAA/B;AAAyC,SAD9C;AAFU,OAAD;AAKlB,KANJ,EAOG,MAPH,CAOU,UAAC,EAAD,EAAY;UAAT,OAAO,GAAA,EAAA,CAAA,O;AAAO,aAAA,OAAO,CAAC,MAAR;AAAc,KAPzC,CAAA;AAO0C,GATvB,EAUrB,CAAC,OAAD,EAAU,SAAV,EAAqB,UAArB,EAAiC,QAAjC,CAVqB,CAAvB;;AAaM,MAAA,EAAA,GAA0B,KAAK,CAAC,QAAN,CAAe,KAAf,CAA1B;AAAA,MAAC,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAT;AAAA,MAAW,WAAW,GAAA,EAAA,CAAA,CAAA,CAAtB;;AAEN,MAAM,SAAS,GAAG,KAAK,CAAC,WAAN,CAAkB,YAAA;AAClC,IAAA,WAAW,CAAC,IAAD,CAAX;AACA,IAAA,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAA,UAAU,EAAV;AACD,GAHiB,EAGf,CAAC,UAAD,CAHe,CAAlB;AAKA,MAAM,SAAS,GAAG,KAAK,CAAC,WAAN,CAAkB,YAAA;AAClC,IAAA,WAAW,CAAC,KAAD,CAAX;AACA,IAAA,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAA,UAAU,EAAV;AACD,GAHiB,EAGf,CAAC,UAAD,CAHe,CAAlB;AAKA,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,QAAA,CAAA;AACL,IAAA,SAAS,EAAE,SADN;AAEL,IAAA,SAAS,EAAE,SAFN;AAGL,IAAA,KAAK,EACH,KAAK,GACH,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,IAAjB,EACG,UAAC,EAAD,EAAuB;UAApB,aAAa,GAAA,EAAA,CAAA,a;UAAE,GAAG,GAAA,EAAA,CAAA,G;AACpB,UAAM,IAAI,GACR,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,QAAA,KAAK,EAAE,KAAR;AAAe,QAAA,GAAG,EAAE;AAApB,OAAhB,EACG,KADH,CADF;AAMA,UAAM,WAAW,GAAG,aAAa,IAAI,CAAC,QAAtC;AAEA,aACE,KAAA,CAAA,aAAA,CAAC,sBAAD,EAAuB;AAAC,QAAA,QAAQ,EAAE,KAAK,CAAC;AAAjB,OAAvB,EACG,WAAW,GACV,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,QAAA,OAAO,EAAC,OAAT;AAAiB,QAAA,OAAO,EAAE;AAA1B,OAAR,EACG,IADH,CADU,GAKV,IANJ,CADF;AAWD,KArBH,CADG,GAwBD;AA5BD,GAAA,EA8BD,KA9BC,EA8BI;AACT,IAAA,GAAG,EAAE;AADI,GA9BJ,CAAP,EAiCG,cAAc,GACb,cAAc,CAAC,GAAf,CAAmB,UAAC,EAAD,EAAsB;QAAnB,QAAQ,GAAA,EAAA,CAAA,Q;QAAE,OAAO,GAAA,EAAA,CAAA,O;AAAO,WAC5C,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe;AAAC,MAAA,GAAG,EAAE,UAAU,CAAC,QAAD;AAAhB,KAAf,EACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AAAC,MAAA,GAAG,EAAE,UAAU,CAAC,QAAD;AAAhB,KAAnB,EACG,aAAa,CAAC,QAAD,CADhB,CADF,EAIG,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAAO;AAAK,aACvB,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AACf,QAAA,GAAG,EAAE,KAAK,CAAC,MAAD,CADK;AAEf,QAAA,KAAK,EAAE,QAAQ,CAAC,MAAD,CAFA;AAGf,QAAA,KAAK,EAAE,QAAQ,CAAC,MAAD,CAHA;AAIf,QAAA,QAAQ,EAAE,KAAK,CAAC,MAAD,CAAL,KAAkB,EAJb;AAKf,QAAA,SAAS,EAAE,YAAY,CAAC,MAAD,CALR;AAMf,QAAA,KAAK,EAPgB;AACN,OAAjB,CADuB;AASxB,KATA,CAJH,CAD4C;AAgB7C,GAhBD,CADa,GAmBb,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAAO;AAAK,WACvB,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AACf,MAAA,GAAG,EAAE,KAAK,CAAC,MAAD,CADK;AAEf,MAAA,KAAK,EAAE,QAAQ,CAAC,MAAD,CAFA;AAGf,MAAA,KAAK,EAAE,QAAQ,CAAC,MAAD,CAHA;AAIf,MAAA,QAAQ,EAAE,KAAK,CAAC,MAAD,CAAL,KAAkB,EAJb;AAKf,MAAA,SAAS,EAAE,YAAY,CAAC,MAAD,CALR;AAMf,MAAA,KAAK,EAPgB;AACN,KAAjB,CADuB;AASxB,GATA,CADH,CApDJ,CADF;AAoED,CA7HyB,CAAnB;AA+HP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Check } from '@procore/core-icons/dist';\nimport React from 'react';\nimport { OverflowObserver } from '../../effects/OverflowObserver';\nimport { OptGroup, Option, Select } from '../Select';\nimport { Tooltip } from '../Tooltip';\nimport { PillSelectCheckedContainer, PillSelectLabel, PillSelectLabelWrapper, PillSelectOptionWrapper, PillSelectPill, } from './PillSelect.styles';\nvar emptyArr = [];\nfunction defaultGetId(option) {\n    return option.id;\n}\nfunction defaultGetLabel(option) {\n    return option.label;\n}\nfunction defaultGetGroup(option) {\n    return option.groupId;\n}\nfunction defaultGetSuggested(option) {\n    return option.suggested;\n}\nexport function defaultGetColor(option) {\n    return option.color;\n}\nvar PillSelectOption = React.forwardRef(function PillSelectOption(_a, ref) {\n    var color = _a.color, label = _a.label, selected = _a.selected, props = __rest(_a, [\"color\", \"label\", \"selected\"]);\n    return (React.createElement(Option, __assign({ selected: selected }, props, { ref: ref }),\n        React.createElement(PillSelectOptionWrapper, null,\n            React.createElement(PillSelectPill, { color: color }, label),\n            selected && (React.createElement(PillSelectCheckedContainer, null,\n                React.createElement(Check, { size: \"sm\" }))))));\n});\nvar PillSelectOptGroup = React.forwardRef(function PillSelectOptGroup(props, ref) {\n    return React.createElement(OptGroup, __assign({}, props, { ref: ref }));\n});\nexport var PillSelect = React.forwardRef(function PillSelect(_a, ref) {\n    var afterHide_ = _a.afterHide, afterShow_ = _a.afterShow, _b = _a.getColor, getColor = _b === void 0 ? defaultGetColor : _b, _c = _a.getGroup, getGroup = _c === void 0 ? defaultGetGroup : _c, _d = _a.getId, getId = _d === void 0 ? defaultGetId : _d, _e = _a.getLabel, getLabel = _e === void 0 ? defaultGetLabel : _e, _f = _a.getSuggested, getSuggested = _f === void 0 ? defaultGetSuggested : _f, _g = _a.groupGetId, groupGetId = _g === void 0 ? defaultGetId : _g, _h = _a.groupGetLabel, groupGetLabel = _h === void 0 ? defaultGetLabel : _h, optgroups = _a.optgroups, _j = _a.options, options = _j === void 0 ? emptyArr : _j, value = _a.value, props = __rest(_a, [\"afterHide\", \"afterShow\", \"getColor\", \"getGroup\", \"getId\", \"getLabel\", \"getSuggested\", \"groupGetId\", \"groupGetLabel\", \"optgroups\", \"options\", \"value\"]);\n    var _k = React.useMemo(function () {\n        if (!value) {\n            return {};\n        }\n        return {\n            color: getColor(value),\n            id: getId(value),\n            label: getLabel(value),\n        };\n    }, [getColor, getId, getLabel, value]), color = _k.color, id = _k.id, label = _k.label;\n    var optionsByGroup = React.useMemo(function () {\n        return optgroups === null || optgroups === void 0 ? void 0 : optgroups.map(function (optgroup) { return ({\n            optgroup: optgroup,\n            options: options.filter(function (option) { return getGroup(option) === groupGetId(optgroup); }),\n        }); }).filter(function (_a) {\n            var options = _a.options;\n            return options.length;\n        });\n    }, [options, optgroups, groupGetId, getGroup]);\n    var _l = React.useState(false), isOpened = _l[0], setIsOpened = _l[1];\n    var afterShow = React.useCallback(function () {\n        setIsOpened(true);\n        afterShow_ === null || afterShow_ === void 0 ? void 0 : afterShow_();\n    }, [afterShow_]);\n    var afterHide = React.useCallback(function () {\n        setIsOpened(false);\n        afterHide_ === null || afterHide_ === void 0 ? void 0 : afterHide_();\n    }, [afterHide_]);\n    return (React.createElement(Select, __assign({ afterHide: afterHide, afterShow: afterShow, label: label ? (React.createElement(OverflowObserver, null, function (_a) {\n            var isOverflowing = _a.isOverflowing, ref = _a.ref;\n            var pill = (React.createElement(PillSelectLabel, { color: color, ref: ref }, label));\n            var showTooltip = isOverflowing && !isOpened;\n            return (React.createElement(PillSelectLabelWrapper, { disabled: props.disabled }, showTooltip ? (React.createElement(Tooltip, { trigger: \"hover\", overlay: label }, pill)) : (pill)));\n        })) : null }, props, { ref: ref }), optionsByGroup ? (optionsByGroup.map(function (_a) {\n        var optgroup = _a.optgroup, options = _a.options;\n        return (React.createElement(React.Fragment, { key: groupGetId(optgroup) },\n            React.createElement(PillSelectOptGroup, { key: groupGetId(optgroup) }, groupGetLabel(optgroup)),\n            options.map(function (option) { return (React.createElement(PillSelectOption, { key: getId(option), color: getColor(option), label: getLabel(option), selected: getId(option) === id, suggested: getSuggested(option), value: option })); })));\n    })) : (React.createElement(React.Fragment, null, options.map(function (option) { return (React.createElement(PillSelectOption, { key: getId(option), color: getColor(option), label: getLabel(option), selected: getId(option) === id, suggested: getSuggested(option), value: option })); })))));\n});\nPillSelect.displayName = 'PillSelect';\n"]},"metadata":{},"sourceType":"module"}