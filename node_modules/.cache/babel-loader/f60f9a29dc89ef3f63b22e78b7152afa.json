{"ast":null,"code":"var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nimport styled from 'styled-components';\nimport { getArrowPlacement } from '../../styles/arrows';\nimport { borderRadius } from '../../styles/borderRadius';\nimport { colors } from '../../styles/colors';\nimport { getShadow } from '../../styles/shadows';\nimport { spacing } from '../../styles/spacing';\nimport { getTypographyIntent } from '../Typography/Typography.styles';\nexport var StyledTooltip = styled.span(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  \", \"\\n  \", \"\\n  \", \"\\n\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  color: \", \";\\n  max-width: 200px;\\n  padding: \", \"px \", \"px;\\n  position: relative;\\n\\n  // for IE11, use word-wrap property\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n\"], [\"\\n  \", \"\\n  \", \"\\n  \", \"\\n\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  color: \", \";\\n  max-width: 200px;\\n  padding: \", \"px \", \"px;\\n  position: relative;\\n\\n  // for IE11, use word-wrap property\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n\"])), function (_a) {\n  var $placement = _a.$placement;\n  return getArrowPlacement(6, 'gray15', $placement);\n}, getShadow(3, 'bottom'), getTypographyIntent('small'), colors.gray15, borderRadius.md, colors.white, spacing.sm, spacing.md);\nexport var StyledContainer = styled.span(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: inline-flex;\\n\"], [\"\\n  display: inline-flex;\\n\"])));\nvar templateObject_1, templateObject_2;","map":{"version":3,"sources":["../../../../src/components/Tooltip/Tooltip.styles.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAP,MAAmB,mBAAnB;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAS,YAAT,QAA6B,2BAA7B;AACA,SAAS,MAAT,QAAuB,qBAAvB;AACA,SAAS,SAAT,QAA0B,sBAA1B;AACA,SAAS,OAAT,QAAwB,sBAAxB;AAEA,SAAS,mBAAT,QAAoC,iCAApC;AAEA,OAAO,IAAM,aAAa,GAAG,MAAM,CAAC,IAAP,CAAW,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,0BAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,qCAAA,EAAA,KAAA,EAAA,+HAAA,CAAA,EAAA,CAA2B,MAA3B,EAC0B,MAD1B,EAEd,MAFc,EAGR,0BAHQ,EAKL,sBALK,EAMN,gBANM,EAOjB,qCAPiB,EASjB,KATiB,EASD,+HATC,CAAA,CAAA,CAAX,EACzB,UAAC,EAAD,EAAe;MAAZ,UAAU,GAAA,EAAA,CAAA,U;AAAO,SAAA,iBAAiB,CAAC,CAAD,EAAI,QAAJ,EAAc,UAAd,CAAjB;AAA0C,CADrC,EAEzB,SAAS,CAAC,CAAD,EAAI,QAAJ,CAFgB,EAGzB,mBAAmB,CAAC,OAAD,CAHM,EAKP,MAAM,CAAC,MALA,EAMV,YAAY,CAAC,EANH,EAOlB,MAAM,CAAC,KAPW,EAShB,OAAO,CAAC,EATQ,EASA,OAAO,CAAC,EATR,CAAtB;AAiBP,OAAO,IAAM,eAAe,GAAG,MAAM,CAAC,IAAP,CAAW,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,6BAAA,CAAA,EAAA,CAAA,6BAAA,CAAA,CAAA,CAAX,CAAxB","sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport styled from 'styled-components';\nimport { getArrowPlacement } from '../../styles/arrows';\nimport { borderRadius } from '../../styles/borderRadius';\nimport { colors } from '../../styles/colors';\nimport { getShadow } from '../../styles/shadows';\nimport { spacing } from '../../styles/spacing';\nimport { getTypographyIntent } from '../Typography/Typography.styles';\nexport var StyledTooltip = styled.span(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  \", \"\\n  \", \"\\n  \", \"\\n\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  color: \", \";\\n  max-width: 200px;\\n  padding: \", \"px \", \"px;\\n  position: relative;\\n\\n  // for IE11, use word-wrap property\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n\"], [\"\\n  \", \"\\n  \", \"\\n  \", \"\\n\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  color: \", \";\\n  max-width: 200px;\\n  padding: \", \"px \", \"px;\\n  position: relative;\\n\\n  // for IE11, use word-wrap property\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n\"])), function (_a) {\n    var $placement = _a.$placement;\n    return getArrowPlacement(6, 'gray15', $placement);\n}, getShadow(3, 'bottom'), getTypographyIntent('small'), colors.gray15, borderRadius.md, colors.white, spacing.sm, spacing.md);\nexport var StyledContainer = styled.span(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: inline-flex;\\n\"], [\"\\n  display: inline-flex;\\n\"])));\nvar templateObject_1, templateObject_2;\n"]},"metadata":{},"sourceType":"module"}