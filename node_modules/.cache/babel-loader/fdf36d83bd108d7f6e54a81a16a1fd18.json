{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\n\nfunction getSize(size) {\n  if (size === 'sm') {\n    return 16;\n  } else if (size === 'md') {\n    return 24;\n  } else if (size === 'lg') {\n    return 32;\n  } else if (size === 'tool') {\n    return 26;\n  }\n\n  return 24;\n}\n\nexport function Icon(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return React.isValidElement(children) ? React.cloneElement(children, __assign(__assign({\n    'aria-hidden': true,\n    'data-qa': \"ci-\".concat(props.name)\n  }, props), {\n    width: getSize(props.size),\n    height: getSize(props.size),\n    focusable: false,\n    style: __assign(__assign({}, props.style), {\n      flex: '0 0 auto'\n    })\n  })) : null;\n}","map":{"version":3,"sources":["/Users/marinagavrilenko/Documents/GitHub/movies_search/node_modules/@procore/core-icons/src/Icon.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;AAUA,SAAS,OAAT,CAAiB,IAAjB,EAAgC;AAC9B,MAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO,EAAP;AACD,GAFD,MAEO,IAAI,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAO,EAAP;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAO,EAAP;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,MAAb,EAAqB;AAC1B,WAAO,EAAP;AACD;;AAED,SAAO,EAAP;AACD;;AAED,OAAM,SAAU,IAAV,CAAe,EAAf,EAG+B;AAFnC,MAAA,QAAQ,GAAA,EAAA,CAAA,QAAR;AAAA,MACG,KAAK,GAAA,MAAA,CAAA,EAAA,EAFW,CAAA,UAAA,CAEX,CADR;;AAGA,SAAO,KAAK,CAAC,cAAN,CAAqB,QAArB,IACH,KAAK,CAAC,YAAN,CAAmB,QAAnB,EAA2B,QAAA,CAAA,QAAA,CAAA;AACzB,mBAAe,IADU;AAEzB,eAAW,MAAA,MAAA,CAAM,KAAK,CAAC,IAAZ;AAFc,GAAA,EAGtB,KAHsB,CAAA,EAGjB;AACR,IAAA,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,IAAP,CADN;AAER,IAAA,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,IAAP,CAFP;AAGR,IAAA,SAAS,EAAE,KAHH;AAIR,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KAAK,CAAC,KADN,CAAA,EACW;AACd,MAAA,IAAI,EAAE;AADQ,KADX;AAJG,GAHiB,CAA3B,CADG,GAaH,IAbJ;AAcD","sourcesContent":["import * as React from 'react'\n\nexport type IconSize = 'sm' | 'md' | 'lg' | 'tool'\n\nexport interface IconProps {\n  name: string\n  size?: IconSize\n  style?: React.CSSProperties\n}\n\nfunction getSize(size?: IconSize): number {\n  if (size === 'sm') {\n    return 16\n  } else if (size === 'md') {\n    return 24\n  } else if (size === 'lg') {\n    return 32\n  } else if (size === 'tool') {\n    return 26\n  }\n\n  return 24\n}\n\nexport function Icon({\n  children,\n  ...props\n}: React.PropsWithChildren<IconProps>) {\n  return React.isValidElement(children)\n    ? React.cloneElement(children, {\n        'aria-hidden': true,\n        'data-qa': `ci-${props.name}`,\n        ...props,\n        width: getSize(props.size),\n        height: getSize(props.size),\n        focusable: false,\n        style: {\n          ...props.style,\n          flex: '0 0 auto',\n        },\n      })\n    : null\n}\n"]},"metadata":{},"sourceType":"module"}