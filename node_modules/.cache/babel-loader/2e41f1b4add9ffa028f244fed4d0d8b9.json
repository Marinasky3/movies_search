{"ast":null,"code":"import { useMemo, useState, useCallback } from 'react'; // eslint-disable-next-line no-useless-escape\n\nvar periodDashAndWhitespaceRegex = /[\\.\\-\\s]/g;\n\nfunction matchString(value, searchQuery) {\n  var lowerCasedKeyValue = value && value.toLowerCase() || '';\n  var valueWithoutSeparators = lowerCasedKeyValue.replace(periodDashAndWhitespaceRegex, '');\n  return valueWithoutSeparators.includes(searchQuery);\n}\n\nfunction matchKeyInObject(item, key, searchQuery) {\n  if (typeof item[key] === 'string') {\n    return matchString(item[key], searchQuery);\n  }\n\n  if (typeof item[key] === 'number') {\n    return matchString(\"\".concat(item[key]), searchQuery);\n  }\n\n  return false;\n}\n\nfunction filterCondition(item, searchTerm, keysToMatch) {\n  if (searchTerm === void 0) {\n    searchTerm = '';\n  }\n\n  if (keysToMatch === void 0) {\n    keysToMatch = Object.keys(item);\n  }\n\n  var lowerCasedSearchTerm = searchTerm.trim().toLowerCase();\n  var sanitizedSearchQuery = lowerCasedSearchTerm.replace(periodDashAndWhitespaceRegex, '');\n  return keysToMatch.some(function (key) {\n    return matchKeyInObject(item, key, sanitizedSearchQuery);\n  });\n}\n\nexport function useSearch(config) {\n  var _a = useState(''),\n      searchTerm = _a[0],\n      setSearchTerm = _a[1];\n\n  var filteredItems = useMemo(function () {\n    if (searchTerm === '') {\n      return config.items;\n    }\n\n    return config.items.filter(function (item) {\n      return filterCondition(item, searchTerm, config.keysToSearch);\n    });\n  }, [config, searchTerm]);\n  var setSearch = useCallback(function (value) {\n    setSearchTerm(value);\n  }, [setSearchTerm]);\n  var clearSearch = useCallback(function () {\n    setSearchTerm('');\n  }, [setSearchTerm]);\n  return {\n    clearSearch: clearSearch,\n    filteredItems: filteredItems,\n    setSearch: setSearch,\n    searchTerm: searchTerm\n  };\n}","map":{"version":3,"sources":["../../../../src/components/TieredDropdown/useSearch.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,EAAkB,QAAlB,EAA4B,WAA5B,QAA+C,OAA/C,C,CAEA;;AACA,IAAM,4BAA4B,GAAG,WAArC;;AAEA,SAAS,WAAT,CAAqB,KAArB,EAAoC,WAApC,EAAuD;AACrD,MAAM,kBAAkB,GAAI,KAAK,IAAI,KAAK,CAAC,WAAN,EAAV,IAAkC,EAA7D;AAEA,MAAM,sBAAsB,GAAG,kBAAkB,CAAC,OAAnB,CAC7B,4BAD6B,EAE7B,EAF6B,CAA/B;AAKA,SAAO,sBAAsB,CAAC,QAAvB,CAAgC,WAAhC,CAAP;AACD;;AAED,SAAS,gBAAT,CACE,IADF,EAEE,GAFF,EAGE,WAHF,EAGqB;AAEnB,MAAI,OAAO,IAAI,CAAC,GAAD,CAAX,KAAqB,QAAzB,EAAmC;AACjC,WAAO,WAAW,CAAC,IAAI,CAAC,GAAD,CAAL,EAAsB,WAAtB,CAAlB;AACD;;AAED,MAAI,OAAO,IAAI,CAAC,GAAD,CAAX,KAAqB,QAAzB,EAAmC;AACjC,WAAO,WAAW,CAAC,GAAA,MAAA,CAAG,IAAI,CAAC,GAAD,CAAP,CAAD,EAAiB,WAAjB,CAAlB;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,CACE,IADF,EAEE,UAFF,EAGE,WAHF,EAG6C;AAD3C,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,EAAA;AAAuB;;AACvB,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAmB,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAnB;AAA2C;;AAE3C,MAAM,oBAAoB,GAAG,UAAU,CAAC,IAAX,GAAkB,WAAlB,EAA7B;AACA,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,OAArB,CAC3B,4BAD2B,EAE3B,EAF2B,CAA7B;AAKA,SAAO,WAAW,CAAC,IAAZ,CAAiB,UAAC,GAAD,EAAI;AAC1B,WAAA,gBAAgB,CAAC,IAAD,EAAO,GAAP,EAAY,oBAAZ,CAAhB;AAAiD,GAD5C,CAAP;AAGD;;AAcD,OAAM,SAAU,SAAV,CACJ,MADI,EACmB;AAEjB,MAAA,EAAA,GAA8B,QAAQ,CAAC,EAAD,CAAtC;AAAA,MAAC,UAAU,GAAA,EAAA,CAAA,CAAA,CAAX;AAAA,MAAa,aAAa,GAAA,EAAA,CAAA,CAAA,CAA1B;;AAEN,MAAM,aAAa,GAAG,OAAO,CAAC,YAAA;AAC5B,QAAI,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAO,MAAM,CAAC,KAAd;AACD;;AAED,WAAO,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB,UAAC,IAAD,EAAK;AAC9B,aAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,MAAM,CAAC,YAA1B,CAAf;AAAsD,KADjD,CAAP;AAGD,GAR4B,EAQ1B,CAAC,MAAD,EAAS,UAAT,CAR0B,CAA7B;AAUA,MAAM,SAAS,GAAG,WAAW,CAC3B,UAAC,KAAD,EAAc;AACZ,IAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAH0B,EAI3B,CAAC,aAAD,CAJ2B,CAA7B;AAOA,MAAM,WAAW,GAAG,WAAW,CAAC,YAAA;AAC9B,IAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAF8B,EAE5B,CAAC,aAAD,CAF4B,CAA/B;AAIA,SAAO;AACL,IAAA,WAAW,EAAA,WADN;AAEL,IAAA,aAAa,EAAA,aAFR;AAGL,IAAA,SAAS,EAAA,SAHJ;AAIL,IAAA,UAAU,EAAA;AAJL,GAAP;AAMD","sourcesContent":["import { useMemo, useState, useCallback } from 'react';\n// eslint-disable-next-line no-useless-escape\nvar periodDashAndWhitespaceRegex = /[\\.\\-\\s]/g;\nfunction matchString(value, searchQuery) {\n    var lowerCasedKeyValue = (value && value.toLowerCase()) || '';\n    var valueWithoutSeparators = lowerCasedKeyValue.replace(periodDashAndWhitespaceRegex, '');\n    return valueWithoutSeparators.includes(searchQuery);\n}\nfunction matchKeyInObject(item, key, searchQuery) {\n    if (typeof item[key] === 'string') {\n        return matchString(item[key], searchQuery);\n    }\n    if (typeof item[key] === 'number') {\n        return matchString(\"\".concat(item[key]), searchQuery);\n    }\n    return false;\n}\nfunction filterCondition(item, searchTerm, keysToMatch) {\n    if (searchTerm === void 0) { searchTerm = ''; }\n    if (keysToMatch === void 0) { keysToMatch = Object.keys(item); }\n    var lowerCasedSearchTerm = searchTerm.trim().toLowerCase();\n    var sanitizedSearchQuery = lowerCasedSearchTerm.replace(periodDashAndWhitespaceRegex, '');\n    return keysToMatch.some(function (key) {\n        return matchKeyInObject(item, key, sanitizedSearchQuery);\n    });\n}\nexport function useSearch(config) {\n    var _a = useState(''), searchTerm = _a[0], setSearchTerm = _a[1];\n    var filteredItems = useMemo(function () {\n        if (searchTerm === '') {\n            return config.items;\n        }\n        return config.items.filter(function (item) {\n            return filterCondition(item, searchTerm, config.keysToSearch);\n        });\n    }, [config, searchTerm]);\n    var setSearch = useCallback(function (value) {\n        setSearchTerm(value);\n    }, [setSearchTerm]);\n    var clearSearch = useCallback(function () {\n        setSearchTerm('');\n    }, [setSearchTerm]);\n    return {\n        clearSearch: clearSearch,\n        filteredItems: filteredItems,\n        setSearch: setSearch,\n        searchTerm: searchTerm,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}