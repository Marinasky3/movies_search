import { TimerApi } from './Timer';
export declare type BeforeResult = Promise<any> | boolean | undefined | void;
export declare type BeforeCallback = (event: Event) => BeforeResult;
interface DelayedCallbackConfig {
    after?: () => void;
    before?: BeforeCallback;
    delay: number;
    timer?: TimerApi;
}
export declare function isPromise(obj: any): obj is Promise<any>;
export declare function wrapPromise(result: BeforeResult): Promise<any>;
export declare function useDelayedCallback({ after, before, delay, timer, }: DelayedCallbackConfig): (event: any) => Promise<false | void>;
export {};
