var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
import React from 'react';
import { defaultRect, getBoundingRect } from '../utils/dom';
/* HOOK */
export function useBoundingRect(_a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.dependencies, dependencies = _c === void 0 ? [] : _c;
    var ref = React.useRef(null);
    var _d = React.useState(defaultRect), rect = _d[0], setRect = _d[1];
    React.useLayoutEffect(function () {
        if (ref.current) {
            setRect(getBoundingRect(ref.current));
        }
    }, __spreadArray([ref.current], dependencies, true)); // TODO Fix
    return { ref: ref, rect: rect };
}
/* DECORATOR */
export function withBoundingRect(config) {
    return function (Component) {
        return function WithBoundingRect(props) {
            return (React.createElement(Component, __assign({}, props, { boundingRect: useBoundingRect(__assign(__assign({}, config), props.boundingRect)) })));
        };
    };
}
/* RENDER PROP */
export function BoundingRect(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    var boundingRect = useBoundingRect(props);
    return typeof children === 'function' ? children(boundingRect) : children;
}
/* CONTEXT */
var context = {
    ref: { current: null },
    rect: defaultRect,
};
export var BoundingRectContext = React.createContext(context);
export function BoundingRectProvider(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(BoundingRectContext.Provider, { value: useBoundingRect(props) }, children));
}
export function useBoundingRectContext() {
    return React.useContext(BoundingRectContext);
}
/**
 * @deprecated Please use `useBoundingRectContext()`
 */
export var consumeBoundingRect = useBoundingRectContext;
//# sourceMappingURL=BoundingRect.js.map