import React from 'react';
export declare const defaultZIndex = 9999;
interface ZIndexConfig {
    initialValue?: number;
}
interface ZIndexApi {
    increment: () => void;
    value: number;
}
interface Props extends ZIndexConfig {
    children?: React.ReactNode;
}
interface RenderProps extends ZIndexConfig {
    children: (props: ZIndexApi) => {};
}
export declare function useZIndex({ initialValue, }: ZIndexConfig): ZIndexApi;
export declare function withZIndex<T extends {}>(config: ZIndexConfig): (Component: React.ComponentType<T>) => (props: T & {
    zIndex: ZIndexConfig;
}) => JSX.Element;
export declare function ZIndex({ children, ...props }: RenderProps): {};
export declare const ZIndexContext: React.Context<ZIndexApi>;
export declare function ZIndexProvider({ children, ...props }: Props): JSX.Element;
export declare function useZIndexContext(): ZIndexApi;
/**
 * @deprecated
 *
 * please use `useZIndexContext()`
 *
 * @deprecatedSince 10.20.0
 */
export declare const consumeZIndex: typeof useZIndexContext;
export {};
