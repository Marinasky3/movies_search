import React from 'react';
import { Placement, RenderProp } from '../utils/types';
export interface AnchorConfig {
    canFlip?: boolean;
    dependencies?: Array<any>;
    onLayout?: (anchor: AnchorApi) => any;
    overlayRef: React.RefObject<HTMLElement>;
    padding?: number;
    placement?: Placement;
    targetRef: React.RefObject<HTMLElement>;
    shrinkOverlay?: boolean;
}
export interface AnchorProps extends AnchorConfig, RenderProp<AnchorApi> {
}
export interface AnchorApi {
    left: number;
    /**
     * @deprecated
     *
     * use `shrinkOverlay` boolean property to set `minWidth`
     *
     * @deprecatedSince 10.20.0
     */
    minWidth: number;
    placement: Placement;
    top: number;
}
export declare const initAnchor: AnchorApi;
export declare function useAnchor({ canFlip, dependencies, onLayout, padding, placement, overlayRef, targetRef, shrinkOverlay, }: AnchorConfig): AnchorApi;
export declare function withAnchor<T>(config: AnchorConfig): (Component: React.ComponentType<T>) => (props: T) => JSX.Element;
export declare function Anchor({ children, overlayRef, targetRef, ...props }: AnchorProps): React.ReactElement<any, string | React.JSXElementConstructor<any>>;
export declare const AnchorContext: React.Context<AnchorApi>;
export declare function AnchorProvider({ children, ...props }: AnchorProps): JSX.Element;
export declare function useAnchorContext(): AnchorApi;
export declare const consumeAnchor: typeof useAnchorContext;
