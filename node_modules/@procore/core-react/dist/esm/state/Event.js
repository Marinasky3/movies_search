var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { useEventListener } from '../effects/EventListener';
/* HOOK */
export function useEvent(_a) {
    var event = _a.event, options = _a.options, _b = _a.scope, scope = _b === void 0 ? window : _b;
    var _c = React.useState(null), value = _c[0], handler = _c[1];
    useEventListener({ event: event, handler: handler, options: options, scope: scope });
    return {
        value: value,
    };
}
/* DECORATOR */
export function withEvent(config) {
    return function (Component) {
        return function WithEvent(props) {
            return (React.createElement(Component, __assign({}, props, { event: useEvent(__assign(__assign({}, config), props.event)) })));
        };
    };
}
/* RENDER PROP */
export function Event(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    var event = useEvent(props);
    return typeof children === 'function' ? children(event) : children;
}
/* CONTEXT */
export var EventContext = React.createContext({
    value: null,
});
export function EventProvider(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(EventContext.Provider, { value: useEvent(props) }, children));
}
export var useEventContext = function () { return React.useContext(EventContext); };
/**
 * @deprecated
 *
 * Please use `useEventContext()`
 *
 * @deprecatedSince 10.20.0
 */
export var consumeEvent = useEventContext;
//# sourceMappingURL=Event.js.map