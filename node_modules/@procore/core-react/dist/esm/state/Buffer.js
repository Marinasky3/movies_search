var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
/* HOOK */
export function useBuffer(_a) {
    var _b = _a.initialValue, initialValue = _b === void 0 ? '' : _b;
    var _c = React.useState(initialValue), value = _c[0], setValue = _c[1];
    var clear = function () { return setValue(''); };
    var reset = function () { return setValue(initialValue); };
    var update = function (value) { return setValue(value); };
    return {
        clear: clear,
        reset: reset,
        update: update,
        value: value,
    };
}
/* DECORATOR */
export function withBuffer(config) {
    return function (Component) {
        return function WithBuffer(props) {
            return (React.createElement(Component, __assign({}, props, { buffer: useBuffer(__assign(__assign({}, config), props.buffer)) })));
        };
    };
}
/* RENDER PROP */
export function Buffer(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    var buffer = useBuffer(props);
    return typeof children === 'function' ? children(buffer) : children;
}
/* CONTEXT */
var noop = function (method) { return function () {
    return console.warn("Could not call `".concat(method, "`, please wrap your component in a `<BufferProvider>`"));
}; };
export var BufferContext = React.createContext({
    value: '',
    clear: noop('clear'),
    reset: noop('reset'),
    update: noop('update'),
});
export function BufferProvider(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(BufferContext.Provider, { value: useBuffer(props) }, children));
}
export function useBufferContext() {
    return React.useContext(BufferContext);
}
/**
 * @deprecated
 *
 * please use `useBufferContext()`
 *
 * @deprecatedSince 10.20.0
 */
export var consumeBuffer = useBufferContext;
//# sourceMappingURL=Buffer.js.map