var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css } from 'styled-components';
import { getTypographyIntent } from '../../components/Typography/Typography.styles';
import { colors } from '../../styles/colors';
import { spacing } from '../../styles/spacing';
export var StyledSidebar = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  background-color: ", ";\n  padding: ", "px 0;\n  position: relative;\n"], ["\n  background-color: ", ";\n  padding: ", "px 0;\n  position: relative;\n"])), colors.gray96, spacing.lg);
export var StyledSidebarButton = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding: 0 ", "px;\n\n  & + & {\n    padding-top: ", "px;\n  }\n"], ["\n  padding: 0 ", "px;\n\n  & + & {\n    padding-top: ", "px;\n  }\n"])), spacing.lg, spacing.sm);
export var StyledSidebarDivider = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  margin: ", "px;\n  border-bottom: 1px solid ", ";\n  height: 1px;\n"], ["\n  margin: ", "px;\n  border-bottom: 1px solid ", ";\n  height: 1px;\n"])), spacing.xl, colors.gray90);
export var StyledSidebarHeader = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 ", "px ", "px;\n"], ["\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 ", "px ", "px;\n"])), spacing.xl, spacing.md);
export var StyledSidebarHeaderAction = styled.a(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  ", "\n\n  color: ", ";\n  cursor: pointer;\n"], ["\n  ", "\n\n  color: ", ";\n  cursor: pointer;\n"])), getTypographyIntent('small'), colors.orange50);
export var StyledSidebarMenu = styled.ol(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  list-style: none;\n  margin: 0;\n  padding: 0;\n"], ["\n  list-style: none;\n  margin: 0;\n  padding: 0;\n"])));
export var StyledSidebarMenuItem = styled.li(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  ", "\n  align-items: center;\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  padding: ", "px ", "px;\n  transition: all 0.2s ease-in-out;\n\n  &::after {\n    background-color: transparent;\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    transition: all 0.2s ease-in-out;\n    width: 5px;\n  }\n\n  &:hover {\n    background-color: ", ";\n    color: ", ";\n\n    &::after {\n      background-color: ", ";\n    }\n  }\n\n  ", "\n\n  &:active {\n    &::after {\n      background-color: ", ";\n    }\n  }\n"], ["\n  ", "\n  align-items: center;\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  padding: ", "px ", "px;\n  transition: all 0.2s ease-in-out;\n\n  &::after {\n    background-color: transparent;\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    transition: all 0.2s ease-in-out;\n    width: 5px;\n  }\n\n  &:hover {\n    background-color: ", ";\n    color: ", ";\n\n    &::after {\n      background-color: ", ";\n    }\n  }\n\n  ", "\n\n  &:active {\n    &::after {\n      background-color: ", ";\n    }\n  }\n"])), getTypographyIntent('small'), colors.gray50, spacing.sm, spacing.xl, colors.gray90, colors.gray15, colors.orange50, function (_a) {
    var $active = _a.$active;
    if ($active) {
        return css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n        &::after {\n          background-color: ", ";\n        }\n      "], ["\n        &::after {\n          background-color: ", ";\n        }\n      "])), colors.orange50);
    }
}, colors.orange50);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8;
//# sourceMappingURL=Sidebar.styles.js.map