var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import styles from '@procore/core-css/src/layouts/_sidebar.scss';
import React from 'react';
import { H2 } from '../../components/Semantic';
import { addSubcomponents } from '../../utils/addSubcomponents';
import { StyledSidebar, StyledSidebarButton, StyledSidebarDivider, StyledSidebarHeader, StyledSidebarHeaderAction, StyledSidebarMenu, StyledSidebarMenuItem, } from './Sidebar.styles';
var classnames = require('classnames/bind');
var cx = classnames.bind(styles);
export var Sidebar_ = React.forwardRef(function Sidebar(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledSidebar, __assign({ ref: ref }, props), children));
});
export var Divider = React.forwardRef(function Divider(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return React.createElement(StyledSidebarDivider, __assign({}, props, { ref: ref }));
});
export var Button = React.forwardRef(function Button(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledSidebarButton, __assign({}, props, { ref: ref }), children));
});
export var Header = React.forwardRef(function Header(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledSidebarHeader, __assign({}, props, { ref: ref }), children));
});
export var HeaderLabel = React.forwardRef(function HeaderLabel(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(H2, __assign({}, props, { ref: ref }), children));
});
export var HeaderAction = React.forwardRef(function HeaderAction(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledSidebarHeaderAction, __assign({}, props, { ref: ref }), children));
});
export var Menu = React.forwardRef(function Menu(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledSidebarMenu, __assign({}, props, { ref: ref }), children));
});
export var MenuItem = React.forwardRef(function MenuItem(_a, ref) {
    var _b = _a.active, active = _b === void 0 ? false : _b, children = _a.children, props = __rest(_a, ["active", "children"]);
    return (React.createElement(StyledSidebarMenuItem, __assign({}, props, { "$active": active, ref: ref }), children));
});
Sidebar_.displayName = 'Sidebar';
Divider.displayName = 'Sidebar.Divider';
Button.displayName = 'Sidebar.Button';
Header.displayName = 'Sidebar.Header';
HeaderLabel.displayName = 'Sidebar.HeaderLabel';
HeaderAction.displayName = 'Sidebar.HeaderAction';
Menu.displayName = 'Sidebar.Menu';
MenuItem.displayName = 'Sidebar.MenuItem';
export var Sidebar = addSubcomponents({
    Divider: Divider,
    Button: Button,
    Header: Header,
    HeaderLabel: HeaderLabel,
    HeaderAction: HeaderAction,
    Menu: Menu,
    MenuItem: MenuItem,
}, Sidebar_);
export default Sidebar;
//# sourceMappingURL=Sidebar.js.map