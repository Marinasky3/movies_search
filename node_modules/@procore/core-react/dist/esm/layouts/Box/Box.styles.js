var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css } from 'styled-components';
import { colors } from '../../styles/colors';
import { spacing } from '../../styles/spacing';
function appendPx(value) {
    if (!value) {
        return;
    }
    return typeof value === 'string' ? value : "".concat(value, "px");
}
function sizeStrToPx(str) {
    /**
     * hacky usage of "as" here, but since we have a default fallback if the
     * lookup fails it should be fine
     */
    return spacing[str] !== undefined
        ? "".concat(spacing[str], "px")
        : str;
}
function shorthandSizeToPx(shorthand) {
    return shorthand === null || shorthand === void 0 ? void 0 : shorthand.split(' ').map(sizeStrToPx).join(' ');
}
function sizeToPx(size) {
    return sizeStrToPx(size) || size;
}
export var StyledBox = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ", "\n  ", "\n"], ["\n  ", "\n  ", "\n"])), function (_a) {
    var $as = _a.$as;
    if ($as === 'ol' || $as === 'ul') {
        return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        list-style: none;\n        margin: 0;\n        padding: 0;\n      "], ["\n        list-style: none;\n        margin: 0;\n        padding: 0;\n      "])));
    }
}, function (p) { return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    align-content: ", ";\n    align-items: ", ";\n    align-self: ", ";\n    background-color: ", ";\n    display: ", ";\n    flex-basis: ", ";\n    flex-direction: ", ";\n    flex-grow: ", ";\n    flex-shrink: ", ";\n    flex-wrap: ", ";\n    flex: ", ";\n    height: ", ";\n    justify-content: ", ";\n    margin: ", ";\n    margin-bottom: ", ";\n    margin-left: ", ";\n    margin-right: ", ";\n    margin-top: ", ";\n    min-height: ", ";\n    min-width: ", ";\n    order: ", ";\n    padding: ", ";\n    padding-bottom: ", ";\n    padding-left: ", ";\n    padding-right: ", ";\n    padding-top: ", ";\n    text-align: ", ";\n    width: ", ";\n  "], ["\n    align-content: ", ";\n    align-items: ", ";\n    align-self: ", ";\n    background-color: ", ";\n    display: ", ";\n    flex-basis: ", ";\n    flex-direction: ", ";\n    flex-grow: ", ";\n    flex-shrink: ", ";\n    flex-wrap: ", ";\n    flex: ", ";\n    height: ", ";\n    justify-content: ", ";\n    margin: ", ";\n    margin-bottom: ", ";\n    margin-left: ", ";\n    margin-right: ", ";\n    margin-top: ", ";\n    min-height: ", ";\n    min-width: ", ";\n    order: ", ";\n    padding: ", ";\n    padding-bottom: ", ";\n    padding-left: ", ";\n    padding-right: ", ";\n    padding-top: ", ";\n    text-align: ", ";\n    width: ", ";\n  "])), p.$alignContent, p.$alignItems, p.$alignSelf, p.$bgColor && colors[p.$bgColor], p.$display, p.$flexBasis, p.$flexDirection, p.$flexGrow, p.$flexShrink, p.$flexWrap, p.$flex, appendPx(p.$height), p.$justifyContent, shorthandSizeToPx(p.$margin), sizeToPx(p.$marginBottom), sizeToPx(p.$marginLeft), sizeToPx(p.$marginRight), sizeToPx(p.$marginTop), appendPx(p.$minHeight), appendPx(p.$minWidth), p.$order, shorthandSizeToPx(p.$padding), sizeToPx(p.$paddingBottom), sizeToPx(p.$paddingLeft), sizeToPx(p.$paddingRight), sizeToPx(p.$paddingTop), p.$textAlign, appendPx(p.$width)); });
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=Box.styles.js.map