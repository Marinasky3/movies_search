import React from 'react';
import { Props } from '../../utils/types';
export interface DetailPageProps extends Props {
    /**
     * Width of the content.
     * @default 'md'
     */
    width?: 'md' | 'lg' | 'xl' | 'block';
}
export declare const ViewContext: React.Context<{
    width: string;
}>;
export declare const Actions: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Banner: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Body: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Breadcrumbs: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Card: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const DetailTabs: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Header: React.ForwardRefExoticComponent<Props & {
    transparent?: boolean | undefined;
} & React.RefAttributes<HTMLDivElement>>;
export declare const Heading: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Footer: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const FooterNotation: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export declare const Title: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
export interface SectionProps extends Props {
    /**
     *  Actions of Buttons and Dropdowns to render. If a function, the open
     *  state is provided <Code>{`({ open }) => React.ReactNode`}</Code>
     */
    actions?: React.ReactNode | ((section: {
        open: boolean;
    }) => React.ReactNode);
    /**
     * Enable the expand and collapse accordion feature. Requires a unique ID
     * across sections, unique within the provider (DetailPage.Card) and requires
     * a heading on the section. Closed sections will not render its children.
     */
    expandId?: string | number;
    /**
     * Heading text for the section.
     */
    heading?: string;
    /**
     * If expandable, start open or closed.
     */
    initialIsOpen?: boolean;
}
export declare const Section: React.ForwardRefExoticComponent<SectionProps & React.RefAttributes<HTMLDivElement>>;
/**
 * @deprecated
 *
 * The `DetailPage` component has been deprecated and will be removed removed
 * in a future version. Please use `NextDetailPage` instead.
 *
 * @deprecatedSince 10.20.0
 *
 * @see https://core.procore.com/latest/web/layout/next-detail-page/react/
 */
export declare const DetailPage: React.ForwardRefExoticComponent<DetailPageProps & React.RefAttributes<HTMLDivElement>> & {
    Actions: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Banner: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Body: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Breadcrumbs: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Card: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    DetailTabs: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Header: React.ForwardRefExoticComponent<Props & {
        transparent?: boolean | undefined;
    } & React.RefAttributes<HTMLDivElement>>;
    Heading: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Footer: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    FooterNotation: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
    Section: React.ForwardRefExoticComponent<SectionProps & React.RefAttributes<HTMLDivElement>>;
    Title: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLDivElement>>;
};
export default DetailPage;
