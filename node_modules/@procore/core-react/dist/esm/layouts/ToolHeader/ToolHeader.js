var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Icon as IconBase } from '../../components/Icon';
import { Tabs as TabsBase } from '../../components/Tabs';
import { addSubcomponents } from '../../utils/addSubcomponents';
import { StyledHeaderActions, StyledHeaderBadge, StyledHeaderTabs, StyledToolHeader, StyledToolHeaderIconContainer, StyledToolHeaderTitle, } from './ToolHeader.styles';
var ToolHeader_ = StyledToolHeader;
export var Icon = React.forwardRef(function Icon(_a, ref) {
    var className = _a.className, _b = _a.icon, icon = _b === void 0 ? 'cog' : _b, props = __rest(_a, ["className", "icon"]);
    return (React.createElement(StyledToolHeaderIconContainer, { className: className, ref: ref },
        React.createElement(IconBase, __assign({ icon: icon }, props, { size: "sm" }))));
});
export var Title = StyledToolHeaderTitle;
export var Tabs = React.forwardRef(function Tabs(_a, ref) {
    var children = _a.children, className = _a.className, props = __rest(_a, ["children", "className"]);
    return (React.createElement(StyledHeaderTabs, { className: className, ref: ref },
        React.createElement(TabsBase, __assign({}, props), children)));
});
export var Actions = StyledHeaderActions;
/**
 * @deprecated
 *
 * This `Badge` pattern is no longer supported and it is now recommended to use a `Pill` instead.
 *
 * @deprecatedSince 10.20.0
 *
 * @see https://core.procore.com/latest/web/components/pill/react/
 */
export var Badge = React.forwardRef(function Badge(_a, ref) {
    var children = _a.children, variant = _a.variant, props = __rest(_a, ["children", "variant"]);
    return (React.createElement(StyledHeaderBadge, __assign({}, props, { "$variant": variant, ref: ref }), children));
});
ToolHeader_.displayName = 'ToolHeader';
Icon.displayName = 'ToolHeader.Icon';
Title.displayName = 'ToolHeader.Title';
Tabs.displayName = 'ToolHeader.Tabs';
Actions.displayName = 'ToolHeader.Actions';
Badge.displayName = 'ToolHeader.Badge';
export var ToolHeader = addSubcomponents({
    Icon: Icon,
    Title: Title,
    Tabs: Tabs,
    Actions: Actions,
    Badge: Badge,
}, ToolHeader_);
export default ToolHeader;
//# sourceMappingURL=ToolHeader.js.map