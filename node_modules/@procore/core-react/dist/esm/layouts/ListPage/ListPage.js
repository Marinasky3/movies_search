var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { addSubcomponents } from '../../utils/addSubcomponents';
import { StyledListPage, StyledListPageBanner, StyledListPageBody, StyledListPageBodyContent, StyledListPageContentControls, StyledListPageControl, StyledListPageMain, StyledListPageToolHeader, } from './ListPage.styles';
export var ListPage_ = React.forwardRef(function ListPage(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledListPage, __assign({}, props, { ref: ref }), children));
});
export var Main = React.forwardRef(function Main(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledListPageMain, __assign({}, props, { ref: ref }), children));
});
export var Banner = React.forwardRef(function Banner(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledListPageBanner, __assign({}, props, { ref: ref }), children));
});
export var ToolHeader = React.forwardRef(function ToolHeader(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledListPageToolHeader, __assign({}, props, { ref: ref }), children));
});
export var ContentControls = React.forwardRef(function ContentControls(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledListPageContentControls, __assign({}, props, { ref: ref }), children));
});
export var Body = React.forwardRef(function Body(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledListPageBody, __assign({}, props, { ref: ref }),
        React.createElement(StyledListPageBodyContent, null, children)));
});
export var Control = React.forwardRef(function Control(_a, ref) {
    var _b = _a.alignRight, alignRight = _b === void 0 ? false : _b, _c = _a.block, block = _c === void 0 ? false : _c, children = _a.children, _d = _a.search, search = _d === void 0 ? false : _d, variant = _a.variant, props = __rest(_a, ["alignRight", "block", "children", "search", "variant"]);
    return (React.createElement(StyledListPageControl, __assign({}, props, { "$alignRight": alignRight || variant === 'align-right', "$block": block || variant === 'block', "$search": search || variant === 'search', ref: ref }), children));
});
Banner.displayName = 'ListPage.Banner';
Body.displayName = 'ListPage.Body';
ContentControls.displayName = 'ListPage.ContentControls';
Control.displayName = 'ListPage.Control';
Main.displayName = 'ListPage.Main';
ToolHeader.displayName = 'ListPage.ToolHeader';
export var ListPage = addSubcomponents({
    Banner: Banner,
    Body: Body,
    ContentControls: ContentControls,
    Control: Control,
    Main: Main,
    ToolHeader: ToolHeader,
}, ListPage_);
export default ListPage;
//# sourceMappingURL=ListPage.js.map