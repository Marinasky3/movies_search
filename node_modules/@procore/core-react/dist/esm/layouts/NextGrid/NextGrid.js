var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { StyledNextGridRow, StyledNextGridCol } from './NextGrid.styles';
import { overrideIfNotDefined } from './NextGrid.utils';
import { addSubcomponents } from '../../utils/addSubcomponents';
var defaultContextShape = {
    gutterX: 'none',
    gutterY: 'none',
    colStackCap: 'mobileLg',
};
var NextGridContext = React.createContext(defaultContextShape);
function BaseNextGrid(_a) {
    var gutterX = _a.gutterX, gutterY = _a.gutterY, colStackCap = _a.colStackCap, props = __rest(_a, ["gutterX", "gutterY", "colStackCap"]);
    var gridContextValue = overrideIfNotDefined(defaultContextShape, {
        gutterX: gutterX,
        gutterY: gutterY,
        colStackCap: colStackCap,
    });
    return React.createElement(NextGridContext.Provider, __assign({ value: gridContextValue }, props));
}
var NextGridRow = React.forwardRef(function NextGridRow(props, ref) {
    var _a = React.useContext(NextGridContext), gutterX = _a.gutterX, gutterY = _a.gutterY;
    return (React.createElement(StyledNextGridRow, __assign({}, props, { "$gutterX": gutterX, "$gutterY": gutterY, ref: ref })));
});
var NextGridCol = React.forwardRef(function NextGridCol(_a, ref) {
    var _b = _a.colWidth, colWidth = _b === void 0 ? 'auto' : _b, offset = _a.colStart, props = __rest(_a, ["colWidth", "colStart"]);
    var _c = React.useContext(NextGridContext), gutterX = _c.gutterX, gutterY = _c.gutterY, colStackBreakpoint = _c.colStackCap;
    return (React.createElement(StyledNextGridCol, __assign({}, props, { ref: ref, "$span": colWidth, "$offset": offset, "$gutterX": gutterX, "$gutterY": gutterY, "$colStackBreakpoint": colStackBreakpoint })));
});
export var NextGrid = addSubcomponents({
    Row: NextGridRow,
    Col: NextGridCol,
}, BaseNextGrid);
//# sourceMappingURL=NextGrid.js.map