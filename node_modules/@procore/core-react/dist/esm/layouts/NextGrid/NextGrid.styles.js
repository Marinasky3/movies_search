var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css } from 'styled-components';
import { spacing } from '../../styles/spacing';
import { breakpointsSmallToLarge, breakpointMinWidthValues, } from './NextGrid.constants';
var gridColumns = 12;
var getIsColStackActive = function (targetBreakpoint, colStackBreakpoint) {
    var targetBrkIndex = breakpointsSmallToLarge.indexOf(targetBreakpoint);
    var stackBrkIndex = breakpointsSmallToLarge.indexOf(colStackBreakpoint);
    return targetBrkIndex <= stackBrkIndex;
};
var getSpanCSS = function (span, targetBreakpoint, colStackBreakpoint) {
    if (getIsColStackActive(targetBreakpoint, colStackBreakpoint)) {
        return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      width: 100%;\n    "], ["\n      width: 100%;\n    "])));
    }
    var spanValue = typeof span !== 'object' ? span : span[targetBreakpoint];
    if (typeof spanValue === 'undefined') {
        return '';
    }
    if (spanValue === 'auto') {
        return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      flex: 1 1 0%;\n      max-width: 100%;\n    "], ["\n      flex: 1 1 0%;\n      max-width: 100%;\n    "])));
    }
    return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    flex: 0 0 auto;\n    width: ", "%;\n  "], ["\n    flex: 0 0 auto;\n    width: ", "%;\n  "])), (spanValue / gridColumns) * 100);
};
var getOffsetCSS = function ($offset, targetBreakpoint, colStackBreakpoint) {
    if (getIsColStackActive(targetBreakpoint, colStackBreakpoint)) {
        return '';
    }
    var offsetValue = typeof $offset === 'object' ? $offset[targetBreakpoint] : $offset;
    if (typeof offsetValue === 'undefined' || offsetValue >= gridColumns) {
        return '';
    }
    var ratio = offsetValue / gridColumns;
    if (ratio === 0) {
        return css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n      margin-left: 0;\n    "], ["\n      margin-left: 0;\n    "])));
    }
    return css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    margin-left: ", "%;\n  "], ["\n    margin-left: ", "%;\n  "])), ratio * 100);
};
var getColGutterXCSS = function (gutterX, breakpoint) {
    var gutterKey = typeof gutterX === 'object' ? gutterX[breakpoint] : gutterX;
    if (typeof gutterKey === 'undefined') {
        return '';
    }
    var gutterCSS = css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n    padding-right: ", "px;\n    padding-left: ", "px;\n  "], ["\n    padding-right: ", "px;\n    padding-left: ", "px;\n  "])), spacing[gutterKey] / 2, spacing[gutterKey] / 2);
    return gutterCSS;
};
var getColGutterYCSS = function (gutterX, breakpoint) {
    var gutterKey = typeof gutterX === 'object' ? gutterX[breakpoint] : gutterX;
    if (typeof gutterKey === 'undefined') {
        return '';
    }
    var gutterCSS = css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n    margin-top: ", "px;\n  "], ["\n    margin-top: ", "px;\n  "])), spacing[gutterKey]);
    return gutterCSS;
};
var getRowGutterXCSS = function (gutterX, breakpoint) {
    var gutterKey = typeof gutterX === 'object' ? gutterX[breakpoint] : gutterX;
    if (typeof gutterKey === 'undefined') {
        return '';
    }
    var gutterCSS = css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n    margin-right: ", "px;\n    margin-left: ", "px;\n  "], ["\n    margin-right: ", "px;\n    margin-left: ", "px;\n  "])), spacing[gutterKey] / -2, spacing[gutterKey] / -2);
    if (breakpoint === 'mobileLg') {
        return gutterCSS;
    }
    return css(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n    @media (min-width: ", ") {\n      ", "\n    }\n  "], ["\n    @media (min-width: ", ") {\n      ", "\n    }\n  "])), breakpointMinWidthValues[breakpoint], gutterCSS);
};
var getRowGutterYCSS = function (gutterY, breakpoint) {
    var gutterKey = typeof gutterY === 'object' ? gutterY[breakpoint] : gutterY;
    if (typeof gutterKey === 'undefined') {
        return '';
    }
    var gutterCSS = css(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n    margin-top: ", "px;\n  "], ["\n    margin-top: ", "px;\n  "])), spacing[gutterKey] * -1);
    if (breakpoint === 'mobileLg') {
        return gutterCSS;
    }
    return css(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n    @media (min-width: ", ") {\n      ", "\n    }\n  "], ["\n    @media (min-width: ", ") {\n      ", "\n    }\n  "])), breakpointMinWidthValues[breakpoint], gutterCSS);
};
export var StyledNextGridRow = styled.div(templateObject_13 || (templateObject_13 = __makeTemplateObject(["\n  ", "\n  display: flex;\n  flex-wrap: wrap;\n"], ["\n  ", "\n  display: flex;\n  flex-wrap: wrap;\n"])), function (_a) {
    var $gutterX = _a.$gutterX, $gutterY = _a.$gutterY;
    return breakpointsSmallToLarge.map(function (breakpoint) {
        var gutterXCSS = getRowGutterXCSS($gutterX, breakpoint);
        var gutterYCSS = getRowGutterYCSS($gutterY, breakpoint);
        return css(templateObject_12 || (templateObject_12 = __makeTemplateObject(["\n        ", "\n        ", "\n      "], ["\n        ", "\n        ", "\n      "])), gutterXCSS, gutterYCSS);
    });
});
export var StyledNextGridCol = styled.div(templateObject_16 || (templateObject_16 = __makeTemplateObject(["\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%;\n\n  ", "\n"], ["\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%;\n\n  ", "\n"])), function (_a) {
    var $span = _a.$span, $offset = _a.$offset, $gutterX = _a.$gutterX, $gutterY = _a.$gutterY, $colStackBreakpoint = _a.$colStackBreakpoint;
    return breakpointsSmallToLarge.map(function (breakpoint) {
        var spanCSS = getSpanCSS($span, breakpoint, $colStackBreakpoint);
        var offsetCSS = getOffsetCSS($offset, breakpoint, $colStackBreakpoint);
        var gutterXCSS = getColGutterXCSS($gutterX, breakpoint);
        var gutterYCSS = getColGutterYCSS($gutterY, breakpoint);
        var resultCSS = css(templateObject_14 || (templateObject_14 = __makeTemplateObject(["\n        ", "\n        ", "\n        ", "\n        ", "\n      "], ["\n        ", "\n        ", "\n        ", "\n        ", "\n      "])), offsetCSS, gutterXCSS, gutterYCSS, spanCSS);
        if (breakpoint === 'mobileLg') {
            return resultCSS;
        }
        return css(templateObject_15 || (templateObject_15 = __makeTemplateObject(["\n        @media (min-width: ", ") {\n          ", "\n        }\n      "], ["\n        @media (min-width: ", ") {\n          ", "\n        }\n      "])), breakpointMinWidthValues[breakpoint], resultCSS);
    });
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15, templateObject_16;
//# sourceMappingURL=NextGrid.styles.js.map