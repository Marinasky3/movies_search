import { Props } from '../../utils/types';
import { BoxProps } from '../../layouts/Box';
export interface CalendarProps extends BodyProps {
    /**
     * Click handler for navigating the calendar, with arrows or selects.
     */
    onNavigate?: (date: Date) => void;
}
export interface BodyProps extends Props {
    /**
     * Controls the month displayed on the calendar, can be different from selected.
     * @default new Date()
     */
    displayDate?: Date;
    /**
     * @param {Date} date - start of a day in the year
     * @param {Date} today - start of today in the context of the time zone
     * @returns {Boolean}
     * Provide a function to disable dates.
     */
    disabledDate?: (date: Date, today: Date) => boolean;
    /**
     * Provide a function to disable dates. Must return a boolean.
     */
    monthRef?: React.Ref<HTMLDivElement>;
    /**
     * Click handler for selecting a day.
     */
    onSelect?: (day: Date) => void;
    /**
     * End of the highlight of a day range
     */
    selectedEnd?: Date;
    /**
     * Start of the highlight of a day range
     */
    selectedStart?: Date;
    yearRef?: React.Ref<HTMLDivElement>;
}
export interface DayProps extends Props {
    disabled?: boolean;
    isCurrentMonth?: boolean;
    isRangeEnd?: boolean;
    isRangeStart?: boolean;
    isToday?: boolean;
    onClick?: (event: React.MouseEvent<HTMLElement>) => void;
    selected?: boolean;
}
export interface DayProps extends Props {
    disabled?: boolean;
    isCurrentMonth?: boolean;
    isRangeEnd?: boolean;
    isRangeStart?: boolean;
    isToday?: boolean;
    onClick?: (event: React.MouseEvent<HTMLElement>) => void;
    selected?: boolean;
}
export interface SelectProps extends Props {
    block?: boolean;
    label: string;
    onSelect: (selection: number) => any;
    /**
     * Expects an array of objects with the following shape
     */
    options?: SelectOption[];
    /**
     * Identifier of the selected value
     */
    selected?: number;
}
export interface NextPrevProps extends Props {
    onClick: () => void;
}
export interface SelectOption {
    label: string;
    value: number;
}
export interface CalendarContainerProps extends Props {
}
export interface NavigationProps extends Omit<BoxProps, 'as'> {
}
export interface WeekdaysProps extends Props {
}
export interface WeekProps extends Props {
}
