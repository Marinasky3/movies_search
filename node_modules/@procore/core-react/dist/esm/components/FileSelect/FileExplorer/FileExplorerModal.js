var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { useScrollLock } from '../../../effects/ScrollLock';
import { Modal } from '../../Modal';
import { Portal } from '../../Portal';
import { StyledModalOverlay, StyledModalContainer } from './FileExplorer.styles';
function noop() { }
export var FileExplorerModal = React.forwardRef(function FileExplorerModal(_a, ref) {
    var children = _a.children, _b = _a.onClickOverlay, onClickOverlay = _b === void 0 ? noop : _b, _c = _a.open, open = _c === void 0 ? false : _c, _d = _a.placement, placement = _d === void 0 ? 'center' : _d, props = __rest(_a, ["children", "onClickOverlay", "open", "placement"]);
    useScrollLock(open);
    return (React.createElement(Portal, null,
        React.createElement(StyledModalOverlay, { "$open": open, ref: ref },
            React.createElement(Modal.Scrim, { onClick: onClickOverlay }),
            React.createElement(StyledModalContainer, __assign({}, props, { placement: placement }),
                React.createElement(Modal.Content, null, children)))));
});
//# sourceMappingURL=FileExplorerModal.js.map