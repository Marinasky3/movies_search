import { DropzoneContentProps, DropzoneHookProps, DropzoneProps } from '../../Dropzone/Dropzone.types';
import { ValueId } from '../FileSelect.types';
interface QaTags {
    attachFiles?: string;
    fileToken?: (id: ValueId) => string;
}
export interface FileSelectDropzoneProps {
    contentRenderer?: (props: DropzoneContentProps) => React.ReactNode;
    hideDropzone?: boolean;
    onAttachFromProject: () => void;
    tooltip: DropzoneProps['tooltip'];
    accept: DropzoneHookProps['accept'];
    maxFileNumber?: number;
    maxFileSize?: number;
    minFileSize?: number;
    disabled: boolean;
    value: DropzoneHookProps['value'];
    onDrop: DropzoneHookProps['onDrop'];
    multiple: boolean;
    noDrag: boolean;
    qa?: QaTags;
}
export interface FileSelectDropzoneRef {
    clearErrors: () => void;
    attachButton: HTMLButtonElement | null;
}
export interface FileSelectDropzoneContentProps extends DropzoneContentProps {
    hideDropzone?: boolean;
    multiple: boolean;
    onAttachFromProject: () => void;
    tooltip?: React.ReactNode | string;
    qa?: QaTags;
}
export {};
