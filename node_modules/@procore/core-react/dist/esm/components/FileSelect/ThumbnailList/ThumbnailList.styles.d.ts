import { FixedSizeList as List } from 'react-window';
export declare const StyledThumbnailListContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledThumbnailList: import("styled-components").StyledComponent<typeof List, any, {}, never>;
export declare const StyledThumbnail: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../../Thumbnail").ThumbnailProps & import("../../../utils/types").DivAttributes & import("react").RefAttributes<HTMLDivElement>> & {
    Placeholder: import("react").ForwardRefExoticComponent<Omit<import("../../Thumbnail").ThumbnailProps, "src"> & {
        filename?: string | undefined;
        variant?: import("../../Thumbnail/DocumentIcon").DocumentIconVariant | undefined;
    } & import("../../../utils/types").DivAttributes & import("react").RefAttributes<HTMLDivElement>>;
}, any, {}, never>;
export declare const StyledProgress: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledThumbnailListItem: import("styled-components").StyledComponent<"div", any, {
    focused: boolean;
    error: boolean;
}, never>;
export declare const StyledDeleteIcon: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../../../utils/types").SpanAttributes & import("../../Icon").IconProps & import("react").RefAttributes<HTMLSpanElement>>, any, {}, never>;
