var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css } from 'styled-components';
import { colors } from '../../styles/colors';
import { getTypographyIntent } from '../Typography/Typography.styles';
export var StyledH1 = styled.h1(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  color: ", ";\n  ", "\n  margin: 0;\n"], ["\n  color: ", ";\n  ", "\n  margin: 0;\n"])), colors.gray15, getTypographyIntent('h1'));
export var StyledH2 = styled.h2(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  color: ", ";\n  ", "\n  margin: 0;\n"], ["\n  color: ", ";\n  ", "\n  margin: 0;\n"])), colors.gray15, getTypographyIntent('h2'));
export var StyledH3 = styled.h3(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  color: ", ";\n  ", "\n  margin: 0;\n"], ["\n  color: ", ";\n  ", "\n  margin: 0;\n"
    // TODO: do we want to pull the font size/margin
    // out to a const from Typography instead?
])), colors.gray15, getTypographyIntent('h3'));
// TODO: do we want to pull the font size/margin
// out to a const from Typography instead?
var bodyFontSize = 14;
var topMarginRules = function () {
    return css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    & + &,\n    p + &,\n    ul + & {\n      margin-top: ", "px;\n    }\n  "], ["\n    & + &,\n    p + &,\n    ul + & {\n      margin-top: ", "px;\n    }\n  "])), bodyFontSize);
};
export var StyledP = styled.p(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  color: ", ";\n  ", "\n  ", "\n"], ["\n  color: ", ";\n  ", "\n  ", "\n"])), colors.gray15, getTypographyIntent('body'), topMarginRules);
export var StyledUL = styled.ul(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  color: ", ";\n  margin: 0;\n  padding: 0;\n  ", "\n  ", "\n\n  padding-left: ", "px;\n\n  & > li {\n    list-style-type: disc;\n  }\n"], ["\n  color: ", ";\n  margin: 0;\n  padding: 0;\n  ", "\n  ", "\n\n  padding-left: ", "px;\n\n  & > li {\n    list-style-type: disc;\n  }\n"])), colors.gray15, getTypographyIntent('body'), topMarginRules, bodyFontSize);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
//# sourceMappingURL=Semantic.styles.js.map