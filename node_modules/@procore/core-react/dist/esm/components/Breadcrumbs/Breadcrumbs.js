var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { ChevronRight } from '@procore/core-icons/dist';
import React from 'react';
import { addSubcomponents } from '../../utils/addSubcomponents';
import { StyledContainer, StyledCrumb, StyledSeparator, } from './Breadcrumbs.styles';
var Breadcrumbs_ = React.forwardRef(function Breadcrumbs(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledContainer, __assign({}, props, { ref: ref }), React.Children.toArray(children)
        .filter(function (child) { return child; })
        .map(function (child, i) { return (React.createElement(React.Fragment, { key: "separator-".concat(i) },
        i > 0 && (React.createElement(StyledSeparator, null,
            React.createElement(ChevronRight, null))),
        child)); })));
});
export var Crumb = React.forwardRef(function Crumb(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledCrumb, __assign({}, props, { ref: ref }), children));
});
Breadcrumbs_.displayName = 'Breadcrumbs';
Crumb.displayName = 'Breadcrumbs.Crumb';
export var Breadcrumbs = addSubcomponents({
    Crumb: Crumb,
}, Breadcrumbs_);
//# sourceMappingURL=Breadcrumbs.js.map