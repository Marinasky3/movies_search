var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css } from 'styled-components';
import { borderRadius } from '../../styles/borderRadius';
import { colors } from '../../styles/colors';
import { focusable } from '../../styles/mixins';
import { spacing } from '../../styles/spacing';
import { Spinner } from '../Spinner';
import { spinnerDimensions } from '../Spinner/Spinner.styles';
import { defaultSpinnerSize } from '../Spinner/Spinner';
import { getTypographyIntent, typographyWeights, } from '../Typography/Typography.styles';
import { mediaIE11Hack } from '../../styles/media';
var deprecatedVariants = [
    'action-outline',
    'error-outline',
    'success-outline',
    'info-outline',
    'dropdown',
    'dropdown-secondary',
    'form',
];
var heights = {
    sm: 24,
    md: 36,
    lg: 48,
};
var paddingX = {
    sm: spacing.xs,
    md: 6,
    lg: spacing.md,
};
var typographySizes = {
    sm: 'small',
    md: 'body',
    lg: 'h3',
};
var buttonTextColors = {
    primary: {
        main: colors.white,
        disabled: colors.white,
    },
    secondary: {
        main: colors.gray15,
        disabled: colors.gray70,
    },
    tertiary: {
        main: colors.gray15,
        disabled: colors.gray70,
    },
};
export var buttonBGColors = {
    primary: {
        main: colors.orange50,
        hover: colors.orange45,
        disabled: colors.orange85,
    },
    secondary: {
        main: colors.gray90,
        hover: colors.gray85,
        disabled: colors.gray94,
    },
    tertiary: {
        main: 'transparent',
        hover: colors.gray90,
        disabled: 'transparent',
    },
};
export function getVariant(variant) {
    if (deprecatedVariants.includes(variant)) {
        return 'secondary';
    }
    return variant;
}
function getColors(loading, variant) {
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    background: ", ";\n\n    color: ", ";\n\n    &.active,\n    &:active,\n    &.focus,\n    &:focus,\n    &.hover,\n    &:hover {\n      background: ", ";\n      color: ", ";\n    }\n\n    &:disabled,\n    &[aria-disabled='true'] {\n      background: ", ";\n      color: ", ";\n    }\n  "], ["\n    background: ", ";\n\n    color: ", ";\n\n    &.active,\n    &:active,\n    &.focus,\n    &:focus,\n    &.hover,\n    &:hover {\n      background: ", ";\n      color: ", ";\n    }\n\n    &:disabled,\n    &[aria-disabled='true'] {\n      background: ", ";\n      color: ", ";\n    }\n  "])), loading
        ? buttonBGColors[getVariant(variant)].hover
        : buttonBGColors[getVariant(variant)].main, buttonTextColors[getVariant(variant)].main, buttonBGColors[getVariant(variant)].hover, buttonTextColors[getVariant(variant)].main, loading
        ? buttonBGColors[getVariant(variant)].hover
        : buttonBGColors[getVariant(variant)].disabled, buttonTextColors[getVariant(variant)].disabled);
}
export var StyledContent = styled.span(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  align-items: center;\n  display: flex;\n  overflow: hidden;\n"], ["\n  align-items: center;\n  display: flex;\n  overflow: hidden;\n"])));
export var StyledSpinner = styled(Spinner)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  box-sizing: border-box;\n  display: none;\n  position: absolute;\n  transform: translateZ(0);\n\n  @media ", " {\n    left: 50%;\n    top: 50%;\n    ", "\n  }\n"], ["\n  box-sizing: border-box;\n  display: none;\n  position: absolute;\n  transform: translateZ(0);\n\n  @media ", " {\n    left: 50%;\n    top: 50%;\n    ", "\n  }\n"])), mediaIE11Hack, function (_a) {
    var size = _a.size;
    var margin = -1 * (spinnerDimensions[size !== null && size !== void 0 ? size : defaultSpinnerSize] / 2);
    return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n        margin-left: ", "px;\n        margin-top: ", "px;\n      "], ["\n        margin-left: ", "px;\n        margin-top: ", "px;\n      "])), margin, margin);
});
export var StyledLabel = styled.span(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  overflow: hidden;\n  padding: 0 6px; // TODO one-off\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"], ["\n  overflow: hidden;\n  padding: 0 6px; // TODO one-off\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"])));
function getButtonStyles(block, disabled, loading, size, variant) {
    return css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n    ", "\n\n    ", "\n\n    ", "\n\n    align-items: center;\n    border-radius: ", "px;\n    border: 0;\n    box-sizing: border-box;\n    cursor: pointer;\n    display: inline-flex;\n    flex-direction: row;\n    flex-shrink: 0;\n    font-family: inherit;\n    font-weight: ", ";\n    height: ", "px;\n    justify-content: center;\n    margin: 0;\n    overflow: hidden;\n    padding: 0 ", "px;\n    position: relative;\n    pointer-events: ", ";\n    text-overflow: ellipsis;\n    user-select: ", ";\n    vertical-align: middle;\n    white-space: nowrap;\n    width: ", ";\n\n    [data-icon-prop='true'] {\n      pointer-events: none;\n      height: ", "px;\n      width: ", "px;\n    }\n\n    // TODO remove this legacy support for old Icon\n    [data-jss-placeholder='icon'] {\n      align-items: center;\n      display: flex;\n      height: ", "px;\n      justify-content: center;\n      width: ", "px;\n\n      svg {\n        pointer-events: none;\n        height: ", "px;\n        width: ", "px;\n      }\n    }\n\n    ", "\n  "], ["\n    ", "\n\n    ", "\n\n    ", "\n\n    align-items: center;\n    border-radius: ", "px;\n    border: 0;\n    box-sizing: border-box;\n    cursor: pointer;\n    display: inline-flex;\n    flex-direction: row;\n    flex-shrink: 0;\n    font-family: inherit;\n    font-weight: ", ";\n    height: ", "px;\n    justify-content: center;\n    margin: 0;\n    overflow: hidden;\n    padding: 0 ", "px;\n    position: relative;\n    pointer-events: ", ";\n    text-overflow: ellipsis;\n    user-select: ", ";\n    vertical-align: middle;\n    white-space: nowrap;\n    width: ", ";\n\n    [data-icon-prop='true'] {\n      pointer-events: none;\n      height: ", "px;\n      width: ", "px;\n    }\n\n    // TODO remove this legacy support for old Icon\n    [data-jss-placeholder='icon'] {\n      align-items: center;\n      display: flex;\n      height: ", "px;\n      justify-content: center;\n      width: ", "px;\n\n      svg {\n        pointer-events: none;\n        height: ", "px;\n        width: ", "px;\n      }\n    }\n\n    ", "\n  "])), getTypographyIntent(typographySizes[size]), focusable, getColors(loading, variant), borderRadius.md, typographyWeights.semibold, heights[size], paddingX[size], disabled || loading ? 'none' : 'inherit', disabled || loading ? 'none' : 'inherit', block && '100%', size === 'sm' ? 16 : 24, size === 'sm' ? 16 : 24, size === 'sm' ? 16 : 24, size === 'sm' ? 16 : 24, size === 'sm' ? 12 : 16, size === 'sm' ? 12 : 16, loading && css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n      ", " {\n        pointer-events: none;\n        visibility: hidden;\n      }\n\n      ", " {\n        display: block;\n      }\n    "], ["\n      ", " {\n        pointer-events: none;\n        visibility: hidden;\n      }\n\n      ", " {\n        display: block;\n      }\n    "])), StyledContent, StyledSpinner));
}
export var StyledButton = styled.button(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  ", "\n"], ["\n  ", "\n"])), function (_a) {
    var $block = _a.$block, disabled = _a.disabled, $loading = _a.$loading, $size = _a.$size, $variant = _a.$variant;
    return getButtonStyles($block, disabled, $loading, $size, $variant);
});
export var StyledLinkButton = styled.a(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  text-decoration: none;\n\n  ", "\n"], ["\n  text-decoration: none;\n\n  ", "\n"])), function (_a) {
    var $block = _a.$block, $disabled = _a.$disabled, $size = _a.$size, $variant = _a.$variant;
    return getButtonStyles($block, $disabled, false, $size, $variant);
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;
//# sourceMappingURL=Button.styles.js.map