import { ButtonSizes, ButtonVariant, LegacyButtonVariant } from './Button.types';
export declare const buttonBGColors: {
    [key in ButtonVariant]: {
        main: string;
        hover: string;
        disabled: string;
    };
};
export declare function getVariant(variant: LegacyButtonVariant): ButtonVariant;
export declare const StyledContent: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const StyledSpinner: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Spinner").SpinnerProps & import("react").RefAttributes<HTMLDivElement>>, any, {}, never>;
export declare const StyledLabel: import("styled-components").StyledComponent<"span", any, {}, never>;
interface StyledButtonProps {
    disabled: boolean;
    $block: boolean;
    $loading: boolean;
    $size: ButtonSizes;
    $variant: LegacyButtonVariant;
}
export declare const StyledButton: import("styled-components").StyledComponent<"button", any, StyledButtonProps, never>;
interface StyledLinkButtonProps extends Pick<StyledButtonProps, '$block' | '$size' | '$variant'> {
    $disabled: boolean;
}
export declare const StyledLinkButton: import("styled-components").StyledComponent<"a", any, StyledLinkButtonProps, never>;
export {};
