var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { colors } from '../../../styles/colors';
var StyledCell = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 48px;\n  border-bottom: 1px dashed ", ";\n  border-right: 1px dashed ", ";\n"], ["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 48px;\n  border-bottom: 1px dashed ", ";\n  border-right: 1px dashed ", ";\n"])), colors.gray90, colors.gray90);
var StyledGrid = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  align-items: center;\n  justify-content: center;\n  display: grid;\n  gap: 0;\n  border-top: 1px dashed ", ";\n  border-left: 1px dashed ", ";\n  grid-template-columns: repeat(\n    ", ",\n    minmax(0, 1fr)\n  );\n  height: 100%;\n  width: 100%;\n  ", " {\n    min-height: ", "px;\n    overflow: hidden;\n  }\n"], ["\n  align-items: center;\n  justify-content: center;\n  display: grid;\n  gap: 0;\n  border-top: 1px dashed ", ";\n  border-left: 1px dashed ", ";\n  grid-template-columns: repeat(\n    ", ",\n    minmax(0, 1fr)\n  );\n  height: 100%;\n  width: 100%;\n  ", " {\n    min-height: ", "px;\n    overflow: hidden;\n  }\n"])), colors.gray90, colors.gray90, function (_a) {
    var _b = _a.columns, columns = _b === void 0 ? 1 : _b;
    return columns;
}, StyledCell, function (_a) {
    var minHeight = _a.minHeight;
    return minHeight;
});
var StyledGridContainer = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  height: 100%;\n  padding: 24px;\n  width: 100%;\n"], ["\n  height: 100%;\n  padding: 24px;\n  width: 100%;\n"])));
export var StoryGrid = function StoryGrid(_a) {
    var children = _a.children, _b = _a.columns, columns = _b === void 0 ? 1 : _b, _c = _a.minHeight, minHeight = _c === void 0 ? 100 : _c, props = __rest(_a, ["children", "columns", "minHeight"]);
    return (React.createElement(StyledGridContainer, __assign({}, props),
        React.createElement(StyledGrid, { columns: columns, minHeight: minHeight }, React.Children.map(children, function (child, i) {
            return React.createElement(StyledCell, null, child);
        }))));
};
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=StoryGrid.js.map