export var mockData = function (files) {
    return {
        dataTransfer: {
            files: files,
            items: files.map(function (file) { return ({
                kind: 'file',
                type: file.type,
                getAsFile: function () { return file; },
            }); }),
            types: ['Files'],
        },
    };
};
export var getMockFiles = function (filesAmount, extension, type) {
    if (filesAmount === void 0) { filesAmount = 1; }
    if (extension === void 0) { extension = 'json'; }
    if (type === void 0) { type = 'application/json'; }
    var fileNames = ['foo', 'bar', 'baz', 'foobar', 'foobaz', 'bazbar'];
    return new Array(filesAmount).fill(null).map(function (_, index) {
        var name = fileNames[index % fileNames.length];
        var file = new File(['hello world'], "".concat(name, ".").concat(extension), {
            type: type,
        });
        return file;
    });
};
export var getMockEvent = function (eventName, files) {
    var event = new Event(eventName, { bubbles: true });
    var data = mockData(files);
    Object.assign(event, data);
    return event;
};
//# sourceMappingURL=dropzoneMockData.js.map