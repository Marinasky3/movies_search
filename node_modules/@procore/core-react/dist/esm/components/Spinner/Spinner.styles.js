var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css, keyframes } from 'styled-components';
import { colors } from '../../styles/colors';
import { spacing } from '../../styles/spacing';
import { getTypographyIntent } from '../Typography/Typography.styles';
var duration = 1.5;
var durationOffset = 0.5;
var transition = '0.5s ease';
var zContainer = 3;
var zOverlay = 2;
var dash = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  0% {\n    stroke-dasharray: 1, 150;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -124;\n  }\n"], ["\n  0% {\n    stroke-dasharray: 1, 150;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -124;\n  }\n"])));
export var StyledCircle = styled.circle(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  animation: ", " ", "s ease-in-out infinite;\n  stroke-linecap: round;\n"], ["\n  animation: ", " ", "s ease-in-out infinite;\n  stroke-linecap: round;\n"])), dash, duration);
export var spinnerDimensions = {
    xs: spacing.md,
    sm: spacing.lg,
    md: spacing.xl,
    lg: 48,
};
var spinnerStroke = {
    xs: 10,
    sm: 8,
    md: 8,
    lg: 6,
};
function getHeightWidthStroke(_a) {
    var $size = _a.$size;
    var dimension = spinnerDimensions[$size];
    var strokeWidth = spinnerStroke[$size];
    return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    height: ", "px;\n    width: ", "px;\n    stroke-width: ", "px;\n  "], ["\n    height: ", "px;\n    width: ", "px;\n    stroke-width: ", "px;\n  "])), dimension, dimension, strokeWidth);
}
function getStrokeColor(_a) {
    var $color = _a.$color, $variant = _a.$variant;
    if ($color) {
        return css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n      stroke: ", ";\n    "], ["\n      stroke: ", ";\n    "])), colors[$color]);
    }
    return css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    stroke: ", ";\n  "], ["\n    stroke: ", ";\n  "])), $variant && $variant === 'light' ? colors.white : colors.gray60);
}
export var StyledSpinnerContainer = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  border-radius: 100%;\n  box-sizing: border-box;\n  display: block;\n  flex-shrink: 0;\n  position: relative;\n\n  ", "\n\n  ", " {\n    ", "\n  }\n"], ["\n  border-radius: 100%;\n  box-sizing: border-box;\n  display: block;\n  flex-shrink: 0;\n  position: relative;\n\n  ", "\n\n  ", " {\n    ", "\n  }\n"])), getHeightWidthStroke, StyledCircle, getStrokeColor);
export var StyledSpinnerOverlayLabel = styled.span(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  ", "\n  color: ", ";\n\n  display: block;\n  min-height: 20px;\n  padding-top: ", "px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: opacity ", ";\n"], ["\n  ", "\n  color: ", ";\n\n  display: block;\n  min-height: 20px;\n  padding-top: ", "px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: opacity ", ";\n"])), getTypographyIntent('body'), colors.gray15, spacing.md, transition);
var rotate = keyframes(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  to {\n    transform: rotate(360deg);\n  }\n"], ["\n  to {\n    transform: rotate(360deg);\n  }\n"])));
export var StyledSpinnerSVG = styled.svg(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  animation: ", " ", "s linear infinite;\n  fill: none;\n  height: 100%;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 2;\n"], ["\n  animation: ", " ", "s linear infinite;\n  fill: none;\n  height: 100%;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 2;\n"])), rotate, duration - durationOffset);
var startsWithNoInteraction = css(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity ", ";\n"], ["\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity ", ";\n"])), transition);
export var StyledSpinnerOverlay = styled.div(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n  ", "\n\n  background-color: ", ";\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: ", ";\n"], ["\n  ", "\n\n  background-color: ", ";\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: ", ";\n"])), startsWithNoInteraction, colors.white, zOverlay);
export var StyledSpinnerContainerWithLabel = styled.div(templateObject_12 || (templateObject_12 = __makeTemplateObject(["\n  ", "\n\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  max-height: 400px;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: ", ";\n"], ["\n  ", "\n\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  max-height: 400px;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: ", ";\n"])), startsWithNoInteraction, zContainer);
export var StyledSpinnerOverlayContainer = styled.div(templateObject_14 || (templateObject_14 = __makeTemplateObject(["\n  min-height: 150px;\n  position: relative;\n\n  ", "\n"], ["\n  min-height: 150px;\n  position: relative;\n\n  ", "\n"])), function (_a) {
    var $loading = _a.$loading;
    if ($loading) {
        return css(templateObject_13 || (templateObject_13 = __makeTemplateObject(["\n        ", ", ", " {\n          opacity: 1;\n          pointer-events: auto;\n        }\n      "], ["\n        ", ", ", " {\n          opacity: 1;\n          pointer-events: auto;\n        }\n      "])), StyledSpinnerContainerWithLabel, StyledSpinnerOverlay);
    }
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14;
//# sourceMappingURL=Spinner.styles.js.map