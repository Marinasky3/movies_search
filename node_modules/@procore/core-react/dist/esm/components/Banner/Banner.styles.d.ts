import { FlexProps } from '../../layouts/Flex';
import { BannerProps } from './Banner.types';
export declare const StyledBannerContainer: import("styled-components").StyledComponent<"div", any, {
    isExpandable: boolean;
} & BannerProps, never>;
export declare const StyledContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledExpandableContentContainer: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../../utils/types").DivAttributes & FlexProps & import("react").RefAttributes<HTMLDivElement>>, any, {}, never>;
export declare const StyledExpandableContent: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../../utils/types").DivAttributes & FlexProps & import("react").RefAttributes<HTMLDivElement>>, any, FlexProps & {
    isOverflowingY: boolean;
}, never>;
export declare const StyledTitle: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledBody: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledIconContainer: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledActionsTrigger: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Dropdown/Dropdown.types").DropdownButtonProps & import("react").RefAttributes<HTMLButtonElement>>, any, {}, never>;
export declare const StyledAction: import("styled-components").StyledComponent<"div", any, {}, never>;
