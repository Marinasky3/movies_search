import { Placement, Props } from '../../utils/types';
/**
 * @deprecated Please use the `active` and `disabled` props
 */
export declare const segmentedControllerSegmentVariant: {
    readonly active: "active";
    readonly disabled: "disabled";
    readonly none: "";
};
export interface SegmentedControllerProps extends Props {
    /**
     * The segment is active
     * */
    active?: number;
    /**
     * The segment controller is block sized
     */
    block?: boolean;
    /**
     * Disables all segments in the controller
     */
    disabled?: boolean;
    onChange?: (active: number) => void;
    /**
     * @deprecated Please use the `block` prop
     */
    variant?: 'block' | '';
}
export interface SegmentedControllerSegmentProps extends Props {
    /**
     * The segment is active
     */
    active?: boolean;
    /**
     * Is the segment disabled
     */
    disabled?: boolean;
    /**
     * To change the tooltip placement
     */
    placement?: Placement;
    /**
     * The tooltip we want to display on hover
     */
    tooltip?: React.ReactNode;
}
export interface SegmentedControllerTooltipProps extends Props {
    overlay?: any;
    placement: Placement;
}
