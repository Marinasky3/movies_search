var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { useDeprecation } from '../../effects/Deprecation';
import { colors } from '../../styles/colors';
import { getTypographyIntent } from '../Typography/Typography.styles';
var variantColorMap = {
    required: 'orange50',
    error: 'red50',
    pagination: 'gray45',
};
var StyledNotation = styled.i(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  color: ", ";\n  font-style: italic;\n"], ["\n  ", "\n  color: ", ";\n  font-style: italic;\n"
    /**
     * @deprecated Please use `<Typography italic />` component for plain text
     * notations or the `<Required />` component for required notations. `Notation`
     * will be removed in a future version.
     */
])), getTypographyIntent('small'), function (_a) {
    var variant = _a.variant;
    return variant ? colors[variantColorMap[variant]] : colors.gray15;
});
/**
 * @deprecated Please use `<Typography italic />` component for plain text
 * notations or the `<Required />` component for required notations. `Notation`
 * will be removed in a future version.
 */
export var Notation = React.forwardRef(function Notation(_a, ref) {
    var children = _a.children, _b = _a.variant, variant = _b === void 0 ? '' : _b, props = __rest(_a, ["children", "variant"]);
    useDeprecation({ oldThing: 'Notation', newThing: 'Typography or Required' });
    return (React.createElement(StyledNotation, __assign({}, props, { variant: variant, ref: ref }), children));
});
Notation.displayName = 'Notation';
export default Notation;
var templateObject_1;
//# sourceMappingURL=Notation.js.map