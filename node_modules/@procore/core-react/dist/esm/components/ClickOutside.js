var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { useEventListener } from '../effects/EventListener';
import { mergeRefs } from '../effects/mergeRefs';
export var ClickOutside = React.forwardRef(function ClickOutside(_a, ref) {
    var children = _a.children, container = _a.container, containerClass = _a.containerClass, onClickOutside = _a.onClickOutside, props = __rest(_a, ["children", "container", "containerClass", "onClickOutside"]);
    var Component = container || 'div';
    var scope = React.useRef(null);
    // need useCallback?
    var handler = function (event) {
        var current = scope.current;
        if (!current) {
            return;
        }
        onClickOutside && !current.contains(event.target) && onClickOutside(event);
    };
    var options = { capture: true };
    useEventListener({ event: 'click', handler: handler, options: options });
    useEventListener({ event: 'touchend', handler: handler, options: options });
    return (React.createElement(Component, __assign({}, props, { className: containerClass, ref: mergeRefs(ref, scope) }), children));
});
ClickOutside.displayName = 'ClickOutside';
export default ClickOutside;
//# sourceMappingURL=ClickOutside.js.map