var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { StyledCheckboxContainer, StyledCheckboxInput, StyledCheckboxLabel, } from './Checkbox.styles';
export var Checkbox = React.forwardRef(function Checkbox(_a, ref) {
    var checked = _a.checked, children = _a.children, className = _a.className, _b = _a.error, error = _b === void 0 ? false : _b, _c = _a.indeterminate, indeterminate = _c === void 0 ? false : _c, style = _a.style, props = __rest(_a, ["checked", "children", "className", "error", "indeterminate", "style"]);
    return (React.createElement(StyledCheckboxContainer, { className: className, style: style },
        React.createElement(StyledCheckboxInput, __assign({}, props, { type: "checkbox", checked: checked, "$error": error, "$indeterminate": indeterminate, ref: ref })),
        React.createElement(StyledCheckboxLabel, null, children)));
});
Checkbox.displayName = 'Checkbox';
//# sourceMappingURL=Checkbox.js.map