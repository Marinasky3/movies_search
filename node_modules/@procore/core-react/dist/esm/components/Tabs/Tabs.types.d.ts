import { Props } from '../../utils/types';
export declare const tabVariant: {
    readonly none: "";
    readonly active: "active";
    readonly dark: "dark";
    readonly dropdown: "dropdown";
    readonly hover: "hover";
    readonly overflowing: "overflowing";
};
declare type TabVariant = typeof tabVariant[keyof typeof tabVariant];
export interface TabProps extends Props {
    /**
     * The tab is active
     */
    active?: boolean;
    /**
     * Whether or not tab is in dark mode
     * @private
     */
    dark?: boolean;
    /**
     * @private
     */
    onLayout?: Function;
    /**
     * @deprecated This was never intended to be a public facing API and does not
     * do anything. It will be removed in the future.
     */
    dropdown?: boolean;
    /**
     * @deprecated This was never intended to be a public facing API and does not
     * do anything. It will be removed in the future.
     */
    overflowing?: boolean;
    /**
     * @deprecated please use the `active` and `dark` props to configure style. The
     * `dropdown`, `hover`, and `overflowing` variants were only for internal use
     * and should not be used in clients
     */
    variant?: TabVariant;
}
export interface QaTags {
    more?: string;
}
export interface TabsProps extends Props {
    dark?: boolean;
    qa?: QaTags;
}
export interface TabDropdownProps extends Props {
    visible?: boolean;
    qa?: QaTags;
}
export {};
