var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { Anchor } from '../state/Anchor';
import { Portal } from './Portal';
export var Overlay = React.forwardRef(function Overlay(_a, overlayRef) {
    var _b = _a.canFlip, canFlip = _b === void 0 ? true : _b, children = _a.children, _c = _a.padding, padding = _c === void 0 ? 2 : _c, _d = _a.placement, placement = _d === void 0 ? 'bottom' : _d, _e = _a.shrinkOverlay, shrinkOverlay = _e === void 0 ? false : _e, targetRef = _a.targetRef, container = _a.container;
    var ref = overlayRef || React.useRef(null);
    return (React.createElement(Portal, { container: container },
        React.createElement(Anchor, __assign({}, {
            canFlip: canFlip,
            dependencies: [children],
            onLayout: function (anchor) {
                if (!ref.current) {
                    return;
                }
                var left = Math.floor(anchor.left);
                var top = Math.floor(anchor.top);
                ref.current.style.transform = "translateZ(0) translate(".concat(left, "px, ").concat(top, "px)");
            },
            overlayRef: ref,
            padding: padding,
            placement: placement,
            targetRef: targetRef,
            shrinkOverlay: shrinkOverlay,
        }), children)));
});
//# sourceMappingURL=Overlay.js.map