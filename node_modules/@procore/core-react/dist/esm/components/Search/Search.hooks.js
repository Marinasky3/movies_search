import React from 'react';
// TODO remove this and do a breaking change on Search to `useImperativeHandle`
// to support controlled/uncontrolled behavior
export function useSearch(_a) {
    var _b = _a.onChange, externalOnChange = _b === void 0 ? function () { } : _b, _c = _a.onClear, onClear = _c === void 0 ? function () { } : _c, _d = _a.onSubmit, onSubmit = _d === void 0 ? function () { } : _d, _e = _a.typeahead, typeahead = _e === void 0 ? false : _e, _f = _a.initialValue, initialValue = _f === void 0 ? '' : _f;
    var _g = React.useState(initialValue), value = _g[0], setValue = _g[1];
    React.useEffect(function () {
        setValue(initialValue);
    }, [initialValue]);
    var isEmpty = value === '';
    var showSearch = !typeahead || (typeahead && isEmpty);
    function clear() {
        setValue('');
        onChange({ target: { value: '' } });
        onClear();
    }
    function submit() {
        onSubmit(value);
    }
    function onChange(e) {
        setValue(e.target.value);
        externalOnChange(e);
    }
    function onKeyDown(_a) {
        var key = _a.key;
        if (key === 'Enter') {
            submit();
        }
        else if (key === 'Escape' || key === 'Esc') {
            clear();
        }
    }
    return {
        clear: clear,
        domHandlers: {
            onChange: onChange,
            onKeyDown: onKeyDown,
        },
        isEmpty: isEmpty,
        showSearch: showSearch,
        submit: submit,
        value: value,
    };
}
//# sourceMappingURL=Search.hooks.js.map