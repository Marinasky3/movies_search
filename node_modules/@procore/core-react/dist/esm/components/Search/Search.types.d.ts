import { ChangeEvent } from '../../state/TextEntry';
import { InputProps } from '../Input';
export interface SearchHookConfig {
    initialValue?: string;
    /**
     * @deprecated
     *
     * The `onChange` prop has been deprecated and will be removed in a future version.
     *
     * A new component, `Typeahead`, has been introduced with specific UX for typeahead-like
     * behavior. Please use this component instead.
     *
     * **Before**
     *
     * <Search typeahead onChange={() => { ... }} />
     *
     * **After**
     *
     * <Typeahead onChange={() => { ... }} />
     *
     * @deprecatedSince 10.20.0
     *
     * @see https://core.procore.com/latest/web/components/typeahead/react/
     */
    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;
    onClear?: () => void;
    /**
     * <div>Input handler for search variant</div>
     * <CodeBlock>(value: string) => void</CodeBlock>
     */
    onSubmit?: (value: string) => void;
    /**
     * @deprecated
     *
     * The `typeahead` prop has been deprecated and will be removed in a future version.
     *
     * A new component, `Typeahead`, has been introduced with specific UX for typeahead-like
     * behavior. Please use this component instead.
     *
     * **Before**
     *
     * <Search typeahead onChange={() => { ... }} />
     *
     * **After**
     *
     * <Typeahead onChange={() => { ... }} />
     *
     * @deprecatedSince 10.20.0
     *
     * @see https://core.procore.com/latest/web/components/typeahead/react/
     */
    typeahead?: boolean;
}
export interface SearchHook {
    domHandlers: {
        onChange: (e: ChangeEvent) => void;
        onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => void;
    };
    clear: () => void;
    isEmpty: boolean;
    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;
    showSearch: boolean;
    submit: () => void;
    value: string;
}
export interface SearchProps extends Omit<InputProps, 'onSubmit'>, SearchHookConfig {
    autoFocus?: boolean;
    usingHook?: SearchHook;
    /**
     * Initial value string
     * @default ''
     */
    value?: string;
}
