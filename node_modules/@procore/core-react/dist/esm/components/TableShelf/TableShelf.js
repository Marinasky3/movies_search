var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { addSubcomponents } from '../../utils/addSubcomponents';
import { StyledBodyRow, StyledHead, StyledHeadCell, StyledShelf, StyledBodyCell, } from './TableShelf.styles';
export var Shelf = React.forwardRef(function Shelf(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledShelf, __assign({ ref: ref }, props), children));
});
export var Head = React.forwardRef(function Head(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledHead, { ref: ref },
        React.createElement(StyledBodyRow, __assign({}, props), children)));
});
export var HeadCell = React.forwardRef(function HeadCell(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledHeadCell, __assign({ ref: ref }, props), children));
});
export var Body = React.forwardRef(function Body(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement("div", __assign({ ref: ref }, props), children));
});
export var BodyCell = React.forwardRef(function BodyCell(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledBodyCell, __assign({ ref: ref }, props), children));
});
export var BodyRow = React.forwardRef(function BodyRow(_a, ref) {
    var children = _a.children, props = __rest(_a, ["children"]);
    return (React.createElement(StyledBodyRow, __assign({ ref: ref }, props), children));
});
Shelf.displayName = 'Shelf';
Body.displayName = 'Shelf.Body';
BodyCell.displayName = 'Shelf.BodyCell';
BodyRow.displayName = 'Shelf.BodyRow';
Head.displayName = 'Shelf.Head';
HeadCell.displayName = 'Shelf.HeadCell';
export var TableShelf = addSubcomponents({
    Body: Body,
    BodyCell: BodyCell,
    BodyRow: BodyRow,
    Head: Head,
    HeadCell: HeadCell,
}, Shelf);
export default TableShelf;
//# sourceMappingURL=TableShelf.js.map