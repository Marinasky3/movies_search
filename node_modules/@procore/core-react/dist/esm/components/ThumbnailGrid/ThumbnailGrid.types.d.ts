import { ThumbnailProps } from '../Thumbnail/Thumbnail.types';
export interface ThumbnailGridGroup {
    id: string | number;
    title: string;
}
export interface LoaderGridItem {
    isFetching: boolean;
}
export declare type GridCellData = ThumbnailGridItem | Pick<ThumbnailGridGroup, 'title'> | LoaderGridItem;
export interface QaTags {
    grid?: string;
    thumbnail?: (id: string | number) => string;
}
export interface ThumbnailGridProps<T extends ThumbnailGridItem = ThumbnailGridItem> {
    selected: T[];
    items: T[];
    groups?: ThumbnailGridGroup[];
    title?: string;
    gridWidth?: number;
    gridHeight?: number;
    onSelect?: (item: T) => void;
    onDeselect?: (item: T) => void;
    disableSelection?: {
        value: boolean;
        tooltip: string;
    };
    isFetching?: boolean;
    loadMoreItems?: () => Promise<any>;
    qa?: QaTags;
}
export interface ThumbnailGridItem {
    id: string | number;
    src?: ThumbnailProps['src'];
    name?: ThumbnailProps['caption'];
    label?: ThumbnailProps['label'];
    groupId?: string | number;
}
