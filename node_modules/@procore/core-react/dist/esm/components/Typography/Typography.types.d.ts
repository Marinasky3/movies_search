import { Color } from '../../styles/colors';
import { Props } from '../../utils/types';
export declare type Intent = 'h1' | 'h2' | 'h3' | 'body' | 'small';
export declare type Weight = 'regular' | 'semibold' | 'bold';
export interface TypographyProps extends Props {
    /**
     * <span>
     *  When children are a string or multiple elements, they will be wrapped
     *  by a <Code>span</Code>. When it is a single element, classnames will
     *  be added to it instead
     * </span>
     * */
    children: React.ReactNode;
    /**
     * <span>
     *  Change the HTML tag. This{' '}
     *  <Link href="https://styled-components.com/docs/api#as-polymorphic-prop">
     *    prop is from styled-components
     *  </Link>
     *  .<em>WARNING</em>: If using TypeScript, it will not switch types and
     *  some props may error. You can add <Code>// @ts-expect-error</Code>.
     *  See{' '}
     *  <Link href="https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30117">
     *    styled-components issue
     *  </Link>
     *  .
     * </span>
     */
    as?: string | React.ComponentType<any>;
    /**
     * <span>
     *  Changes font color, can be any of the{' '}
     *  <Link to="/web/style/colors/#hsl-palette">HSL Palette</Link> css
     *  strings
     * </span>
     * @default 'gray15'
     */
    color?: Color;
    /**
     * Changes the size of the font
     */
    intent?: Intent;
    /**
     * Applies `font-style: italic` if enabled
     */
    italic?: boolean;
    /**
     * Changes font weight if it is supported in the design system
     */
    weight?: Weight;
}
