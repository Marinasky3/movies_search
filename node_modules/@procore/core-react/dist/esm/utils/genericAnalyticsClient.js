import { detectPrng, factory } from 'ulid';
import { mergeDeepRight } from 'ramda';
var prng = detectPrng(true); // pass `true` to allow insecure Math.rand
var ulid = factory(prng);
var Analytics = /** @class */ (function () {
    function Analytics(_a) {
        var _b = _a.bodyParams, bodyParams = _b === void 0 ? {} : _b, client = _a.client, endpoint = _a.endpoint, _c = _a.headers, headers = _c === void 0 ? {} : _c;
        this.endpoint = endpoint;
        this.headers = headers;
        this.bodyParams = bodyParams;
        this.client = client;
        this.trackEvent = this.trackEvent.bind(this);
    }
    Analytics.prototype.trackEvent = function (event, properties) {
        if (properties === void 0) { properties = {}; }
        var time = new Date();
        return this.client(this.endpoint, {
            method: 'POST',
            headers: this.headers,
            body: JSON.stringify(mergeDeepRight({
                key: event,
                properties: properties,
                timestamp: time,
                event_id: ulid(),
                page_id: ulid(),
            }, this.bodyParams)),
        });
    };
    return Analytics;
}());
export default Analytics;
//# sourceMappingURL=genericAnalyticsClient.js.map