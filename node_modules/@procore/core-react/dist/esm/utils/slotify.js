var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
export var slotify = function (rawChildren, slotMap) {
    var serializedConfig = Object.entries(slotMap);
    var slots = serializedConfig.reduce(function (acc, _a) {
        var slotKey = _a[0];
        acc[slotKey] = {
            slotProps: {},
            slotChildren: null,
            slotRef: null,
        };
        return acc;
    }, {});
    React.Children.toArray(rawChildren).forEach(function (child) {
        var slot = child;
        if (!slot || !slot.type) {
            return;
        }
        var slotConfig = serializedConfig.find(function (_a) {
            var type = _a[1];
            return slot.type === type;
        });
        if (!slotConfig) {
            return;
        }
        var slotKey = slotConfig[0];
        var _a = slot.props, children = _a.children, props = __rest(_a, ["children"]);
        slots[slotKey] = {
            slotChildren: children,
            slotProps: props,
            slotRef: slot.ref,
        };
    });
    return slots;
};
//# sourceMappingURL=slotify.js.map