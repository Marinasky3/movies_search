var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { useEventListener } from './EventListener';
function bindHotkeys(_a) {
    var _b = _a.dependencies, dependencies = _b === void 0 ? [] : _b, _c = _a.event, event = _c === void 0 ? 'keydown' : _c, _d = _a.handler, handler = _d === void 0 ? function () { } : _d, key = _a.key, preventDefault = _a.preventDefault, stopPropagation = _a.stopPropagation;
    return function (scope) {
        var keys = Array.isArray(key) ? key : [key];
        useEventListener({
            dependencies: dependencies,
            event: event,
            handler: function (e) {
                if (keys.includes(e.key)) {
                    handler(e);
                    preventDefault && e.preventDefault();
                    stopPropagation && e.stopPropagation();
                }
            },
            scope: scope,
        });
    };
}
export function useHotkey(_a) {
    var _b = _a.scope, scope = _b === void 0 ? window : _b, config = __rest(_a, ["scope"]);
    var scopes = Array.isArray(scope) ? scope : [scope];
    scopes.forEach(bindHotkeys(config));
}
//# sourceMappingURL=Hotkey.js.map