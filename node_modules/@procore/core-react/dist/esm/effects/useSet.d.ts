export interface SetHookConfig<T> {
    initialValue?: Set<T>;
    onChange?: (newCollection: Set<T>) => void;
    onAdd?: (item: T) => void;
    onRemove?: (item: T) => void;
}
export declare function useSet<T>({ initialValue, onChange, onAdd, onRemove, }?: SetHookConfig<T>): {
    collection: Set<T>;
    setCollection: (newCollection: Set<T>) => void;
    has: (item: T) => boolean;
    add: (item: T) => void;
    remove: (item: T) => void;
    removeAll: () => void;
    toggle: (item: T) => void;
};
