var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { colors } from './colors';
import { css } from 'styled-components';
export function arrowUp(size, color) {
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    border-bottom: ", "px solid ", ";\n    border-left: ", "px solid transparent;\n    border-right: ", "px solid transparent;\n    border-top: 0;\n  "], ["\n    border-bottom: ", "px solid ", ";\n    border-left: ", "px solid transparent;\n    border-right: ", "px solid transparent;\n    border-top: 0;\n  "])), size, colors[color], size, size);
}
export function arrowDown(size, color) {
    return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    border-bottom: 0;\n    border-left: ", "px solid transparent;\n    border-right: ", "px solid transparent;\n    border-top: ", "px solid ", ";\n  "], ["\n    border-bottom: 0;\n    border-left: ", "px solid transparent;\n    border-right: ", "px solid transparent;\n    border-top: ", "px solid ", ";\n  "])), size, size, size, colors[color]);
}
export function arrowRight(size, color) {
    return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    border-bottom: ", "px solid transparent;\n    border-left: ", "px solid ", ";\n    border-right: 0;\n    border-top: ", "px solid transparent;\n  "], ["\n    border-bottom: ", "px solid transparent;\n    border-left: ", "px solid ", ";\n    border-right: 0;\n    border-top: ", "px solid transparent;\n  "])), size, size, colors[color], size);
}
export function arrowLeft(size, color) {
    return css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    border-bottom: ", "px solid transparent;\n    border-left: 0;\n    border-right: ", "px solid ", ";\n    border-top: ", "px solid transparent;\n  "], ["\n    border-bottom: ", "px solid transparent;\n    border-left: 0;\n    border-right: ", "px solid ", ";\n    border-top: ", "px solid transparent;\n  "])), size, size, colors[color], size);
}
export function getArrowPlacement(size, backgroundColor, placement) {
    var arrowVisuals;
    if (placement === 'top' ||
        placement === 'top-left' ||
        placement === 'top-right') {
        arrowVisuals = css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n      margin-bottom: ", "px;\n\n      &::after {\n        ", "\n        top: 100%;\n      }\n    "], ["\n      margin-bottom: ", "px;\n\n      &::after {\n        ", "\n        top: 100%;\n      }\n    "])), size, arrowDown(size, backgroundColor));
    }
    if (placement === 'bottom' ||
        placement === 'bottom-left' ||
        placement === 'bottom-right') {
        arrowVisuals = css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n      margin-top: ", "px;\n\n      &::after {\n        ", "\n        bottom: 100%;\n      }\n    "], ["\n      margin-top: ", "px;\n\n      &::after {\n        ", "\n        bottom: 100%;\n      }\n    "])), size, arrowUp(size, backgroundColor));
    }
    if (placement === 'left' ||
        placement === 'left-bottom' ||
        placement === 'left-top') {
        arrowVisuals = css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n      margin-right: ", "px;\n\n      &::after {\n        ", "\n        left: 100%;\n      }\n    "], ["\n      margin-right: ", "px;\n\n      &::after {\n        ", "\n        left: 100%;\n      }\n    "])), size, arrowRight(size, backgroundColor));
    }
    if (placement === 'right' ||
        placement === 'right-bottom' ||
        placement === 'right-top') {
        arrowVisuals = css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n      margin-left: ", "px;\n\n      &::after {\n        ", "\n        right: 100%;\n      }\n    "], ["\n      margin-left: ", "px;\n\n      &::after {\n        ", "\n        right: 100%;\n      }\n    "])), size, arrowLeft(size, backgroundColor));
    }
    var arrowAdjustments;
    if (placement === 'top-left' || placement === 'bottom-left') {
        arrowAdjustments = css(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n      &::after {\n        left: 18px;\n      }\n    "], ["\n      &::after {\n        left: 18px;\n      }\n    "])));
    }
    if (placement === 'top' || placement === 'bottom') {
        arrowAdjustments = css(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n      &::after {\n        left: 50%;\n        margin-left: -", "px;\n      }\n    "], ["\n      &::after {\n        left: 50%;\n        margin-left: -", "px;\n      }\n    "])), size);
    }
    if (placement === 'top-right' || placement === 'bottom-right') {
        arrowAdjustments = css(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n      &::after {\n        right: 18px;\n      }\n    "], ["\n      &::after {\n        right: 18px;\n      }\n    "])));
    }
    if (placement === 'left-bottom' || placement === 'right-bottom') {
        arrowAdjustments = css(templateObject_12 || (templateObject_12 = __makeTemplateObject(["\n      &::after {\n        bottom: 8px;\n      }\n    "], ["\n      &::after {\n        bottom: 8px;\n      }\n    "])));
    }
    if (placement === 'left' || placement === 'right') {
        arrowAdjustments = css(templateObject_13 || (templateObject_13 = __makeTemplateObject(["\n      &::after {\n        top: 50%;\n        margin-top: -", "px;\n      }\n    "], ["\n      &::after {\n        top: 50%;\n        margin-top: -", "px;\n      }\n    "])), size);
    }
    if (placement === 'left-top' || placement === 'right-top') {
        arrowAdjustments = css(templateObject_14 || (templateObject_14 = __makeTemplateObject(["\n      &::after {\n        top: 8px;\n      }\n    "], ["\n      &::after {\n        top: 8px;\n      }\n    "])));
    }
    return css(templateObject_15 || (templateObject_15 = __makeTemplateObject(["\n    &:after {\n      content: '';\n      height: 0;\n      width: 0;\n      position: absolute;\n    }\n\n    ", "\n\n    ", "\n  "], ["\n    &:after {\n      content: '';\n      height: 0;\n      width: 0;\n      position: absolute;\n    }\n\n    ", "\n\n    ", "\n  "])), arrowVisuals, arrowAdjustments);
}
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15;
//# sourceMappingURL=arrows.js.map