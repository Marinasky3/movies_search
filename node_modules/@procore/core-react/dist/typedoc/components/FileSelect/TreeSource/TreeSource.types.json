{
  "FileTreeProps": {
    "name": "FileTreeProps",
    "properties": [
      {
        "name": "expanded",
        "required": false,
        "type": "<a class=\"tsd-signature-type\" data-tsd-kind=\"Type alias\">NodeId</a><span class=\"tsd-signature-symbol\">[]</span>",
        "typeDetail": "<a class=\"tsd-signature-type\" data-tsd-kind=\"Type alias\">NodeId</a><span class=\"tsd-signature-symbol\">[]</span>",
        "description": "Array of keys of initially expanded nodes",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Array of keys of initially expanded nodes</p>\n</div></div>",
        "sourceFile": "packages/core-react/src/components/Tree/Tree.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/Tree/Tree.types.ts#L106"
      },
      {
        "name": "icon",
        "required": true,
        "type": "<span class=\"tsd-signature-type\">ReactNode</span>",
        "typeDetail": "<span class=\"tsd-signature-type\">ReactNode</span>",
        "description": "",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><dl class=\"tsd-comment-tags\"><dt>deprecated</dt><dd><p>String icon variant is deprecated, use the React components directly from the <code>@procore/core-icons/dist</code> package</p>\n</dd></dl></div>",
        "deprecated": "String icon variant is deprecated, use the React components directly from the `@procore/core-icons/dist` package\n",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L32"
      },
      {
        "name": "isLoading",
        "required": false,
        "type": "<span class=\"tsd-signature-type\">boolean</span>",
        "typeDetail": "<span class=\"tsd-signature-type\">boolean</span>",
        "description": "Show/Hide loading indicator of the content",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Show/Hide loading indicator of the content</p>\n</div></div>",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L37"
      },
      {
        "name": "options",
        "required": true,
        "type": "<a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">[]</span>",
        "typeDetail": "<a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">[]</span>",
        "description": "",
        "descriptionHtml": "",
        "sourceFile": "packages/core-react/src/components/Tree/Tree.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/Tree/Tree.types.ts#L102"
      },
      {
        "name": "sourceId",
        "required": true,
        "type": "<span class=\"tsd-signature-type\">string</span>",
        "typeDetail": "<span class=\"tsd-signature-type\">string</span>",
        "description": "",
        "descriptionHtml": "",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L27"
      },
      {
        "name": "title",
        "required": true,
        "type": "<span class=\"tsd-signature-type\">string</span>",
        "typeDetail": "<span class=\"tsd-signature-type\">string</span>",
        "description": "",
        "descriptionHtml": "",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L28"
      },
      {
        "name": "getChildren",
        "required": false,
        "type": "Function",
        "typeDetail": "get<wbr/>Children<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">[]</span>",
        "description": "Should return an array of children nodes.\n<CodeBlock>{'(node: Node): Node[]'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Should return an array of children nodes.\n<CodeBlock>{&#39;(node: Node): Node[]&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "getLabel",
        "required": false,
        "type": "Function",
        "typeDetail": "get<wbr/>Label<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">string</span>",
        "description": "This function will be executed on each node. Should return{' '}\n<Code>label</Code> for row\n<CodeBlock>{'(node: Node): string'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>This function will be executed on each node. Should return{&#39; &#39;}\n<Code>label</Code> for row\n<CodeBlock>{&#39;(node: Node): string&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "getParentId",
        "required": false,
        "type": "Function",
        "typeDetail": "get<wbr/>Parent<wbr/>Id<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Type alias\">NodeId</a>",
        "description": "This function will be executed on each node. Should return parent{' '}\n<Code>Node</Code>\n<CodeBlock>{'(node: Node): NodeId'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>This function will be executed on each node. Should return parent{&#39; &#39;}\n<Code>Node</Code>\n<CodeBlock>{&#39;(node: Node): NodeId&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "getRoot",
        "required": false,
        "type": "Function",
        "typeDetail": "get<wbr/>Root<span class=\"tsd-signature-symbol\">(</span>data<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">[]</span><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a>",
        "description": "Function should return parent <Code>Root Node</Code>\n<CodeBlock>{'(): Node'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Function should return parent <Code>Root Node</Code>\n<CodeBlock>{&#39;(): Node&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "getType",
        "required": false,
        "type": "Function",
        "typeDetail": "get<wbr/>Type<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">NodeType</span>",
        "description": "This function will be executed on each node. Should return{' '}\n<Code>'branch'</Code> or <Code>'leaf'</Code>\n<CodeBlock>{'(node: Node): NodeType'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>This function will be executed on each node. Should return{&#39; &#39;}\n<Code>'branch'</Code> or <Code>'leaf'</Code>\n<CodeBlock>{&#39;(node: Node): NodeType&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "isExpandable",
        "required": false,
        "type": "Function",
        "typeDetail": "is<wbr/>Expandable<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">boolean</span>",
        "description": "Function of whether to enable tree node expansion/collapsing.\n<CodeBlock>{'(node: Node): boolean'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Function of whether to enable tree node expansion/collapsing.\n<CodeBlock>{&#39;(node: Node): boolean&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "isSelectable",
        "required": false,
        "type": "Function",
        "typeDetail": "is<wbr/>Selectable<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">boolean</span>",
        "description": "Function of whether to enable tree node selection.\n<CodeBlock>{'(node: Node): boolean'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Function of whether to enable tree node selection.\n<CodeBlock>{&#39;(node: Node): boolean&#39;}</CodeBlock></p>\n</div></div>"
      },
      {
        "name": "onChange",
        "required": false,
        "type": "Function",
        "typeDetail": "on<wbr/>Change<span class=\"tsd-signature-symbol\">(</span>nodes<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">[]</span><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">void</span>",
        "description": "Callback function fired with currently selected array of nodes.\n<CodeBlock>(nodes: DefaultNode[]) => void</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Callback function fired with currently selected array of nodes.\n<CodeBlock>(nodes: DefaultNode[]) =&gt; void</CodeBlock></p>\n</div></div>",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L26"
      },
      {
        "name": "onExpand",
        "required": false,
        "type": "Function",
        "typeDetail": "on<wbr/>Expand<span class=\"tsd-signature-symbol\">(</span>node<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Interface\">Node</a><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">Promise</span><span class=\"tsd-signature-symbol\">&lt;</span><span class=\"tsd-signature-type\">any</span><span class=\"tsd-signature-symbol\">&gt;</span>",
        "description": "Triggers when current node expand\n<CodeBlock>{'(node: Node): Promise<void>'}</CodeBlock>",
        "descriptionHtml": "<div class=\"tsd-comment tsd-typography\"><div class=\"lead\">\n<p>Triggers when current node expand\n<CodeBlock>{&#39;(node: Node): Promise<void>&#39;}</CodeBlock></p>\n</div></div>"
      }
    ],
    "description": ""
  },
  "TreeSourceRef": {
    "name": "TreeSourceRef",
    "properties": [
      {
        "name": "setExpandedNodes",
        "required": true,
        "type": "Function",
        "typeDetail": "set<wbr/>Expanded<wbr/>Nodes<span class=\"tsd-signature-symbol\">(</span>expanded<span class=\"tsd-signature-symbol\">: </span><a class=\"tsd-signature-type\" data-tsd-kind=\"Type alias\">NodeId</a><span class=\"tsd-signature-symbol\">[]</span><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">void</span>",
        "description": "",
        "descriptionHtml": "",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L4"
      },
      {
        "name": "setValue",
        "required": true,
        "type": "Function",
        "typeDetail": "set<wbr/>Value<span class=\"tsd-signature-symbol\">&lt;</span><span class=\"tsd-signature-type\" data-tsd-kind=\"Type parameter\">Node</span><span class=\"tsd-signature-symbol\">&gt;</span><span class=\"tsd-signature-symbol\">(</span>nodes<span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\" data-tsd-kind=\"Type parameter\">Node</span><span class=\"tsd-signature-symbol\">[]</span><span class=\"tsd-signature-symbol\">)</span><span class=\"tsd-signature-symbol\">: </span><span class=\"tsd-signature-type\">void</span>",
        "description": "",
        "descriptionHtml": "",
        "sourceFile": "packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts",
        "sourceUrl": "https://github.com/procore/core/blob/4be00958e/packages/core-react/src/components/FileSelect/TreeSource/TreeSource.types.ts#L5"
      }
    ],
    "description": ""
  }
}