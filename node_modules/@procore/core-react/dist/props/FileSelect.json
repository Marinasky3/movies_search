{"FileSelectProps":[{"name":"accept","required":false,"description":"Set accepted file types. Accepts everything if left undefined"},{"name":"hideDropzone","type":"boolean","required":false,"description":"Hide dropzone and render only default \"Attach File(s)\" button."},{"name":"hideLocalSource","type":"boolean","required":false,"description":"Hide local files source in file explorer modal"},{"name":"maxFileNumber","type":"number","required":false,"description":"Maximum number of files that can be selected"},{"name":"maxFileSize","type":"number","required":false,"description":"Maximum file size (in bytes)"},{"name":"minFileSize","type":"number","required":false,"description":"Minimum file size (in bytes)"},{"name":"uploadFile","type":"UploadFile","required":false,"description":"A function for manually controlling the network request for file\nupload. An alternative to using `getEndpoint` which handles\nthe network request itself."},{"name":"beforeLocalFileUpload","type":"Promise","required":true,"description":"Optional async function that is invoked when selecting or dropping in a\nlocal file. If you want to restrict certain uploads, you can use this\ncallback. Returning true continues the upload, while false will prevent\nupload."},{"name":"dropzoneContentRenderer","type":"ReactNode","required":true,"description":"An optional content renderer for the dropzone. Accepts\n`{ open, disabled, errorMessage }` as a single argument,\nallowing to control the dropzone and display different content depending\non dropzone state"},{"name":"getEndpoint","type":"string","required":true,"description":"A function returning an upload URL for a given file. An\nalternative to `uploadFile` which allows manual control of\nthe network request for file upload."},{"name":"getHeaders","type":"Record","required":true,"description":"A function returning an upload request headers. Returns empty\nobject by default."},{"name":"getMethod","type":"Method","required":true,"description":"A function returning an upload HTTP method for a given file.\nReturns `POST` by default."},{"name":"getPayload","type":"FormData","required":true,"description":"A function returning an upload payload `FormData`\nobject for a given file. When defined, `getPayloadKey` is\nignored."},{"name":"getPayloadKey","type":"string","required":true,"description":"A function returning an upload payload `FormData` key\nfor a given file. Returns `file` by default."},{"name":"getTokenLabel","type":"string","required":true,"description":"Customize the token label for a given source value. By default,\n`sourceValueEntry.name` is returned."},{"name":"localSourceDropzoneContentRenderer","type":"ReactNode","required":true},{"name":"onAdd","type":"void","required":true,"description":"To be called every time when the files are uploaded directly or\nattached via file explorer. The input data should be appended to the\ncurrent value. Files with upload errors are omitted."},{"name":"onError","type":"void","required":true,"description":"To be called whenever an upload error occures"},{"name":"onFileTokenClick","type":"void","required":true,"description":"To be called when attached file receives a click"},{"name":"onProgress","type":"void","required":true,"description":"To be called whenever the upload progress is changed"},{"name":"onRemove","type":"void","required":true,"description":"To be called whenever the file is removed by user from the primary token\nlist. Removed item should be deleted from the current value by `id` key"},{"name":"onUploadStateChange","type":"void","required":true,"description":"To be called whenever upload state is changed"}],"FileSelectQaTags":[{"name":"attachButton","type":"string","required":false},{"name":"localSource","type":"","required":false},{"name":"removeEntry","type":"string","required":false}]}