{"InternalTieredDropdownProps":[{"name":"block","type":"boolean","required":false,"description":"Sets the button to be 100% of the width of its parent"},{"name":"children","type":"ReactText","required":true},{"name":"data-qa","type":"string","required":false},{"name":"icon","type":"ReactNode","required":false,"description":"string icons have been deprecated, please pass a component from `@procore/core-icons`\nThe icon to display on the left side of the label"},{"name":"iconRight","type":"ReactNode","required":false,"description":"The icon to display on the right side of the label"},{"name":"loading","type":"boolean","required":false,"description":"Shows the button spinner"},{"name":"options","required":false},{"name":"size","type":"","required":false,"description":"The size of the button"},{"name":"value","required":false},{"name":"variant","type":"","required":false}],"TieredDropdownProps":[{"name":"afterHide","required":false},{"name":"afterShow","required":false},{"name":"beforeHide","type":"BeforeCallback","required":false},{"name":"beforeShow","type":"BeforeCallback","required":false},{"name":"block","type":"boolean","required":false},{"name":"children","type":"ReactText","required":true},{"name":"data-qa","type":"string","required":false},{"name":"disabled","type":"boolean","required":false},{"name":"error","type":"boolean","required":false},{"name":"i18nScope","type":"string","required":false,"description":"The i18n key to use for the tiered select's configurable strings. Defaults to using the core library's default strings."},{"name":"icon","type":"ReactNode","required":false,"description":"string icons have been deprecated, please pass a component from `@procore/core-icons`\nThe icon to display on the left side of the label"},{"name":"iconRight","type":"ReactNode","required":false,"description":"The icon to display on the right side of the label"},{"name":"loading","type":"boolean","required":false},{"name":"loadingMore","type":"boolean","required":false,"description":"Used to display a loading indicator as the last item of the list. Can\nbe used with <Code>onScrollBottom</Code> or <Code>onSearch</Code>{' '}\n(empty <Code>options</Code> during search async call) to indicate the\nloading of new items."},{"name":"onClear","required":false},{"name":"onScrollBottom","required":false},{"name":"onSearch","required":false},{"name":"onSelect","required":true},{"name":"options","required":false,"description":"Flat array of tier objects, this array is used as data for the component"},{"name":"selectableTiers","type":"boolean","required":false,"description":"If true, any tier is selectable. If false, only leaf nodes are selectable"},{"name":"size","type":"","required":false,"description":"The size of the button"},{"name":"tabIndex","type":"number","required":false},{"name":"variant","type":"","required":false},{"name":"getGroupId","type":"Id","required":true,"description":"Callback for using a custom <Code>tier</Code> shape\n<CodeBlock>{'(tier: any) => Id'}</CodeBlock>\nDefaults to <CodeBlock>{'(tier: any) => tier.GroupId'}</CodeBlock>"},{"name":"getId","type":"Id","required":true,"description":"Callback for using a custom <Code>tier</Code> shape\n<CodeBlock>{'(tier: any) => Id'}</CodeBlock>\nDefaults to <CodeBlock>{'(tier: any) => tier.Id'}</CodeBlock>"},{"name":"getLabel","required":true,"description":"Callback for using a custom <Code>tier</Code> shape\n<CodeBlock>{'(tier: any) => string'}</CodeBlock>\nDefaults to <CodeBlock>{'(tier: any) => tier.Label'}</CodeBlock>"},{"name":"getNextGroupId","type":"Id","required":true,"description":"Callback for using a custom <Code>tier</Code> shape\n<CodeBlock>{'(tier: any) => Id'}</CodeBlock>\nDefaults to <CodeBlock>{'(tier: any) => tier.NextGroupId'}</CodeBlock>"},{"name":"isLeaf","type":"boolean","required":true},{"name":"isTierDisabled","required":true},{"name":"onNavigate","type":"void","required":true,"description":"Callback for when navigation occurs. Triggered by the left and right\narrow keys, or clicking a navigable item. Returns the id of the next\ngroup that will be navigated to, and the updated path.\n<CodeBlock>\n {'(nextGroupId: string | number | undefined, path: any[]) => '}\n</CodeBlock>"},{"name":"onQuickCreate","type":"void","required":true,"description":"Pass this callback when a quick create experience is desired. Called\nwhen the \"create\" button in quick create mode is clicked. Returns the\nvalue of the quick create input.\n<CodeBlock>{'(string) =>'}</CodeBlock>"}]}