{"GroupSelectConfig":[{"name":"groups","required":true},{"name":"options","required":true},{"name":"value","required":true},{"name":"getGroup","required":true},{"name":"getId","required":true},{"name":"getLabel","type":"string","required":true},{"name":"onChange","type":"void","required":true},{"name":"onSearch","type":"void","required":true}],"GroupSelectProps":[{"name":"afterHide","required":false},{"name":"afterShow","required":false},{"name":"beforeHide","type":"BeforeCallback","required":false},{"name":"beforeShow","type":"BeforeCallback","required":false},{"name":"block","type":"boolean","required":false},{"name":"className","type":"string","required":false},{"name":"disabled","type":"boolean","required":false},{"name":"emptyMessage","type":"string","required":false},{"name":"error","type":"boolean","required":false},{"name":"groups","required":false,"description":"Array of available collections, field options contain option id's\n`{ id: number label: string options: Option[] groupId?: string | number }`\n`arrayOf: [object]`"},{"name":"loading","type":"boolean","required":false},{"name":"onBlur","type":"FocusEventHandler","required":false},{"name":"onFocus","type":"FocusEventHandler","required":false},{"name":"onScrollBottom","required":false},{"name":"optgroups","required":false,"description":"Array of available option groups"},{"name":"options","required":false,"description":"Array of available options\n`{ id: number label: string groupId?: string | number }`\n`arrayOf: [object]`"},{"name":"placeholder","type":"string","required":false},{"name":"placement","type":"","required":false},{"name":"qa","type":"QaTags","required":false},{"name":"tabIndex","type":"number","required":false},{"name":"value","required":false},{"name":"getGroup","required":true,"description":"Callback for each entry in groups for keying and optimizations\n`(option: T) => Option[]`"},{"name":"getId","required":true},{"name":"getLabel","type":"string","required":true,"description":"Callback for each entry in options to generate the token label, also used for default searching.\n`(option: T) => string`"},{"name":"getOptGroup","required":true,"description":"Callback for each entry in groups and options to define relation in optgroups\n`(option: OptionItem) => number | string`"},{"name":"groupRenderer","type":"ReactNode","required":true,"description":"Callback for rendering each group option\n`(groupOption: T, props: OptionRendererProps) => React.ReactNode`"},{"name":"isOptionDisabled","type":"boolean","required":true},{"name":"onChange","type":"void","required":true,"description":"Callback with options selected when selecting or removing an option\n`(value: T[]) => void`"},{"name":"onSearch","type":"void","required":true},{"name":"optGroupRenderer","type":"ReactNode","required":true,"description":"Callback for rendering header for each entry in `optgroups`\n`(group: GroupItem) => React.ReactNode`"},{"name":"optionRenderer","type":"ReactNode","required":true,"description":"Callback for rendering each option\n`(option: T, props: OptionRendererProps) => React.ReactNode`"},{"name":"tokenRenderer","type":"ReactNode","required":true,"description":"Callback for rendering each selected value\n<CodeBlock>\n {'(props: TokenRendererProps) => React.ReactNode'}\n</CodeBlock>"}],"OptionRendererProps":[{"name":"children","type":"ReactNode","required":false,"description":"Instead of using the default children, you can pass in your own."},{"name":"className","type":"string","required":false,"description":"Additional classNames"},{"name":"disabled","type":"boolean","required":false},{"name":"index","type":"number","required":false},{"name":"ref","type":"Ref","required":false},{"name":"selected","type":"boolean","required":false},{"name":"style","type":"CSSProperties","required":false,"description":"Additional CSS styles"},{"name":"value","type":"any","required":true},{"name":"getId","required":true},{"name":"getLabel","type":"string","required":true,"description":"Callback for each entry in options to generate the token label, also used for default searching.\n`(option: T) => string`"}]}