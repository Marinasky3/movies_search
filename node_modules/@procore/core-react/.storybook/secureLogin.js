window.addEventListener('DOMContentLoaded', function () {
  function clearSession() {
    localStorage.removeItem('access_token')
    localStorage.removeItem('id_token')
    localStorage.removeItem('expires_at')
  }

  function setSession() {
    var authResult =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
    var accessToken = authResult.accessToken,
      idToken = authResult.idToken,
      expiresIn = authResult.expiresIn

    if (accessToken && idToken) {
      var expiresAt = JSON.stringify(expiresIn * 1000 + new Date().getTime())
      localStorage.setItem('access_token', accessToken)
      localStorage.setItem('id_token', idToken)
      localStorage.setItem('expires_at', expiresAt)
    }
  }

  function isAuthExpired() {
    return new Date().getTime() > JSON.parse(localStorage.getItem('expires_at'))
  }

  function needsAuth() {
    if (window.location.hostname === 'localhost') {
      return false
    }

    if (isAuthExpired()) {
      clearSession()
      return true
    }

    return false
  }

  function authUser() {
    //remove storybook body while not logged in
    document.body.innerHTML = ''
    var lock = new Auth0Lock(
      'z7X1PDj8xO6wld6wpiicmw7WbcLph9VF',
      'procore.auth0.com',
      {
        autoclose: true,
        allowSignUp: false,
        auth: {
          audience: 'https://procore.auth0.com/userinfo',
          redirect: false,
          responseType: 'token id_token',
          params: {
            scope: 'openid',
          },
        },
        theme: {
          logo: 'https://images-na.ssl-images-amazon.com/images/I/615dQnf0l1L.png',
        },
      }
    )
    lock.on('authenticated', function (authResult) {
      setSession(authResult)
      window.location.reload()
    })
    lock.on('authorization_error', function () {
      clearSession()
    })
    lock.show()
  }

  if (needsAuth()) {
    authUser()
  }
})
