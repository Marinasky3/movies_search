const GenerateJsonPlugin = require('generate-json-webpack-plugin')
const MiniCssExtractPlugin = require('mini-css-extract-plugin')
const OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin')

const selection = require('./src/selection.json')

const iconsJson = selection.icons.map((icon) => icon.properties.name).sort()

const pathsJson = selection.icons.reduce((acc, { properties, icon }) => {
  return {
    ...acc,
    [properties.name]: icon.paths.join(' '),
  }
}, {})

const config = {
  mode: 'production',
  entry: './src/main.scss',
  module: {
    rules: [
      {
        test: /\.(eot|svg|ttf|woff2?)$/,
        loader: 'file-loader',
        options: {
          esModule: false,
        },
      },
      {
        test: /\.s?css$/,
        use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader'],
      },
    ],
  },
  plugins: [
    new GenerateJsonPlugin('icons.json', iconsJson),
    new GenerateJsonPlugin('paths.json', pathsJson),
    new MiniCssExtractPlugin({
      filename: 'icons.css',
    }),
  ],
}

if (process.env.NODE_ENV === 'production') {
  config.plugins.push(new OptimizeCSSAssetsPlugin())
}

module.exports = config
